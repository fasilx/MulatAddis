{
.appVersion = "3039";
DisplayStrings = (
"/ha.base/hi-ethiopic",
"/_smart.ka/kxi-ethiopic",
"/ya.base",
"/ga.base/ge-ethiopic",
"/raa-ethiopic",
"/ra.base.cap/raa-ethiopic.etcp",
"/raa-ethiopic.etcp",
"/ge-ethiopic",
"/hha.base/the-ethiopic",
"/the-ethiopic",
"/hha.base/che-ethiopic",
"/da.base/di-ethiopic",
"/da.base/di-ethiopic/ddi-ethiopic/ji-ethiopic",
"/taa-ethiopic/me-ethiopic/sze-ethiopic/qaa-ethiopic/qhaa-ethiopic/caa-ethiopic/ke-ethiopic/xaa-ethiopic/ki-ethiopic/ki-ethiopic/ki-ethiopic/taa-ethiopic/wo-ethiopic/oPharyngeal-ethiopic/ki-ethiopic/yaa-ethiopic/gaa-ethiopic/ggaa-ethiopic/tzo-ethiopic/fu-ethiopic/paa-ethiopic/rya-ethiopic/me-ethiopic.etcp/sze-ethiopic.etcp/qaa-ethiopic.etcp/qhaa-ethiopic.etcp/oPharyngeal-ethiopic.etcp/ggaa-ethiopic.etcp/tzo-ethiopic.etcp/fu-ethiopic.etcp",
"/_smart.haa.acute/taa-ethiopic",
"/ta.base/taa-ethiopic",
"/ma.base.cap/ma-ethiopic.etcp",
"/ma.base.cap/mi-ethiopic.etcp",
"/ma.base.cap/mo-ethiopic.etcp",
"/ma.base.cap/mu-ethiopic.etcp",
"/na.base.cap/ma-ethiopic.etcp",
"/ma.base.cap/ma-ethiopic.etcp",
"/ma.base.cap/mi-ethiopic.etcp",
"/ma.base.cap/me-ethiopic.etcp",
"/ma.base.cap/mu-ethiopic.etcp",
"/ma.base.cap/ma-ethiopic.etcp",
"/ma.base.cap/ma-ethiopic.etcp",
"/_smart.eGl/eGlottal-ethiopic.etcp",
"/aGl.base.cap/eGlottal-ethiopic.etcp",
"/aglka.base/eGlottal-ethiopic",
"/_smart.eGl/eGlottal-ethiopic",
"/_smart.aGl/eGlottal-ethiopic",
"/_smart.aGl/eGlottal-ethiopic",
"/_smart.eGl/_smart.eGl/eGlottal-ethiopic",
"/she-ethiopic",
"/aPh.base/tzi-ethiopic",
"/ma.base.cap/ma-ethiopic.etcp",
"/ba.base.cap/sha-ethiopic.etcp",
"/ye-ethiopic.etcp/_smart.ye/ye-ethiopic",
"/ye-ethiopic.etcp/_smart.ye/ye-ethiopic",
"/wa.base.cap/qo-ethiopic.etcp",
"/ga.base",
"/ga.base.cap",
"/ra.base.cap",
"/re.base.cap",
"/aglka.base/eGlottal-ethiopic",
"/ba.base/so-ethiopic"
);
classes = (
{
code = "ha-ethiopic.etcp hu-ethiopic.etcp hi-ethiopic.etcp haa-ethiopic.etcp hee-ethiopic.etcp he-ethiopic.etcp ho-ethiopic.etcp hoa-ethiopic.etcp la-ethiopic.etcp lu-ethiopic.etcp li-ethiopic.etcp laa-ethiopic.etcp lee-ethiopic.etcp le-ethiopic.etcp lo-ethiopic.etcp lwa-ethiopic.etcp hha-ethiopic.etcp hhu-ethiopic.etcp hhi-ethiopic.etcp hhaa-ethiopic.etcp hhee-ethiopic.etcp hhe-ethiopic.etcp hho-ethiopic.etcp hhwa-ethiopic.etcp ma-ethiopic.etcp mu-ethiopic.etcp mi-ethiopic.etcp maa-ethiopic.etcp mee-ethiopic.etcp me-ethiopic.etcp mo-ethiopic.etcp mwa-ethiopic.etcp sza-ethiopic.etcp szu-ethiopic.etcp szi-ethiopic.etcp szaa-ethiopic.etcp szee-ethiopic.etcp sze-ethiopic.etcp szo-ethiopic.etcp szwa-ethiopic.etcp ra-ethiopic.etcp ru-ethiopic.etcp ri-ethiopic.etcp raa-ethiopic.etcp ree-ethiopic.etcp re-ethiopic.etcp ro-ethiopic.etcp rwa-ethiopic.etcp sa-ethiopic.etcp su-ethiopic.etcp si-ethiopic.etcp saa-ethiopic.etcp see-ethiopic.etcp se-ethiopic.etcp so-ethiopic.etcp swa-ethiopic.etcp sha-ethiopic.etcp shu-ethiopic.etcp shi-ethiopic.etcp shaa-ethiopic.etcp shee-ethiopic.etcp she-ethiopic.etcp sho-ethiopic.etcp shwa-ethiopic.etcp qa-ethiopic.etcp qu-ethiopic.etcp qi-ethiopic.etcp qaa-ethiopic.etcp qee-ethiopic.etcp qe-ethiopic.etcp qo-ethiopic.etcp qoa-ethiopic.etcp qwa-ethiopic.etcp qwi-ethiopic.etcp qwaa-ethiopic.etcp qwee-ethiopic.etcp qwe-ethiopic.etcp qha-ethiopic.etcp qhu-ethiopic.etcp qhi-ethiopic.etcp qhaa-ethiopic.etcp qhee-ethiopic.etcp qhe-ethiopic.etcp qho-ethiopic.etcp qhwa-ethiopic.etcp qhwi-ethiopic.etcp qhwaa-ethiopic.etcp qhwee-ethiopic.etcp qhwe-ethiopic.etcp ba-ethiopic.etcp bu-ethiopic.etcp bi-ethiopic.etcp baa-ethiopic.etcp bee-ethiopic.etcp be-ethiopic.etcp bo-ethiopic.etcp bwa-ethiopic.etcp va-ethiopic.etcp vu-ethiopic.etcp vi-ethiopic.etcp vaa-ethiopic.etcp vee-ethiopic.etcp ve-ethiopic.etcp vo-ethiopic.etcp vwa-ethiopic.etcp ta-ethiopic.etcp tu-ethiopic.etcp ti-ethiopic.etcp taa-ethiopic.etcp tee-ethiopic.etcp te-ethiopic.etcp to-ethiopic.etcp twa-ethiopic.etcp ca-ethiopic.etcp cu-ethiopic.etcp ci-ethiopic.etcp caa-ethiopic.etcp cee-ethiopic.etcp ce-ethiopic.etcp co-ethiopic.etcp cwa-ethiopic.etcp xa-ethiopic.etcp xu-ethiopic.etcp xi-ethiopic.etcp xaa-ethiopic.etcp xee-ethiopic.etcp xe-ethiopic.etcp xo-ethiopic.etcp xoa-ethiopic.etcp xwa-ethiopic.etcp xwi-ethiopic.etcp xwaa-ethiopic.etcp xwee-ethiopic.etcp xwe-ethiopic.etcp na-ethiopic.etcp nu-ethiopic.etcp ni-ethiopic.etcp naa-ethiopic.etcp nee-ethiopic.etcp ne-ethiopic.etcp no-ethiopic.etcp nwa-ethiopic.etcp nya-ethiopic.etcp nyu-ethiopic.etcp nyi-ethiopic.etcp nyaa-ethiopic.etcp nyee-ethiopic.etcp nye-ethiopic.etcp nyo-ethiopic.etcp nywa-ethiopic.etcp aGlottal-ethiopic.etcp uGlottal-ethiopic.etcp iGlottal-ethiopic.etcp aaGlottal-ethiopic.etcp eeGlottal-ethiopic.etcp eGlottal-ethiopic.etcp oGlottal-ethiopic.etcp waGlottal-ethiopic.etcp ka-ethiopic.etcp ku-ethiopic.etcp ki-ethiopic.etcp kaa-ethiopic.etcp kee-ethiopic.etcp ke-ethiopic.etcp ko-ethiopic.etcp koa-ethiopic.etcp kwa-ethiopic.etcp kwi-ethiopic.etcp kwaa-ethiopic.etcp kwee-ethiopic.etcp kwe-ethiopic.etcp kxa-ethiopic.etcp kxu-ethiopic.etcp kxi-ethiopic.etcp kxaa-ethiopic.etcp kxee-ethiopic.etcp kxe-ethiopic.etcp kxo-ethiopic.etcp kxwa-ethiopic.etcp kxwi-ethiopic.etcp kxwaa-ethiopic.etcp kxwee-ethiopic.etcp kxwe-ethiopic.etcp wa-ethiopic.etcp wu-ethiopic.etcp wi-ethiopic.etcp waa-ethiopic.etcp wee-ethiopic.etcp we-ethiopic.etcp wo-ethiopic.etcp woa-ethiopic.etcp aPharyngeal-ethiopic.etcp uPharyngeal-ethiopic.etcp iPharyngeal-ethiopic.etcp aaPharyngeal-ethiopic.etcp eePharyngeal-ethiopic.etcp ePharyngeal-ethiopic.etcp oPharyngeal-ethiopic.etcp za-ethiopic.etcp zu-ethiopic.etcp zi-ethiopic.etcp zaa-ethiopic.etcp zee-ethiopic.etcp ze-ethiopic.etcp zo-ethiopic.etcp zwa-ethiopic.etcp zha-ethiopic.etcp zhu-ethiopic.etcp zhi-ethiopic.etcp zhaa-ethiopic.etcp zhee-ethiopic.etcp zhe-ethiopic.etcp zho-ethiopic.etcp zhwa-ethiopic.etcp ya-ethiopic.etcp yu-ethiopic.etcp yi-ethiopic.etcp yaa-ethiopic.etcp yee-ethiopic.etcp ye-ethiopic.etcp yo-ethiopic.etcp yoa-ethiopic.etcp da-ethiopic.etcp du-ethiopic.etcp di-ethiopic.etcp daa-ethiopic.etcp dee-ethiopic.etcp de-ethiopic.etcp do-ethiopic.etcp dwa-ethiopic.etcp dda-ethiopic.etcp ddu-ethiopic.etcp ddi-ethiopic.etcp ddaa-ethiopic.etcp ddee-ethiopic.etcp dde-ethiopic.etcp ddo-ethiopic.etcp ddwa-ethiopic.etcp ja-ethiopic.etcp ju-ethiopic.etcp ji-ethiopic.etcp jaa-ethiopic.etcp jee-ethiopic.etcp je-ethiopic.etcp jo-ethiopic.etcp jwa-ethiopic.etcp ga-ethiopic.etcp gu-ethiopic.etcp gi-ethiopic.etcp gaa-ethiopic.etcp gee-ethiopic.etcp ge-ethiopic.etcp go-ethiopic.etcp goa-ethiopic.etcp gwa-ethiopic.etcp gwi-ethiopic.etcp gwaa-ethiopic.etcp gwee-ethiopic.etcp gwe-ethiopic.etcp gga-ethiopic.etcp ggu-ethiopic.etcp ggi-ethiopic.etcp ggaa-ethiopic.etcp ggee-ethiopic.etcp gge-ethiopic.etcp ggo-ethiopic.etcp ggwaa-ethiopic.etcp tha-ethiopic.etcp thu-ethiopic.etcp thi-ethiopic.etcp thaa-ethiopic.etcp thee-ethiopic.etcp the-ethiopic.etcp tho-ethiopic.etcp thwa-ethiopic.etcp cha-ethiopic.etcp chu-ethiopic.etcp chi-ethiopic.etcp chaa-ethiopic.etcp chee-ethiopic.etcp che-ethiopic.etcp cho-ethiopic.etcp chwa-ethiopic.etcp pha-ethiopic.etcp phu-ethiopic.etcp phi-ethiopic.etcp phaa-ethiopic.etcp phee-ethiopic.etcp phe-ethiopic.etcp pho-ethiopic.etcp phwa-ethiopic.etcp tsa-ethiopic.etcp tsu-ethiopic.etcp tsi-ethiopic.etcp tsaa-ethiopic.etcp tsee-ethiopic.etcp tse-ethiopic.etcp tso-ethiopic.etcp tswa-ethiopic.etcp tza-ethiopic.etcp tzu-ethiopic.etcp tzi-ethiopic.etcp tzaa-ethiopic.etcp tzee-ethiopic.etcp tze-ethiopic.etcp tzo-ethiopic.etcp tzoa-ethiopic.etcp fa-ethiopic.etcp fu-ethiopic.etcp fi-ethiopic.etcp faa-ethiopic.etcp fee-ethiopic.etcp fe-ethiopic.etcp fo-ethiopic.etcp fwa-ethiopic.etcp pa-ethiopic.etcp pu-ethiopic.etcp pi-ethiopic.etcp paa-ethiopic.etcp pee-ethiopic.etcp pe-ethiopic.etcp po-ethiopic.etcp pwa-ethiopic.etcp rya-ethiopic.etcp ";
name = Ethcap;
},
{
code = "ha-ethiopic hu-ethiopic hi-ethiopic haa-ethiopic hee-ethiopic he-ethiopic ho-ethiopic hoa-ethiopic la-ethiopic lu-ethiopic li-ethiopic laa-ethiopic lee-ethiopic le-ethiopic lo-ethiopic lwa-ethiopic hha-ethiopic hhu-ethiopic hhi-ethiopic hhaa-ethiopic hhee-ethiopic hhe-ethiopic hho-ethiopic hhwa-ethiopic ma-ethiopic mu-ethiopic mi-ethiopic maa-ethiopic mee-ethiopic me-ethiopic mo-ethiopic mwa-ethiopic sza-ethiopic szu-ethiopic szi-ethiopic szaa-ethiopic szee-ethiopic sze-ethiopic szo-ethiopic szwa-ethiopic ra-ethiopic ru-ethiopic ri-ethiopic raa-ethiopic ree-ethiopic re-ethiopic ro-ethiopic rwa-ethiopic sa-ethiopic su-ethiopic si-ethiopic saa-ethiopic see-ethiopic se-ethiopic so-ethiopic swa-ethiopic sha-ethiopic shu-ethiopic shi-ethiopic shaa-ethiopic shee-ethiopic she-ethiopic sho-ethiopic shwa-ethiopic qa-ethiopic qu-ethiopic qi-ethiopic qaa-ethiopic qee-ethiopic qe-ethiopic qo-ethiopic qoa-ethiopic qwa-ethiopic qwi-ethiopic qwaa-ethiopic qwee-ethiopic qwe-ethiopic qha-ethiopic qhu-ethiopic qhi-ethiopic qhaa-ethiopic qhee-ethiopic qhe-ethiopic qho-ethiopic qhwa-ethiopic qhwi-ethiopic qhwaa-ethiopic qhwee-ethiopic qhwe-ethiopic ba-ethiopic bu-ethiopic bi-ethiopic baa-ethiopic bee-ethiopic be-ethiopic bo-ethiopic bwa-ethiopic va-ethiopic vu-ethiopic vi-ethiopic vaa-ethiopic vee-ethiopic ve-ethiopic vo-ethiopic vwa-ethiopic ta-ethiopic tu-ethiopic ti-ethiopic taa-ethiopic tee-ethiopic te-ethiopic to-ethiopic twa-ethiopic ca-ethiopic cu-ethiopic ci-ethiopic caa-ethiopic cee-ethiopic ce-ethiopic co-ethiopic cwa-ethiopic xa-ethiopic xu-ethiopic xi-ethiopic xaa-ethiopic xee-ethiopic xe-ethiopic xo-ethiopic xoa-ethiopic xwa-ethiopic xwi-ethiopic xwaa-ethiopic xwee-ethiopic xwe-ethiopic na-ethiopic nu-ethiopic ni-ethiopic naa-ethiopic nee-ethiopic ne-ethiopic no-ethiopic nwa-ethiopic nya-ethiopic nyu-ethiopic nyi-ethiopic nyaa-ethiopic nyee-ethiopic nye-ethiopic nyo-ethiopic nywa-ethiopic aGlottal-ethiopic uGlottal-ethiopic iGlottal-ethiopic aaGlottal-ethiopic eeGlottal-ethiopic eGlottal-ethiopic oGlottal-ethiopic waGlottal-ethiopic ka-ethiopic ku-ethiopic ki-ethiopic kaa-ethiopic kee-ethiopic ke-ethiopic ko-ethiopic koa-ethiopic kwa-ethiopic kwi-ethiopic kwaa-ethiopic kwee-ethiopic kwe-ethiopic kxa-ethiopic kxu-ethiopic kxi-ethiopic kxaa-ethiopic kxee-ethiopic kxe-ethiopic kxo-ethiopic kxwa-ethiopic kxwi-ethiopic kxwaa-ethiopic kxwee-ethiopic kxwe-ethiopic wa-ethiopic wu-ethiopic wi-ethiopic waa-ethiopic wee-ethiopic we-ethiopic wo-ethiopic woa-ethiopic aPharyngeal-ethiopic uPharyngeal-ethiopic iPharyngeal-ethiopic aaPharyngeal-ethiopic eePharyngeal-ethiopic ePharyngeal-ethiopic oPharyngeal-ethiopic za-ethiopic zu-ethiopic zi-ethiopic zaa-ethiopic zee-ethiopic ze-ethiopic zo-ethiopic zwa-ethiopic zha-ethiopic zhu-ethiopic zhi-ethiopic zhaa-ethiopic zhee-ethiopic zhe-ethiopic zho-ethiopic zhwa-ethiopic ya-ethiopic yu-ethiopic yi-ethiopic yaa-ethiopic yee-ethiopic ye-ethiopic yo-ethiopic yoa-ethiopic da-ethiopic du-ethiopic di-ethiopic daa-ethiopic dee-ethiopic de-ethiopic do-ethiopic dwa-ethiopic dda-ethiopic ddu-ethiopic ddi-ethiopic ddaa-ethiopic ddee-ethiopic dde-ethiopic ddo-ethiopic ddwa-ethiopic ja-ethiopic ju-ethiopic ji-ethiopic jaa-ethiopic jee-ethiopic je-ethiopic jo-ethiopic jwa-ethiopic ga-ethiopic gu-ethiopic gi-ethiopic gaa-ethiopic gee-ethiopic ge-ethiopic go-ethiopic goa-ethiopic gwa-ethiopic gwi-ethiopic gwaa-ethiopic gwee-ethiopic gwe-ethiopic gga-ethiopic ggu-ethiopic ggi-ethiopic ggaa-ethiopic ggee-ethiopic gge-ethiopic ggo-ethiopic ggwaa-ethiopic tha-ethiopic thu-ethiopic thi-ethiopic thaa-ethiopic thee-ethiopic the-ethiopic tho-ethiopic thwa-ethiopic cha-ethiopic chu-ethiopic chi-ethiopic chaa-ethiopic chee-ethiopic che-ethiopic cho-ethiopic chwa-ethiopic pha-ethiopic phu-ethiopic phi-ethiopic phaa-ethiopic phee-ethiopic phe-ethiopic pho-ethiopic phwa-ethiopic tsa-ethiopic tsu-ethiopic tsi-ethiopic tsaa-ethiopic tsee-ethiopic tse-ethiopic tso-ethiopic tswa-ethiopic tza-ethiopic tzu-ethiopic tzi-ethiopic tzaa-ethiopic tzee-ethiopic tze-ethiopic tzo-ethiopic tzoa-ethiopic fa-ethiopic fu-ethiopic fi-ethiopic faa-ethiopic fee-ethiopic fe-ethiopic fo-ethiopic fwa-ethiopic pa-ethiopic pu-ethiopic pi-ethiopic paa-ethiopic pee-ethiopic pe-ethiopic po-ethiopic pwa-ethiopic rya-ethiopic ";
name = Ethsmall;
},
{
code = "uGlottal-ethiopic ddu-ethiopic ju-ethiopic su-ethiopic nyu-ethiopic tzu-ethiopic vu-ethiopic lu-ethiopic mu-ethiopic tsu-ethiopic szu-ethiopic tu-ethiopic je-ethiopic cu-ethiopic phu-ethiopic kxu-ethiopic thu-ethiopic nu-ethiopic zhu-ethiopic du-ethiopic chu-ethiopic wu-ethiopic hhu-ethiopic de-ethiopic hu-ethiopic uPharyngeal-ethiopic gu-ethiopic dde-ethiopic zu-ethiopic yoa-ethiopic ggu-ethiopic xu-ethiopic shu-ethiopic lo-ethiopic bu-ethiopic ku-ethiopic";
name = Hu;
},
{
automatic = 1;
code = "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z Adieresis Aring Ccedilla Eacute Ntilde Odieresis Udieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave ecircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve ocircumflex odieresis otilde uacute ugrave ucircumflex udieresis germandbls AE Oslash pi ordfeminine ordmasculine Omegagreek ae oslash Agrave Atilde Otilde OE oe ydieresis Ydieresis fl Acircumflex Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex Ograve Uacute Ucircumflex Ugrave dotlessi Lslash lslash Scaron scaron Yacute yacute Thorn thorn Zcaron zcaron eth ffl ff st Q.alt Eth J.alt f_f_i f_i ha-ethiopic hu-ethiopic hi-ethiopic haa-ethiopic hee-ethiopic he-ethiopic ho-ethiopic hoa-ethiopic la-ethiopic lu-ethiopic li-ethiopic laa-ethiopic lee-ethiopic le-ethiopic lo-ethiopic lwa-ethiopic hha-ethiopic hhu-ethiopic hhi-ethiopic hhaa-ethiopic hhee-ethiopic hhe-ethiopic hho-ethiopic hhwa-ethiopic ma-ethiopic mu-ethiopic mi-ethiopic maa-ethiopic mee-ethiopic me-ethiopic mo-ethiopic mwa-ethiopic sza-ethiopic szu-ethiopic szi-ethiopic szaa-ethiopic szee-ethiopic sze-ethiopic szo-ethiopic szwa-ethiopic ra-ethiopic ru-ethiopic ri-ethiopic raa-ethiopic ree-ethiopic re-ethiopic ro-ethiopic rwa-ethiopic sa-ethiopic su-ethiopic si-ethiopic saa-ethiopic see-ethiopic se-ethiopic so-ethiopic swa-ethiopic sha-ethiopic shu-ethiopic shi-ethiopic shaa-ethiopic shee-ethiopic she-ethiopic sho-ethiopic shwa-ethiopic qa-ethiopic qu-ethiopic qi-ethiopic qaa-ethiopic qee-ethiopic qe-ethiopic qo-ethiopic qoa-ethiopic qwa-ethiopic qwi-ethiopic qwaa-ethiopic qwee-ethiopic qwe-ethiopic qha-ethiopic qhu-ethiopic qhi-ethiopic qhaa-ethiopic qhee-ethiopic qhe-ethiopic qho-ethiopic qhwa-ethiopic qhwi-ethiopic qhwaa-ethiopic qhwee-ethiopic qhwe-ethiopic ba-ethiopic bu-ethiopic bi-ethiopic baa-ethiopic bee-ethiopic be-ethiopic bo-ethiopic bwa-ethiopic va-ethiopic vu-ethiopic vi-ethiopic vaa-ethiopic vee-ethiopic ve-ethiopic vo-ethiopic vwa-ethiopic ta-ethiopic tu-ethiopic ti-ethiopic taa-ethiopic tee-ethiopic te-ethiopic to-ethiopic twa-ethiopic ca-ethiopic cu-ethiopic ci-ethiopic caa-ethiopic cee-ethiopic ce-ethiopic co-ethiopic cwa-ethiopic xa-ethiopic xu-ethiopic xi-ethiopic xaa-ethiopic xee-ethiopic xe-ethiopic xo-ethiopic xoa-ethiopic xwa-ethiopic xwi-ethiopic xwaa-ethiopic xwee-ethiopic xwe-ethiopic na-ethiopic nu-ethiopic ni-ethiopic naa-ethiopic nee-ethiopic ne-ethiopic no-ethiopic nwa-ethiopic nya-ethiopic nyu-ethiopic nyi-ethiopic nyaa-ethiopic nyee-ethiopic nye-ethiopic nyo-ethiopic nywa-ethiopic aGlottal-ethiopic uGlottal-ethiopic iGlottal-ethiopic aaGlottal-ethiopic eeGlottal-ethiopic eGlottal-ethiopic oGlottal-ethiopic waGlottal-ethiopic ka-ethiopic ku-ethiopic ki-ethiopic kaa-ethiopic kee-ethiopic ke-ethiopic ko-ethiopic koa-ethiopic kwa-ethiopic kwi-ethiopic kwaa-ethiopic kwee-ethiopic kwe-ethiopic kxa-ethiopic kxu-ethiopic kxi-ethiopic kxaa-ethiopic kxee-ethiopic kxe-ethiopic kxo-ethiopic kxwa-ethiopic kxwi-ethiopic kxwaa-ethiopic kxwee-ethiopic kxwe-ethiopic wa-ethiopic wu-ethiopic wi-ethiopic waa-ethiopic wee-ethiopic we-ethiopic wo-ethiopic woa-ethiopic aPharyngeal-ethiopic uPharyngeal-ethiopic iPharyngeal-ethiopic aaPharyngeal-ethiopic eePharyngeal-ethiopic ePharyngeal-ethiopic oPharyngeal-ethiopic za-ethiopic zu-ethiopic zi-ethiopic zaa-ethiopic zee-ethiopic ze-ethiopic zo-ethiopic zwa-ethiopic zha-ethiopic zhu-ethiopic zhi-ethiopic zhaa-ethiopic zhee-ethiopic zhe-ethiopic zho-ethiopic zhwa-ethiopic ya-ethiopic yu-ethiopic yi-ethiopic yaa-ethiopic yee-ethiopic ye-ethiopic yo-ethiopic yoa-ethiopic da-ethiopic du-ethiopic di-ethiopic daa-ethiopic dee-ethiopic de-ethiopic do-ethiopic dwa-ethiopic dda-ethiopic ddu-ethiopic ddi-ethiopic ddaa-ethiopic ddee-ethiopic dde-ethiopic ddo-ethiopic ddwa-ethiopic ja-ethiopic ju-ethiopic ji-ethiopic jaa-ethiopic jee-ethiopic je-ethiopic jo-ethiopic jwa-ethiopic ga-ethiopic gu-ethiopic gi-ethiopic gaa-ethiopic gee-ethiopic ge-ethiopic go-ethiopic goa-ethiopic gwa-ethiopic gwi-ethiopic gwaa-ethiopic gwee-ethiopic gwe-ethiopic gga-ethiopic ggu-ethiopic ggi-ethiopic ggaa-ethiopic ggee-ethiopic gge-ethiopic ggo-ethiopic ggwaa-ethiopic tha-ethiopic thu-ethiopic thi-ethiopic thaa-ethiopic thee-ethiopic the-ethiopic tho-ethiopic thwa-ethiopic cha-ethiopic chu-ethiopic chi-ethiopic chaa-ethiopic chee-ethiopic che-ethiopic cho-ethiopic chwa-ethiopic pha-ethiopic phu-ethiopic phi-ethiopic phaa-ethiopic phee-ethiopic phe-ethiopic pho-ethiopic phwa-ethiopic tsa-ethiopic tsu-ethiopic tsi-ethiopic tsaa-ethiopic tsee-ethiopic tse-ethiopic tso-ethiopic tswa-ethiopic tza-ethiopic tzu-ethiopic tzi-ethiopic tzaa-ethiopic tzee-ethiopic tze-ethiopic tzo-ethiopic tzoa-ethiopic fa-ethiopic fu-ethiopic fi-ethiopic faa-ethiopic fee-ethiopic fe-ethiopic fo-ethiopic fwa-ethiopic pa-ethiopic pu-ethiopic pi-ethiopic paa-ethiopic pee-ethiopic pe-ethiopic po-ethiopic pwa-ethiopic rya-ethiopic ha-ethiopic.etcp hu-ethiopic.etcp hi-ethiopic.etcp haa-ethiopic.etcp hee-ethiopic.etcp he-ethiopic.etcp ho-ethiopic.etcp hoa-ethiopic.etcp la-ethiopic.etcp lu-ethiopic.etcp li-ethiopic.etcp laa-ethiopic.etcp lee-ethiopic.etcp le-ethiopic.etcp lo-ethiopic.etcp lwa-ethiopic.etcp hha-ethiopic.etcp hhu-ethiopic.etcp hhi-ethiopic.etcp hhaa-ethiopic.etcp hhee-ethiopic.etcp hhe-ethiopic.etcp hho-ethiopic.etcp hhwa-ethiopic.etcp ma-ethiopic.etcp mu-ethiopic.etcp mi-ethiopic.etcp maa-ethiopic.etcp mee-ethiopic.etcp me-ethiopic.etcp mo-ethiopic.etcp mwa-ethiopic.etcp sza-ethiopic.etcp szu-ethiopic.etcp szi-ethiopic.etcp szaa-ethiopic.etcp szee-ethiopic.etcp sze-ethiopic.etcp szo-ethiopic.etcp szwa-ethiopic.etcp ra-ethiopic.etcp ru-ethiopic.etcp ri-ethiopic.etcp raa-ethiopic.etcp ree-ethiopic.etcp re-ethiopic.etcp ro-ethiopic.etcp rwa-ethiopic.etcp sa-ethiopic.etcp su-ethiopic.etcp si-ethiopic.etcp saa-ethiopic.etcp see-ethiopic.etcp se-ethiopic.etcp so-ethiopic.etcp swa-ethiopic.etcp sha-ethiopic.etcp shu-ethiopic.etcp shi-ethiopic.etcp shaa-ethiopic.etcp shee-ethiopic.etcp she-ethiopic.etcp sho-ethiopic.etcp shwa-ethiopic.etcp qa-ethiopic.etcp qu-ethiopic.etcp qi-ethiopic.etcp qaa-ethiopic.etcp qee-ethiopic.etcp qe-ethiopic.etcp qo-ethiopic.etcp qoa-ethiopic.etcp qwa-ethiopic.etcp qwi-ethiopic.etcp qwaa-ethiopic.etcp qwee-ethiopic.etcp qwe-ethiopic.etcp qha-ethiopic.etcp qhu-ethiopic.etcp qhi-ethiopic.etcp qhaa-ethiopic.etcp qhee-ethiopic.etcp qhe-ethiopic.etcp qho-ethiopic.etcp qhwa-ethiopic.etcp qhwi-ethiopic.etcp qhwaa-ethiopic.etcp qhwee-ethiopic.etcp qhwe-ethiopic.etcp ba-ethiopic.etcp bu-ethiopic.etcp bi-ethiopic.etcp baa-ethiopic.etcp bee-ethiopic.etcp be-ethiopic.etcp bo-ethiopic.etcp bwa-ethiopic.etcp va-ethiopic.etcp vu-ethiopic.etcp vi-ethiopic.etcp vaa-ethiopic.etcp vee-ethiopic.etcp ve-ethiopic.etcp vo-ethiopic.etcp vwa-ethiopic.etcp ta-ethiopic.etcp tu-ethiopic.etcp ti-ethiopic.etcp taa-ethiopic.etcp tee-ethiopic.etcp te-ethiopic.etcp to-ethiopic.etcp twa-ethiopic.etcp ca-ethiopic.etcp cu-ethiopic.etcp ci-ethiopic.etcp caa-ethiopic.etcp cee-ethiopic.etcp ce-ethiopic.etcp co-ethiopic.etcp cwa-ethiopic.etcp xa-ethiopic.etcp xu-ethiopic.etcp xi-ethiopic.etcp xaa-ethiopic.etcp xee-ethiopic.etcp xe-ethiopic.etcp xo-ethiopic.etcp xoa-ethiopic.etcp xwa-ethiopic.etcp xwi-ethiopic.etcp xwaa-ethiopic.etcp xwee-ethiopic.etcp xwe-ethiopic.etcp na-ethiopic.etcp nu-ethiopic.etcp ni-ethiopic.etcp naa-ethiopic.etcp nee-ethiopic.etcp ne-ethiopic.etcp no-ethiopic.etcp nwa-ethiopic.etcp nya-ethiopic.etcp nyu-ethiopic.etcp nyi-ethiopic.etcp nyaa-ethiopic.etcp nyee-ethiopic.etcp nye-ethiopic.etcp nyo-ethiopic.etcp nywa-ethiopic.etcp aGlottal-ethiopic.etcp uGlottal-ethiopic.etcp iGlottal-ethiopic.etcp aaGlottal-ethiopic.etcp eeGlottal-ethiopic.etcp eGlottal-ethiopic.etcp oGlottal-ethiopic.etcp waGlottal-ethiopic.etcp ka-ethiopic.etcp ku-ethiopic.etcp ki-ethiopic.etcp kaa-ethiopic.etcp kee-ethiopic.etcp ke-ethiopic.etcp ko-ethiopic.etcp koa-ethiopic.etcp kwa-ethiopic.etcp kwi-ethiopic.etcp kwaa-ethiopic.etcp kwee-ethiopic.etcp kwe-ethiopic.etcp kxa-ethiopic.etcp kxu-ethiopic.etcp kxi-ethiopic.etcp kxaa-ethiopic.etcp kxee-ethiopic.etcp kxe-ethiopic.etcp kxo-ethiopic.etcp kxwa-ethiopic.etcp kxwi-ethiopic.etcp kxwaa-ethiopic.etcp kxwee-ethiopic.etcp kxwe-ethiopic.etcp wa-ethiopic.etcp wu-ethiopic.etcp wi-ethiopic.etcp waa-ethiopic.etcp wee-ethiopic.etcp we-ethiopic.etcp wo-ethiopic.etcp woa-ethiopic.etcp aPharyngeal-ethiopic.etcp uPharyngeal-ethiopic.etcp iPharyngeal-ethiopic.etcp aaPharyngeal-ethiopic.etcp eePharyngeal-ethiopic.etcp ePharyngeal-ethiopic.etcp oPharyngeal-ethiopic.etcp za-ethiopic.etcp zu-ethiopic.etcp zi-ethiopic.etcp zaa-ethiopic.etcp zee-ethiopic.etcp ze-ethiopic.etcp zo-ethiopic.etcp zwa-ethiopic.etcp zha-ethiopic.etcp zhu-ethiopic.etcp zhi-ethiopic.etcp zhaa-ethiopic.etcp zhee-ethiopic.etcp zhe-ethiopic.etcp zho-ethiopic.etcp zhwa-ethiopic.etcp ya-ethiopic.etcp yu-ethiopic.etcp yi-ethiopic.etcp yaa-ethiopic.etcp yee-ethiopic.etcp ye-ethiopic.etcp yo-ethiopic.etcp yoa-ethiopic.etcp da-ethiopic.etcp du-ethiopic.etcp di-ethiopic.etcp daa-ethiopic.etcp dee-ethiopic.etcp de-ethiopic.etcp do-ethiopic.etcp dwa-ethiopic.etcp dda-ethiopic.etcp ddu-ethiopic.etcp ddi-ethiopic.etcp ddaa-ethiopic.etcp ddee-ethiopic.etcp dde-ethiopic.etcp ddo-ethiopic.etcp ddwa-ethiopic.etcp ja-ethiopic.etcp ju-ethiopic.etcp ji-ethiopic.etcp jaa-ethiopic.etcp jee-ethiopic.etcp je-ethiopic.etcp jo-ethiopic.etcp jwa-ethiopic.etcp ga-ethiopic.etcp gu-ethiopic.etcp gi-ethiopic.etcp gaa-ethiopic.etcp gee-ethiopic.etcp ge-ethiopic.etcp go-ethiopic.etcp goa-ethiopic.etcp gwa-ethiopic.etcp gwi-ethiopic.etcp gwaa-ethiopic.etcp gwee-ethiopic.etcp gwe-ethiopic.etcp gga-ethiopic.etcp ggu-ethiopic.etcp ggi-ethiopic.etcp ggaa-ethiopic.etcp ggee-ethiopic.etcp gge-ethiopic.etcp ggo-ethiopic.etcp ggwaa-ethiopic.etcp tha-ethiopic.etcp thu-ethiopic.etcp thi-ethiopic.etcp thaa-ethiopic.etcp thee-ethiopic.etcp the-ethiopic.etcp tho-ethiopic.etcp thwa-ethiopic.etcp cha-ethiopic.etcp chu-ethiopic.etcp chi-ethiopic.etcp chaa-ethiopic.etcp chee-ethiopic.etcp che-ethiopic.etcp cho-ethiopic.etcp chwa-ethiopic.etcp pha-ethiopic.etcp phu-ethiopic.etcp phi-ethiopic.etcp phaa-ethiopic.etcp phee-ethiopic.etcp phe-ethiopic.etcp pho-ethiopic.etcp phwa-ethiopic.etcp tsa-ethiopic.etcp tsu-ethiopic.etcp tsi-ethiopic.etcp tsaa-ethiopic.etcp tsee-ethiopic.etcp tse-ethiopic.etcp tso-ethiopic.etcp tswa-ethiopic.etcp tza-ethiopic.etcp tzu-ethiopic.etcp tzi-ethiopic.etcp tzaa-ethiopic.etcp tzee-ethiopic.etcp tze-ethiopic.etcp tzo-ethiopic.etcp tzoa-ethiopic.etcp fa-ethiopic.etcp fu-ethiopic.etcp fi-ethiopic.etcp faa-ethiopic.etcp fee-ethiopic.etcp fe-ethiopic.etcp fo-ethiopic.etcp fwa-ethiopic.etcp pa-ethiopic.etcp pu-ethiopic.etcp pi-ethiopic.etcp paa-ethiopic.etcp pee-ethiopic.etcp pe-ethiopic.etcp po-ethiopic.etcp pwa-ethiopic.etcp rya-ethiopic.etcp";
name = AllLetters;
}
);
copyright = "\"Copyright 2020 The Mulat Project Authors (fasilx)";
customParameters = (
{
name = unicodeRanges;
value = (
0,
1,
5,
6,
31,
75
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
CR,
space,
controlNULL,
controlBS,
controlHT,
controlGS,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
Adieresis,
Aring,
Ccedilla,
Eacute,
Ntilde,
Odieresis,
Udieresis,
aacute,
agrave,
acircumflex,
adieresis,
atilde,
aring,
ccedilla,
eacute,
egrave,
ecircumflex,
edieresis,
iacute,
igrave,
icircumflex,
idieresis,
ntilde,
oacute,
ograve,
ocircumflex,
odieresis,
otilde,
uacute,
ugrave,
ucircumflex,
udieresis,
dagger,
degree,
cent,
sterling,
section,
bullet,
paragraph,
germandbls,
registered,
copyright,
trademark,
acute,
dieresis,
notequal,
AE,
Oslash,
infinity,
plusminus,
lessequal,
greaterequal,
yen,
mu,
partialdiff,
summation,
product,
pi,
integral,
ordfeminine,
ordmasculine,
Omegagreek,
ae,
oslash,
questiondown,
exclamdown,
logicalnot,
radical,
florin,
approxequal,
Delta,
guillemotleft,
guillemotright,
ellipsis,
nonbreakingspace,
Agrave,
Atilde,
Otilde,
OE,
oe,
endash,
emdash,
quotedblleft,
quotedblright,
quoteleft,
quoteright,
divide,
lozenge,
ydieresis,
Ydieresis,
fraction,
Euro,
guilsinglleft,
guilsinglright,
fi,
fl,
daggerdbl,
periodcentered,
quotesinglbase,
quotedblbase,
perthousand,
Acircumflex,
Ecircumflex,
Aacute,
Edieresis,
Egrave,
Iacute,
Icircumflex,
Idieresis,
Igrave,
Oacute,
Ocircumflex,
apple,
Ograve,
Uacute,
Ucircumflex,
Ugrave,
dotlessi,
circumflex,
tilde,
macron,
breve,
dotaccent,
ring,
cedilla,
hungarumlaut,
ogonek,
caron,
Lslash,
lslash,
Scaron,
scaron,
Yacute,
yacute,
gid236,
Thorn,
thorn,
gid239,
Zcaron,
zcaron,
onehalf,
onequarter,
onesuperior,
threequarters,
threesuperior,
twosuperior,
brokenbar,
multiply,
eth,
gid251,
gid252,
gid253,
gid254,
featheredleftarrow,
softhyphen,
ffl,
horizontalbar,
ff,
ffi,
st,
blackdiamond,
featheredrightarrow,
feathereddownarrow,
ampersand.alt,
feathereduparrow,
Q.alt,
ampersand.small,
Omega,
currency,
gravecmb,
acutecmb,
circumflexcmb,
tildecmb,
macroncmb,
brevecmb,
dotaccentcmb,
dieresiscmb,
ringcmb,
hungarumlautcmb,
caroncmb,
cedillacmb,
ogonekcmb,
soliduslongoverlaycmb,
Eth,
ct,
J.alt,
emdash.alt,
zero.oldstyle,
one.oldstyle,
two.oldstyle,
three.oldstyle,
four.oldstyle,
five.oldstyle,
six.oldstyle,
seven.oldstyle,
eight.oldstyle,
nine.oldstyle,
a.small,
b.small,
c.small,
d.small,
e.small,
f.small,
g.small,
h.small,
i.small,
j.small,
k.small,
l.small,
m.small,
n.small,
o.small,
p.small,
q.small,
r.small,
s.small,
t.small,
u.small,
v.small,
w.small,
x.small,
y.small,
z.small,
agrave.small,
aacute.small,
acircumflex.small,
atilde.small,
adieresis.small,
aring.small,
ae.small,
ccedilla.small,
egrave.small,
eacute.small,
ecircumflex.small,
edieresis.small,
igrave.small,
iacute.small,
icircumflex.small,
idieresis.small,
eth.small,
ntilde.small,
ograve.small,
oacute.small,
ocircumflex.small,
otilde.small,
odieresis.small,
oslash.small,
ugrave.small,
uacute.small,
ucircumflex.small,
udieresis.small,
yacute.small,
thorn.small,
ydieresis.small,
germandbls.small,
gid357,
kreska,
kreska.cmb,
clickdental,
clicklateral,
centigrade,
fahrenheit,
kelvin,
angstrom,
Oneroman,
Tworoman,
Threeroman,
Fourroman,
Fiveroman,
Sixroman,
Sevenroman,
Eightroman,
Nineroman,
Tenroman,
Elevenroman,
Twelveroman,
uni216C,
uni216D,
uni216E,
uni216F,
oneroman,
tworoman,
threeroman,
fourroman,
fiveroman,
sixroman,
sevenroman,
eightroman,
nineroman,
tenroman,
elevenroman,
twelveroman,
uni217C,
uni217D,
uni217E,
thousandroman,
Dcroat,
Ibreve,
ibreve,
Idotaccent,
IJ,
ij,
Jcircumflex,
napostrophe,
clickretroflex,
DZcaron,
Dzcaron,
dzcaron,
LJ,
Lj,
lj,
NJ,
Nj,
nj,
Acaron,
acaron,
Icaron,
icaron,
Ocaron,
ocaron,
Ucaron,
ucaron,
Udieresismacron,
udieresismacron,
Udieresisacute,
udieresisacute,
Udieresiscaron,
udieresiscaron,
Udieresisgrave,
udieresisgrave,
Adieresismacron,
adieresismacron,
Adotmacron,
adotmacron,
AEmacron,
aemacron,
Gcaron,
gcaron,
Kcaron,
kcaron,
Oogonek,
oogonek,
Oogonekmacron,
oogonekmacron,
DZ,
Dz,
dz,
Gacute,
gacute,
Ngrave,
ngrave,
Aringacute,
aringacute,
AEacute,
aeacute,
Oslashacute,
oslashacute,
Hcaron,
hcaron,
Adotaccent,
adotaccent,
Ecedilla,
ecedilla,
Odieresismacron,
odieresismacron,
Otildemacron,
otildemacron,
Odotaccent,
odotaccent,
Odotaccentmacron,
odotaccentmacron,
Ymacron,
ymacron,
commaturnedmod,
afii57929,
uni02EE,
palochkacyrillic,
Aringbelow,
aringbelow,
Bdotaccent,
bdotaccent,
Bdotbelow,
bdotbelow,
Blinebelow,
blinebelow,
Ccedillaacute,
ccedillaacute,
Ddotaccent,
ddotaccent,
Ddotbelow,
ddotbelow,
Dlinebelow,
dlinebelow,
Dcircumflexbelow,
dcircumflexbelow,
Emacrongrave,
emacrongrave,
Emacronacute,
emacronacute,
Ecircumflexbelow,
ecircumflexbelow,
Etildebelow,
etildebelow,
Ecedillabreve,
ecedillabreve,
Fdotaccent,
fdotaccent,
Gmacron,
gmacron,
Hdotaccent,
hdotaccent,
Hdotbelow,
hdotbelow,
Hdieresis,
hdieresis,
Hcedilla,
hcedilla,
Hbrevebelow,
hbrevebelow,
Itildebelow,
itildebelow,
Idieresisacute,
idieresisacute,
Kacute,
kacute,
Kdotbelow,
kdotbelow,
Klinebelow,
klinebelow,
Ldotbelow,
ldotbelow,
Ldotbelowmacron,
ldotbelowmacron,
Llinebelow,
llinebelow,
Lcircumflexbelow,
lcircumflexbelow,
Macute,
macute,
Mdotaccent,
mdotaccent,
Mdotbelow,
mdotbelow,
Ndotaccent,
ndotaccent,
Ndotbelow,
ndotbelow,
Nlinebelow,
nlinebelow,
Ncircumflexbelow,
ncircumflexbelow,
Otildeacute,
otildeacute,
Otildedieresis,
otildedieresis,
Omacrongrave,
omacrongrave,
Omacronacute,
omacronacute,
Pacute,
pacute,
Pdotaccent,
pdotaccent,
Rdotaccent,
rdotaccent,
Rdotbelow,
rdotbelow,
Rdotbelowmacron,
rdotbelowmacron,
Rlinebelow,
rlinebelow,
Sdotaccent,
sdotaccent,
Sdotbelow,
sdotbelow,
Sacutedotaccent,
sacutedotaccent,
Scarondotaccent,
scarondotaccent,
Sdotbelowdotaccent,
sdotbelowdotaccent,
Tdotaccent,
tdotaccent,
Tdotbelow,
tdotbelow,
Tlinebelow,
tlinebelow,
Tcircumflexbelow,
tcircumflexbelow,
Udieresisbelow,
udieresisbelow,
Utildebelow,
utildebelow,
Ucircumflexbelow,
ucircumflexbelow,
Utildeacute,
utildeacute,
Umacrondieresis,
umacrondieresis,
Vtilde,
vtilde,
Vdotbelow,
vdotbelow,
Wgrave,
wgrave,
Wacute,
wacute,
Wdieresis,
wdieresis,
Wdotaccent,
wdotaccent,
Wdotbelow,
wdotbelow,
Xdotaccent,
xdotaccent,
Xdieresis,
xdieresis,
Ydotaccent,
ydotaccent,
Zcircumflex,
zcircumflex,
Zdotbelow,
zdotbelow,
Zlinebelow,
zlinebelow,
hlinebelow,
tdieresis,
wring,
yring,
Adotbelow,
adotbelow,
Acircumflexacute,
acircumflexacute,
Acircumflexgrave,
acircumflexgrave,
Acircumflextilde,
acircumflextilde,
Acircumflexdotbelow,
acircumflexdotbelow,
Abreveacute,
abreveacute,
Abrevegrave,
abrevegrave,
Abrevetilde,
abrevetilde,
Abrevedotbelow,
abrevedotbelow,
Edotbelow,
edotbelow,
Etilde,
etilde,
Ecircumflexacute,
ecircumflexacute,
Ecircumflexgrave,
ecircumflexgrave,
Ecircumflextilde,
ecircumflextilde,
Ecircumflexdotbelow,
ecircumflexdotbelow,
Idotbelow,
idotbelow,
Odotbelow,
odotbelow,
Ocircumflexacute,
ocircumflexacute,
Ocircumflexgrave,
ocircumflexgrave,
Ocircumflextilde,
ocircumflextilde,
Ocircumflexdotbelow,
ocircumflexdotbelow,
Udotbelow,
udotbelow,
Ygrave,
ygrave,
Ydotbelow,
ydotbelow,
Ytilde,
ytilde,
E_circumflex_macron,
e_circumflex_macron,
E_circumflex_caron,
e_circumflex_caron,
Aiecyrillic,
aiecyrillic,
Amacron,
amacron,
Abreve,
abreve,
Aogonek,
aogonek,
Cacute,
cacute,
Ccircumflex,
ccircumflex,
Cdotaccent,
cdotaccent,
Ccaron,
ccaron,
Dcaron,
dcaron,
Emacron,
emacron,
Ebreve,
ebreve,
Edotaccent,
edotaccent,
Eogonek,
eogonek,
Ecaron,
ecaron,
Gcircumflex,
gcircumflex,
Gbreve,
gbreve,
Gdotaccent,
gdotaccent,
Hcircumflex,
hcircumflex,
Itilde,
itilde,
Imacron,
imacron,
Iogonek,
iogonek,
Lacute,
lacute,
Lcaron,
lcaron,
Nacute,
nacute,
Ncaron,
ncaron,
Omacron,
omacron,
Obreve,
obreve,
Ohungarumlaut,
ohungarumlaut,
Racute,
racute,
Rcaron,
rcaron,
Sacute,
sacute,
Scircumflex,
scircumflex,
Scedilla,
scedilla,
Tcedilla,
tcedilla,
Tcaron,
tcaron,
Utilde,
utilde,
Umacron,
umacron,
Ubreve,
ubreve,
Uring,
uring,
Uhungarumlaut,
uhungarumlaut,
Uogonek,
uogonek,
Wcircumflex,
wcircumflex,
Ycircumflex,
ycircumflex,
Zacute,
zacute,
Zdotaccent,
zdotaccent,
gravetonecmb,
acutetonecmb,
A_macron_grave,
a_macron_grave,
a_acute_ogonek,
I_macron_grave,
i_macron_grave,
i_dotaccent_acute,
U_macron_grave,
u_macron_grave,
M_grave,
m_grave,
R_breve,
r_breve,
Cacute.polish,
cacute.polish,
Nacute.polish,
nacute.polish,
Oacute.polish,
oacute.polish,
Sacute.polish,
sacute.polish,
Zacute.polish,
zacute.polish,
dcroat,
uni0122,
uni0123,
uni0326,
uni030F,
uni0312,
uni0313,
uni0314,
uni0311,
uni0316,
uni0317,
dotbelowcomb,
uni0324,
uni0325,
uni0237,
longs,
Hbar,
hbar,
kgreenlandic,
Eng,
eng,
Tbar,
tbar,
j_circumflex,
uni01F0,
A_dblgrave,
a_dblgrave,
A_invertedbreve,
a_invertedbreve,
E_dblgrave,
e_dblgrave,
E_invertedbreve,
e_invertedbreve,
I_dblgrave,
i_dblgrave,
I_invertedbreve,
i_invertedbreve,
O_dblgrave,
o_dblgrave,
O_invertedbreve,
o_invertedbreve,
R_dblgrave,
r_dblgrave,
R_invertedbreve,
r_invertedbreve,
U_dblgrave,
u_dblgrave,
U_invertedbreve,
u_invertedbreve,
S_commaaccent,
s_commaaccent,
T_commaaccent,
t_commaaccent,
D_commaaccent,
d_commaaccent,
s_longdotaccent,
K_cedilla,
k_cedilla,
L_cedilla,
l_cedilla,
N_cedilla,
n_cedilla,
R_cedilla,
r_cedilla,
x_dotbelow,
Ldot,
l_middot,
uni1E10,
uni1E11,
uni200C,
uni200B,
uni200D,
quotereversed,
uni201F,
twodotenleader,
uni2027,
uni2031,
uni2024,
minute,
second,
uni2034,
uni2035,
uni2036,
uni2037,
uni203D,
uni204F,
Ohorn,
ohorn,
uni01DD,
Uhorn,
uhorn,
uni01A7,
uni01A8,
uni031B,
uni0315,
hookabovecomb,
Ahookabove,
ahookabove,
Acircumflexhookabove,
acircumflexhookabove,
Abrevehookabove,
abrevehookabove,
Ehookabove,
ehookabove,
Ecircumflexhookabove,
ecircumflexhookabove,
Ihookabove,
ihookabove,
Ohookabove,
ohookabove,
Ocircumflexhookabove,
ocircumflexhookabove,
Ohornacute,
ohornacute,
Ohorngrave,
ohorngrave,
Ohornhookabove,
ohornhookabove,
Ohorntilde,
ohorntilde,
Ohorndotbelow,
ohorndotbelow,
Uhookabove,
uhookabove,
Uhornacute,
uhornacute,
Uhorngrave,
uhorngrave,
Uhornhookabove,
uhornhookabove,
Uhorntilde,
uhorntilde,
Uhorndotbelow,
uhorndotbelow,
Yhookabove,
yhookabove,
cacute.small.polish,
nacute.small.polish,
oacute.small.polish,
sacute.small.polish,
zacute.small.polish,
uni0357,
uni1E9A,
uni1E9C,
uni1E9D,
uni1EFA,
uni1EFB,
uni0186,
uni0254,
uni0259,
uni0258,
uni0250,
uni0252,
uni0251,
uni028C,
uni028D,
uni2183,
uni2184,
uni2132,
uni214B,
uni214E,
uni2C75,
uni2C76,
uniA730,
uniA731,
uniA7FB,
uniA7FC,
uniA7FD,
uniA7FE,
uniA7FF,
u10190,
u10191,
u10192,
u10193,
u10194,
u10195,
u10196,
u10197,
u10198,
u10199,
u1019A,
u1019B
);
},
{
name = fsType;
value = (
);
},
{
name = vendorID;
value = MULT;
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
},
{
name = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
},
{
Name = Width;
Tag = wdth;
}
);
}
);
date = "2019-03-16 01:04:30 +0000";
designer = "Fasil fikreab";
disablesNiceNames = 1;
familyName = "Mulat Addis";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem latn dflt;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature sups;\012feature frac;\012feature ordn;\012feature calt;\012feature calt;\012feature calt;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_latn_1 {\012	sub fl by f l;\012} ccmp_latn_1;\012\012script latn;\012lookup ccmp_latn_1;\012";
name = ccmp;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub three by threesuperior;\012sub two by twosuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
code = "sub f f i by f_f_i;\012sub f i by f_i;\012sub f l by fl;\012";
name = calt;
},
{
code = "# after abesha period, capitalize\012sub period-ethiopic space @Ethsmall' by @Ethcap;\012# after english period, capitalize\012sub period space @Ethsmall' by @Ethcap;\012# when 4 to 8 spaces, capitalize\012sub space space space space @Ethsmall' by @Ethcap;\012sub space space space space space @Ethsmall' by @Ethcap;\012sub space space space space space space @Ethsmall' by @Ethcap;\012sub space space space space space space space @Ethsmall' by @Ethcap;\012sub space space space space space space space space @Ethsmall' by @Ethcap;";
name = calt;
},
{
code = "sub slash ha-ethiopic by ha-ethiopic.etcp;\012sub slash hu-ethiopic by hu-ethiopic.etcp;\012sub slash hi-ethiopic by hi-ethiopic.etcp;\012sub slash haa-ethiopic by haa-ethiopic.etcp;\012sub slash hee-ethiopic by hee-ethiopic.etcp;\012sub slash he-ethiopic by he-ethiopic.etcp;\012sub slash ho-ethiopic by ho-ethiopic.etcp;\012sub slash hoa-ethiopic by hoa-ethiopic.etcp;\012sub slash la-ethiopic by la-ethiopic.etcp;\012sub slash lu-ethiopic by lu-ethiopic.etcp;\012sub slash li-ethiopic by li-ethiopic.etcp;\012sub slash laa-ethiopic by laa-ethiopic.etcp;\012sub slash lee-ethiopic by lee-ethiopic.etcp;\012sub slash le-ethiopic by le-ethiopic.etcp;\012sub slash lo-ethiopic by lo-ethiopic.etcp;\012sub slash lwa-ethiopic by lwa-ethiopic.etcp;\012sub slash hha-ethiopic by hha-ethiopic.etcp;\012sub slash hhu-ethiopic by hhu-ethiopic.etcp;\012sub slash hhi-ethiopic by hhi-ethiopic.etcp;\012sub slash hhaa-ethiopic by hhaa-ethiopic.etcp;\012sub slash hhee-ethiopic by hhee-ethiopic.etcp;\012sub slash hhe-ethiopic by hhe-ethiopic.etcp;\012sub slash hho-ethiopic by hho-ethiopic.etcp;\012sub slash hhwa-ethiopic by hhwa-ethiopic.etcp;\012sub slash ma-ethiopic by ma-ethiopic.etcp;\012sub slash mu-ethiopic by mu-ethiopic.etcp;\012sub slash mi-ethiopic by mi-ethiopic.etcp;\012sub slash maa-ethiopic by maa-ethiopic.etcp;\012sub slash mee-ethiopic by mee-ethiopic.etcp;\012sub slash me-ethiopic by me-ethiopic.etcp;\012sub slash mo-ethiopic by mo-ethiopic.etcp;\012sub slash mwa-ethiopic by mwa-ethiopic.etcp;\012sub slash sza-ethiopic by sza-ethiopic.etcp;\012sub slash szu-ethiopic by szu-ethiopic.etcp;\012sub slash szi-ethiopic by szi-ethiopic.etcp;\012sub slash szaa-ethiopic by szaa-ethiopic.etcp;\012sub slash szee-ethiopic by szee-ethiopic.etcp;\012sub slash sze-ethiopic by sze-ethiopic.etcp;\012sub slash szo-ethiopic by szo-ethiopic.etcp;\012sub slash szwa-ethiopic by szwa-ethiopic.etcp;\012sub slash ra-ethiopic by ra-ethiopic.etcp;\012sub slash ru-ethiopic by ru-ethiopic.etcp;\012sub slash ri-ethiopic by ri-ethiopic.etcp;\012sub slash raa-ethiopic by raa-ethiopic.etcp;\012sub slash ree-ethiopic by ree-ethiopic.etcp;\012sub slash re-ethiopic by re-ethiopic.etcp;\012sub slash ro-ethiopic by ro-ethiopic.etcp;\012sub slash rwa-ethiopic by rwa-ethiopic.etcp;\012sub slash sa-ethiopic by sa-ethiopic.etcp;\012sub slash su-ethiopic by su-ethiopic.etcp;\012sub slash si-ethiopic by si-ethiopic.etcp;\012sub slash saa-ethiopic by saa-ethiopic.etcp;\012sub slash see-ethiopic by see-ethiopic.etcp;\012sub slash se-ethiopic by se-ethiopic.etcp;\012sub slash so-ethiopic by so-ethiopic.etcp;\012sub slash swa-ethiopic by swa-ethiopic.etcp;\012sub slash sha-ethiopic by sha-ethiopic.etcp;\012sub slash shu-ethiopic by shu-ethiopic.etcp;\012sub slash shi-ethiopic by shi-ethiopic.etcp;\012sub slash shaa-ethiopic by shaa-ethiopic.etcp;\012sub slash shee-ethiopic by shee-ethiopic.etcp;\012sub slash she-ethiopic by she-ethiopic.etcp;\012sub slash sho-ethiopic by sho-ethiopic.etcp;\012sub slash shwa-ethiopic by shwa-ethiopic.etcp;\012sub slash qa-ethiopic by qa-ethiopic.etcp;\012sub slash qu-ethiopic by qu-ethiopic.etcp;\012sub slash qi-ethiopic by qi-ethiopic.etcp;\012sub slash qaa-ethiopic by qaa-ethiopic.etcp;\012sub slash qee-ethiopic by qee-ethiopic.etcp;\012sub slash qe-ethiopic by qe-ethiopic.etcp;\012sub slash qo-ethiopic by qo-ethiopic.etcp;\012#sub slash qwaa-ethiopic by qwaa-ethiopic.etcp;\012sub slash qha-ethiopic by qha-ethiopic.etcp;\012sub slash qhu-ethiopic by qhu-ethiopic.etcp;\012sub slash qhi-ethiopic by qhi-ethiopic.etcp;\012sub slash qhaa-ethiopic by qhaa-ethiopic.etcp;\012sub slash qhee-ethiopic by qhee-ethiopic.etcp;\012sub slash qhe-ethiopic by qhe-ethiopic.etcp;\012sub slash qho-ethiopic by qho-ethiopic.etcp;\012sub slash qhwaa-ethiopic by qhwaa-ethiopic.etcp;\012sub slash ba-ethiopic by ba-ethiopic.etcp;\012sub slash bu-ethiopic by bu-ethiopic.etcp;\012sub slash bi-ethiopic by bi-ethiopic.etcp;\012sub slash baa-ethiopic by baa-ethiopic.etcp;\012sub slash bee-ethiopic by bee-ethiopic.etcp;\012sub slash be-ethiopic by be-ethiopic.etcp;\012sub slash bo-ethiopic by bo-ethiopic.etcp;\012sub slash bwa-ethiopic by bwa-ethiopic.etcp;\012sub slash va-ethiopic by va-ethiopic.etcp;\012sub slash vu-ethiopic by vu-ethiopic.etcp;\012sub slash vi-ethiopic by vi-ethiopic.etcp;\012sub slash vaa-ethiopic by vaa-ethiopic.etcp;\012sub slash vee-ethiopic by vee-ethiopic.etcp;\012sub slash ve-ethiopic by ve-ethiopic.etcp;\012sub slash vo-ethiopic by vo-ethiopic.etcp;\012sub slash vwa-ethiopic by vwa-ethiopic.etcp;\012sub slash ta-ethiopic by ta-ethiopic.etcp;\012sub slash tu-ethiopic by tu-ethiopic.etcp;\012sub slash ti-ethiopic by ti-ethiopic.etcp;\012sub slash taa-ethiopic by taa-ethiopic.etcp;\012sub slash tee-ethiopic by tee-ethiopic.etcp;\012sub slash te-ethiopic by te-ethiopic.etcp;\012sub slash to-ethiopic by to-ethiopic.etcp;\012sub slash twa-ethiopic by twa-ethiopic.etcp;\012sub slash ca-ethiopic by ca-ethiopic.etcp;\012sub slash cu-ethiopic by cu-ethiopic.etcp;\012sub slash ci-ethiopic by ci-ethiopic.etcp;\012sub slash caa-ethiopic by caa-ethiopic.etcp;\012sub slash cee-ethiopic by cee-ethiopic.etcp;\012sub slash ce-ethiopic by ce-ethiopic.etcp;\012sub slash co-ethiopic by co-ethiopic.etcp;\012sub slash cwa-ethiopic by cwa-ethiopic.etcp;\012sub slash xa-ethiopic by xa-ethiopic.etcp;\012sub slash xu-ethiopic by xu-ethiopic.etcp;\012sub slash xi-ethiopic by xi-ethiopic.etcp;\012sub slash xaa-ethiopic by xaa-ethiopic.etcp;\012sub slash xee-ethiopic by xee-ethiopic.etcp;\012sub slash xe-ethiopic by xe-ethiopic.etcp;\012sub slash xo-ethiopic by xo-ethiopic.etcp;\012sub slash xwaa-ethiopic by xwaa-ethiopic.etcp;\012sub slash na-ethiopic by na-ethiopic.etcp;\012sub slash nu-ethiopic by nu-ethiopic.etcp;\012sub slash ni-ethiopic by ni-ethiopic.etcp;\012sub slash naa-ethiopic by naa-ethiopic.etcp;\012sub slash nee-ethiopic by nee-ethiopic.etcp;\012sub slash ne-ethiopic by ne-ethiopic.etcp;\012sub slash no-ethiopic by no-ethiopic.etcp;\012sub slash nwa-ethiopic by nwa-ethiopic.etcp;\012sub slash nya-ethiopic by nya-ethiopic.etcp;\012sub slash nyu-ethiopic by nyu-ethiopic.etcp;\012sub slash nyi-ethiopic by nyi-ethiopic.etcp;\012sub slash nyaa-ethiopic by nyaa-ethiopic.etcp;\012sub slash nyee-ethiopic by nyee-ethiopic.etcp;\012sub slash nye-ethiopic by nye-ethiopic.etcp;\012sub slash nyo-ethiopic by nyo-ethiopic.etcp;\012sub slash nywa-ethiopic by nywa-ethiopic.etcp;\012sub slash aGlottal-ethiopic by aGlottal-ethiopic.etcp;\012sub slash uGlottal-ethiopic by uGlottal-ethiopic.etcp;\012sub slash iGlottal-ethiopic by iGlottal-ethiopic.etcp;\012sub slash aaGlottal-ethiopic by aaGlottal-ethiopic.etcp;\012sub slash eeGlottal-ethiopic by eeGlottal-ethiopic.etcp;\012sub slash eGlottal-ethiopic by eGlottal-ethiopic.etcp;\012sub slash oGlottal-ethiopic by oGlottal-ethiopic.etcp;\012sub slash waGlottal-ethiopic by waGlottal-ethiopic.etcp;\012sub slash ka-ethiopic by ka-ethiopic.etcp;\012sub slash ku-ethiopic by ku-ethiopic.etcp;\012sub slash ki-ethiopic by ki-ethiopic.etcp;\012sub slash kaa-ethiopic by kaa-ethiopic.etcp;\012sub slash kee-ethiopic by kee-ethiopic.etcp;\012sub slash ke-ethiopic by ke-ethiopic.etcp;\012sub slash ko-ethiopic by ko-ethiopic.etcp;\012sub slash kwaa-ethiopic by kwaa-ethiopic.etcp;\012sub slash kxa-ethiopic by kxa-ethiopic.etcp;\012sub slash kxu-ethiopic by kxu-ethiopic.etcp;\012sub slash kxi-ethiopic by kxi-ethiopic.etcp;\012sub slash kxaa-ethiopic by kxaa-ethiopic.etcp;\012sub slash kxee-ethiopic by kxee-ethiopic.etcp;\012sub slash kxe-ethiopic by kxe-ethiopic.etcp;\012sub slash kxo-ethiopic by kxo-ethiopic.etcp;\012sub slash kxwaa-ethiopic by kxwaa-ethiopic.etcp;\012sub slash wa-ethiopic by wa-ethiopic.etcp;\012sub slash wu-ethiopic by wu-ethiopic.etcp;\012sub slash wi-ethiopic by wi-ethiopic.etcp;\012sub slash waa-ethiopic by waa-ethiopic.etcp;\012sub slash wee-ethiopic by wee-ethiopic.etcp;\012sub slash we-ethiopic by we-ethiopic.etcp;\012sub slash wo-ethiopic by wo-ethiopic.etcp;\012sub slash woa-ethiopic by woa-ethiopic.etcp;\012sub slash aPharyngeal-ethiopic by aPharyngeal-ethiopic.etcp;\012sub slash uPharyngeal-ethiopic by uPharyngeal-ethiopic.etcp;\012sub slash iPharyngeal-ethiopic by iPharyngeal-ethiopic.etcp;\012sub slash aaPharyngeal-ethiopic by aaPharyngeal-ethiopic.etcp;\012sub slash eePharyngeal-ethiopic by eePharyngeal-ethiopic.etcp;\012sub slash ePharyngeal-ethiopic by ePharyngeal-ethiopic.etcp;\012sub slash oPharyngeal-ethiopic by oPharyngeal-ethiopic.etcp;\012sub slash za-ethiopic by za-ethiopic.etcp;\012sub slash zu-ethiopic by zu-ethiopic.etcp;\012sub slash zi-ethiopic by zi-ethiopic.etcp;\012sub slash zaa-ethiopic by zaa-ethiopic.etcp;\012sub slash zee-ethiopic by zee-ethiopic.etcp;\012sub slash ze-ethiopic by ze-ethiopic.etcp;\012sub slash zo-ethiopic by zo-ethiopic.etcp;\012sub slash zwa-ethiopic by zwa-ethiopic.etcp;\012sub slash zha-ethiopic by zha-ethiopic.etcp;\012sub slash zhu-ethiopic by zhu-ethiopic.etcp;\012sub slash zhi-ethiopic by zhi-ethiopic.etcp;\012sub slash zhaa-ethiopic by zhaa-ethiopic.etcp;\012sub slash zhee-ethiopic by zhee-ethiopic.etcp;\012sub slash zhe-ethiopic by zhe-ethiopic.etcp;\012sub slash zho-ethiopic by zho-ethiopic.etcp;\012sub slash zhwa-ethiopic by zhwa-ethiopic.etcp;\012sub slash ya-ethiopic by ya-ethiopic.etcp;\012sub slash yu-ethiopic by yu-ethiopic.etcp;\012sub slash yi-ethiopic by yi-ethiopic.etcp;\012sub slash yaa-ethiopic by yaa-ethiopic.etcp;\012sub slash yee-ethiopic by yee-ethiopic.etcp;\012sub slash ye-ethiopic by ye-ethiopic.etcp;\012sub slash yo-ethiopic by yo-ethiopic.etcp;\012sub slash yoa-ethiopic by yoa-ethiopic.etcp;\012sub slash da-ethiopic by da-ethiopic.etcp;\012sub slash du-ethiopic by du-ethiopic.etcp;\012sub slash di-ethiopic by di-ethiopic.etcp;\012sub slash daa-ethiopic by daa-ethiopic.etcp;\012sub slash dee-ethiopic by dee-ethiopic.etcp;\012sub slash de-ethiopic by de-ethiopic.etcp;\012sub slash do-ethiopic by do-ethiopic.etcp;\012sub slash dwa-ethiopic by dwa-ethiopic.etcp;\012sub slash dda-ethiopic by dda-ethiopic.etcp;\012sub slash ddu-ethiopic by ddu-ethiopic.etcp;\012sub slash ddi-ethiopic by ddi-ethiopic.etcp;\012sub slash ddaa-ethiopic by ddaa-ethiopic.etcp;\012sub slash ddee-ethiopic by ddee-ethiopic.etcp;\012sub slash dde-ethiopic by dde-ethiopic.etcp;\012sub slash ddo-ethiopic by ddo-ethiopic.etcp;\012sub slash ddwa-ethiopic by ddwa-ethiopic.etcp;\012sub slash ja-ethiopic by ja-ethiopic.etcp;\012sub slash ju-ethiopic by ju-ethiopic.etcp;\012sub slash ji-ethiopic by ji-ethiopic.etcp;\012sub slash jaa-ethiopic by jaa-ethiopic.etcp;\012sub slash jee-ethiopic by jee-ethiopic.etcp;\012sub slash je-ethiopic by je-ethiopic.etcp;\012sub slash jo-ethiopic by jo-ethiopic.etcp;\012sub slash jwa-ethiopic by jwa-ethiopic.etcp;\012sub slash ga-ethiopic by ga-ethiopic.etcp;\012sub slash gu-ethiopic by gu-ethiopic.etcp;\012sub slash gi-ethiopic by gi-ethiopic.etcp;\012sub slash gaa-ethiopic by gaa-ethiopic.etcp;\012sub slash gee-ethiopic by gee-ethiopic.etcp;\012sub slash ge-ethiopic by ge-ethiopic.etcp;\012sub slash go-ethiopic by go-ethiopic.etcp;\012sub slash gwaa-ethiopic by gwaa-ethiopic.etcp;\012sub slash gga-ethiopic by gga-ethiopic.etcp;\012sub slash ggu-ethiopic by ggu-ethiopic.etcp;\012sub slash ggi-ethiopic by ggi-ethiopic.etcp;\012sub slash ggaa-ethiopic by ggaa-ethiopic.etcp;\012sub slash ggee-ethiopic by ggee-ethiopic.etcp;\012sub slash gge-ethiopic by gge-ethiopic.etcp;\012sub slash ggo-ethiopic by ggo-ethiopic.etcp;\012sub slash ggwaa-ethiopic by ggwaa-ethiopic.etcp;\012sub slash tha-ethiopic by tha-ethiopic.etcp;\012sub slash thu-ethiopic by thu-ethiopic.etcp;\012sub slash thi-ethiopic by thi-ethiopic.etcp;\012sub slash thaa-ethiopic by thaa-ethiopic.etcp;\012sub slash thee-ethiopic by thee-ethiopic.etcp;\012sub slash the-ethiopic by the-ethiopic.etcp;\012sub slash tho-ethiopic by tho-ethiopic.etcp;\012sub slash thwa-ethiopic by thwa-ethiopic.etcp;\012sub slash cha-ethiopic by cha-ethiopic.etcp;\012sub slash chu-ethiopic by chu-ethiopic.etcp;\012sub slash chi-ethiopic by chi-ethiopic.etcp;\012sub slash chaa-ethiopic by chaa-ethiopic.etcp;\012sub slash chee-ethiopic by chee-ethiopic.etcp;\012sub slash che-ethiopic by che-ethiopic.etcp;\012sub slash cho-ethiopic by cho-ethiopic.etcp;\012sub slash chwa-ethiopic by chwa-ethiopic.etcp;\012sub slash pha-ethiopic by pha-ethiopic.etcp;\012sub slash phu-ethiopic by phu-ethiopic.etcp;\012sub slash phi-ethiopic by phi-ethiopic.etcp;\012sub slash phaa-ethiopic by phaa-ethiopic.etcp;\012sub slash phee-ethiopic by phee-ethiopic.etcp;\012sub slash phe-ethiopic by phe-ethiopic.etcp;\012sub slash pho-ethiopic by pho-ethiopic.etcp;\012sub slash phwa-ethiopic by phwa-ethiopic.etcp;\012sub slash tsa-ethiopic by tsa-ethiopic.etcp;\012sub slash tsu-ethiopic by tsu-ethiopic.etcp;\012sub slash tsi-ethiopic by tsi-ethiopic.etcp;\012sub slash tsaa-ethiopic by tsaa-ethiopic.etcp;\012sub slash tsee-ethiopic by tsee-ethiopic.etcp;\012sub slash tse-ethiopic by tse-ethiopic.etcp;\012sub slash tso-ethiopic by tso-ethiopic.etcp;\012sub slash tswa-ethiopic by tswa-ethiopic.etcp;\012sub slash tza-ethiopic by tza-ethiopic.etcp;\012sub slash tzu-ethiopic by tzu-ethiopic.etcp;\012sub slash tzi-ethiopic by tzi-ethiopic.etcp;\012sub slash tzaa-ethiopic by tzaa-ethiopic.etcp;\012sub slash tzee-ethiopic by tzee-ethiopic.etcp;\012sub slash tze-ethiopic by tze-ethiopic.etcp;\012sub slash tzo-ethiopic by tzo-ethiopic.etcp;\012sub slash tzoa-ethiopic by tzoa-ethiopic.etcp;\012sub slash fa-ethiopic by fa-ethiopic.etcp;\012sub slash fu-ethiopic by fu-ethiopic.etcp;\012sub slash fi-ethiopic by fi-ethiopic.etcp;\012sub slash faa-ethiopic by faa-ethiopic.etcp;\012sub slash fee-ethiopic by fee-ethiopic.etcp;\012sub slash fe-ethiopic by fe-ethiopic.etcp;\012sub slash fo-ethiopic by fo-ethiopic.etcp;\012sub slash fwa-ethiopic by fwa-ethiopic.etcp;\012sub slash pa-ethiopic by pa-ethiopic.etcp;\012sub slash pu-ethiopic by pu-ethiopic.etcp;\012sub slash pi-ethiopic by pi-ethiopic.etcp;\012sub slash paa-ethiopic by paa-ethiopic.etcp;\012sub slash pee-ethiopic by pee-ethiopic.etcp;\012sub slash pe-ethiopic by pe-ethiopic.etcp;\012sub slash po-ethiopic by po-ethiopic.etcp;\012sub slash pwa-ethiopic by pwa-ethiopic.etcp;\012";
name = calt;
},
{
code = "pos @Hu' @AllLetters 75;\012pos raa-ethiopic' @AllLetters 50;\012pos @AllLetters' [ge-ethiopic gge-ethiopic] 50;\012pos @AllLetters' [taa-ethiopic caa-ethiopic] 50;";
name = kern;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub f f i by f_f_i;\012sub f i by f_i;\012sub f l by fl;\012";
disabled = 1;
name = liga;
}
);
fontMaster = (
{
ascender = 725;
capHeight = 725;
customParameters = (
{
name = typoAscender;
value = 1009;
},
{
name = typoDescender;
value = -275;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1009;
},
{
name = winDescent;
value = 275;
},
{
name = hheaAscender;
value = 1009;
},
{
name = hheaDescender;
value = -275;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
}
);
descender = -275;
id = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
GSCornerRadius = 21;
};
weightValue = 500;
widthValue = 5;
xHeight = 478;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"428 0 LINE",
"428 758 LINE",
"72 758 LINE",
"72 0 LINE"
);
},
{
closed = 1;
nodes = (
"145 685 LINE",
"355 685 LINE",
"355 73 LINE",
"145 73 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
6 5 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
3 5 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
6 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = .notdef;
},
{
glyphname = .null;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 0;
}
);
note = .null;
},
{
glyphname = CR;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 500;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 210;
}
);
note = space;
unicode = 0020;
},
{
glyphname = controlNULL;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 0;
}
);
note = controlNULL;
},
{
glyphname = controlBS;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 0;
}
);
note = controlBS;
},
{
glyphname = controlHT;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 210;
}
);
note = controlHT;
},
{
glyphname = controlGS;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 0;
}
);
note = controlGS;
},
{
glyphname = exclam;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"164 191 LINE",
"169.333 331 OFFCURVE",
"182 421.833 OFFCURVE",
"194 478.5 CURVE SMOOTH",
"202.687 519.523 OFFCURVE",
"217.354 557.063 OFFCURVE",
"219 562 CURVE",
"219 615.573 OFFCURVE",
"186.099 712 OFFCURVE",
"157 712 CURVE SMOOTH",
"125.912 712 OFFCURVE",
"93 616.188 OFFCURVE",
"93 562 CURVE",
"96.605 556.593 OFFCURVE",
"110.388 518.351 OFFCURVE",
"120 477.5 CURVE SMOOTH",
"133.333 420.833 OFFCURVE",
"146.667 329.667 OFFCURVE",
"152 191 CURVE"
);
},
{
closed = 1;
nodes = (
"191.667 0 OFFCURVE",
"216 20.333 OFFCURVE",
"216 55 CURVE SMOOTH",
"216 89.667 OFFCURVE",
"191.667 118 OFFCURVE",
"157 118 CURVE SMOOTH",
"122.333 118 OFFCURVE",
"97 91.667 OFFCURVE",
"97 57 CURVE SMOOTH",
"97 22.333 OFFCURVE",
"122.333 0 OFFCURVE",
"157 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 10 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 13 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 0 117 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
24 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 24 23 24 39 24 55 24 71 24 87 24 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 24 118 24 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 303;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = quotedbl;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"253 424 LINE",
"261 492 OFFCURVE",
"270 550.333 OFFCURVE",
"278 593 CURVE SMOOTH",
"284.343 626.829 OFFCURVE",
"292 664.946 OFFCURVE",
"292 676 CURVE SMOOTH",
"292 704 OFFCURVE",
"267 726 OFFCURVE",
"247 726 CURVE SMOOTH",
"227 726 OFFCURVE",
"203 704.333 OFFCURVE",
"203 675 CURVE SMOOTH",
"203 662.333 OFFCURVE",
"207.5 634.5 OFFCURVE",
"216.5 591.5 CURVE SMOOTH",
"225.5 548.5 OFFCURVE",
"233.667 492.667 OFFCURVE",
"241 424 CURVE"
);
},
{
closed = 1;
nodes = (
"114 424 LINE",
"122 492 OFFCURVE",
"131 550.333 OFFCURVE",
"139 593 CURVE SMOOTH",
"145.343 626.829 OFFCURVE",
"153 664.946 OFFCURVE",
"153 676 CURVE SMOOTH",
"153 704 OFFCURVE",
"128 726 OFFCURVE",
"108 726 CURVE SMOOTH",
"88 726 OFFCURVE",
"64 704.333 OFFCURVE",
"64 675 CURVE SMOOTH",
"64 662.333 OFFCURVE",
"68.5 634.5 OFFCURVE",
"77.5 591.5 CURVE SMOOTH",
"86.5 548.5 OFFCURVE",
"94.667 492.667 OFFCURVE",
"102 424 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 356;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"268 167 LINE",
"389 167 LINE",
"321 -23 LINE",
"345 -29 LINE",
"415 167 LINE",
"569 167 LINE",
"597 235 LINE",
"439 235 LINE",
"483 362 LINE",
"632 362 LINE",
"660 431 LINE",
"508 431 LINE",
"577 622 LINE",
"553 628 LINE",
"482 431 LINE",
"363 431 LINE",
"430 622 LINE",
"406 628 LINE",
"335 431 LINE",
"181 431 LINE",
"154 362 LINE",
"311 362 LINE",
"266 235 LINE",
"119 235 LINE",
"91 167 LINE",
"242 167 LINE",
"174 -23 LINE",
"198 -29 LINE"
);
},
{
closed = 1;
nodes = (
"335 362 LINE",
"460 362 LINE",
"415 235 LINE",
"288 235 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
13 3 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
9 4 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
1 17 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
5 17 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
19 17 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
25 17 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
30 17 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 749;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
lastChange = "2020-12-31 21:27:39 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"223 520 OFFCURVE",
"261 520 OFFCURVE",
"284 514 CURVE SMOOTH",
"323 504 OFFCURVE",
"338 468.667 OFFCURVE",
"338 430 CURVE SMOOTH",
"338 415.333 OFFCURVE",
"336 406.667 OFFCURVE",
"332 396 CURVE",
"337.333 376 OFFCURVE",
"353.333 361 OFFCURVE",
"376 361 CURVE SMOOTH",
"404 361 OFFCURVE",
"425 385 OFFCURVE",
"425 413 CURVE SMOOTH",
"425 478.333 OFFCURVE",
"364 520 OFFCURVE",
"284 530 CURVE SMOOTH",
"259 533 OFFCURVE",
"224 534 OFFCURVE",
"199 530 CURVE SMOOTH",
"117 517 OFFCURVE",
"53 464.81 OFFCURVE",
"53 380 CURVE SMOOTH",
"53 300 OFFCURVE",
"107 261 OFFCURVE",
"177.5 240.5 CURVE SMOOTH",
"267 214 LINE SMOOTH",
"327 196 OFFCURVE",
"359 168 OFFCURVE",
"359 116 CURVE SMOOTH",
"359 68 OFFCURVE",
"334 27 OFFCURVE",
"284 14 CURVE SMOOTH",
"253 6 OFFCURVE",
"224 7 OFFCURVE",
"200 11 CURVE SMOOTH",
"147 21 OFFCURVE",
"132 58 OFFCURVE",
"132 98 CURVE SMOOTH",
"132 112.667 OFFCURVE",
"134 121.333 OFFCURVE",
"138 132 CURVE",
"132.667 152 OFFCURVE",
"114.667 167 OFFCURVE",
"92 167 CURVE SMOOTH",
"65.333 167 OFFCURVE",
"42 143 OFFCURVE",
"42 115 CURVE SMOOTH",
"42 47 OFFCURVE",
"104 3.667 OFFCURVE",
"199 -3 CURVE",
"242 -6 OFFCURVE",
"258 -5 OFFCURVE",
"284 -2 CURVE",
"376 10 OFFCURVE",
"438 69 OFFCURVE",
"438 145 CURVE SMOOTH",
"438 213 OFFCURVE",
"395 262 OFFCURVE",
"323 284 CURVE SMOOTH",
"200 321 LINE SMOOTH",
"156 334 OFFCURVE",
"127 366.333 OFFCURVE",
"127 417 CURVE SMOOTH",
"127 467.667 OFFCURVE",
"154 502 OFFCURVE",
"200 514 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"273 -91 LINE",
"273 610 LINE",
"233 610 LINE",
"233 -91 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
51 6 60 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
51 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
22 5 36 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
0 5 106 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
24 36 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
19 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
7 24 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
10 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 51 22 51 38 51 54 51 70 51 86 51 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 51 117 51 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
51 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
41 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 2 values pushed */
86 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
86 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
83 41 86 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
86 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
101 
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 106 122 106 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 106 25 106 41 106 57 106 73 106 89 106 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
109 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
110 24 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
7 64 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
77 64 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
83 64 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
84 64 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
109 64 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
110 64 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 482;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"550 624 LINE",
"526 640 LINE",
"101 22 LINE",
"125 7 LINE"
);
},
{
closed = 1;
nodes = (
"549.363 -2 OFFCURVE",
"607 52.496 OFFCURVE",
"607 132 CURVE SMOOTH",
"607 211.607 OFFCURVE",
"548.099 264 OFFCURVE",
"481 264 CURVE SMOOTH",
"406.981 264 OFFCURVE",
"349 204.949 OFFCURVE",
"349 134 CURVE SMOOTH",
"349 43.073 OFFCURVE",
"414.239 -2 OFFCURVE",
"480 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"424.061 23 OFFCURVE",
"384 73.564 OFFCURVE",
"384 129 CURVE SMOOTH",
"384 185.509 OFFCURVE",
"423.46 237 OFFCURVE",
"479 237 CURVE SMOOTH",
"535.652 237 OFFCURVE",
"573 185.509 OFFCURVE",
"573 129 CURVE SMOOTH",
"573 73.15 OFFCURVE",
"536.304 23 OFFCURVE",
"480 23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249.931 390 OFFCURVE",
"308 448.545 OFFCURVE",
"308 526 CURVE SMOOTH",
"308 605.607 OFFCURVE",
"249.099 658 OFFCURVE",
"182 658 CURVE SMOOTH",
"107.981 658 OFFCURVE",
"50 598.949 OFFCURVE",
"50 528 CURVE SMOOTH",
"50 439.316 OFFCURVE",
"115.899 390 OFFCURVE",
"181 390 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125.061 417 OFFCURVE",
"85 467.564 OFFCURVE",
"85 523 CURVE SMOOTH",
"85 579.509 OFFCURVE",
"124.46 631 OFFCURVE",
"180 631 CURVE SMOOTH",
"236.652 631 OFFCURVE",
"274 579.509 OFFCURVE",
"274 523 CURVE SMOOTH",
"274 467.15 OFFCURVE",
"237.304 417 OFFCURVE",
"181 417 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
54 10 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 44 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
74 34 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
74 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
24 64 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 27 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 0 229 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
218 34 234 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
6 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 54 229 54 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
218 64 234 64 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 201 64 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
85 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 2 59 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
29 2 79 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
49 2 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
69 2 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 647;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
lastChange = "2020-12-31 21:28:48 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"764.827 -13 OFFCURVE",
"849.55 65.858 OFFCURVE",
"872 130 CURVE",
"863 134 LINE",
"842.664 99.139 OFFCURVE",
"795.082 54 OFFCURVE",
"747 54 CURVE SMOOTH",
"695 54 OFFCURVE",
"663.667 79 OFFCURVE",
"629 115 CURVE SMOOTH",
"611 133.667 OFFCURVE",
"596 150.833 OFFCURVE",
"584 166.5 CURVE SMOOTH",
"572 182.167 OFFCURVE",
"559 194 OFFCURVE",
"550 206 CURVE",
"593 255 OFFCURVE",
"659.888 342.778 OFFCURVE",
"701.5 385.5 CURVE SMOOTH",
"751.5 436.833 OFFCURVE",
"805.667 474.667 OFFCURVE",
"875 484 CURVE",
"875 496 LINE",
"526 488 LINE",
"526 476 LINE",
"590.248 473.207 OFFCURVE",
"656 471.758 OFFCURVE",
"656 414 CURVE SMOOTH",
"656 375.481 OFFCURVE",
"589 282 OFFCURVE",
"539 218 CURVE",
"526 231 OFFCURVE",
"384 403 OFFCURVE",
"343 450 CURVE",
"382.261 473.557 OFFCURVE",
"456 526.59 OFFCURVE",
"456 605 CURVE SMOOTH",
"456 686.634 OFFCURVE",
"384.863 732 OFFCURVE",
"310 732 CURVE SMOOTH",
"226.129 732 OFFCURVE",
"138 668.967 OFFCURVE",
"138 583 CURVE SMOOTH",
"138 497.229 OFFCURVE",
"183.288 464.426 OFFCURVE",
"243 402 CURVE",
"146.499 353.75 OFFCURVE",
"47 280.881 OFFCURVE",
"47 170 CURVE SMOOTH",
"47 65.804 OFFCURVE",
"124.776 -8 OFFCURVE",
"244 -8 CURVE SMOOTH",
"347.086 -8 OFFCURVE",
"442 66 OFFCURVE",
"485 128 CURVE",
"532 53 OFFCURVE",
"590.75 -13 OFFCURVE",
"676 -13 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"209.781 62 OFFCURVE",
"152 128.046 OFFCURVE",
"152 210 CURVE SMOOTH",
"152 287.07 OFFCURVE",
"204.663 352.37 OFFCURVE",
"254 393 CURVE",
"325 319 OFFCURVE",
"398 233 OFFCURVE",
"472 139 CURVE",
"415.735 88.093 OFFCURVE",
"373.261 62 OFFCURVE",
"293 62 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"298 490 OFFCURVE",
"273.667 509 OFFCURVE",
"251 541 CURVE SMOOTH",
"231 569 OFFCURVE",
"224 587.333 OFFCURVE",
"224 630 CURVE SMOOTH",
"224 666.421 OFFCURVE",
"247.627 710 OFFCURVE",
"292 710 CURVE SMOOTH",
"346.87 710 OFFCURVE",
"383 645.724 OFFCURVE",
"383 585 CURVE SMOOTH",
"383 529 OFFCURVE",
"368.667 494 OFFCURVE",
"334 458 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
110 7 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
110 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
24 5 81 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 24 117 24 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
19 44 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 13 values pushed */
6 110 22 110 38 110 54 110 70 110 86 110 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 110 117 110 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
34 44 110 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
39 44 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
90 5 
MIRP[11100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
13 59 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
19 59 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
39 59 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
54 59 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
70 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 70 23 70 39 70 55 70 71 70 87 70 103 70 119 70 135 70 151 70 167 70 183 70 199 70 215 70 231 70 247 70 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 70 23 70 39 70 55 70 71 70 87 70 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 70 118 70 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
95 1 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
8 95 24 95 40 95 56 95 72 95 88 95 104 95 120 95 136 95 152 95 168 95 184 95 200 95 216 95 232 95 248 95 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
8 95 24 95 40 95 56 95 72 95 88 95 104 95 120 95 136 95 152 95 168 95 184 95 200 95 216 95 232 95 248 95 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 95 24 95 40 95 56 95 72 95 88 95 104 95 120 95 136 95 152 95 168 95 184 95 200 95 216 95 232 95 248 95 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
105 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 105 23 105 39 105 55 105 71 105 87 105 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 105 118 105 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 854;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"116 424 LINE",
"124 492 OFFCURVE",
"133 550.333 OFFCURVE",
"141 593 CURVE SMOOTH",
"147.343 626.829 OFFCURVE",
"155 664.946 OFFCURVE",
"155 676 CURVE SMOOTH",
"155 704 OFFCURVE",
"130 726 OFFCURVE",
"110 726 CURVE SMOOTH",
"90 726 OFFCURVE",
"66 704.333 OFFCURVE",
"66 675 CURVE SMOOTH",
"66 662.333 OFFCURVE",
"70.5 634.5 OFFCURVE",
"79.5 591.5 CURVE SMOOTH",
"88.5 548.5 OFFCURVE",
"96.667 492.667 OFFCURVE",
"104 424 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 222;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
lastChange = "2020-12-31 22:42:34 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"293 -128 LINE",
"239.667 -90.667 OFFCURVE",
"200 -39 OFFCURVE",
"158 30 CURVE SMOOTH",
"116 98 OFFCURVE",
"88 187 OFFCURVE",
"88 295 CURVE SMOOTH",
"88 402 OFFCURVE",
"114 486 OFFCURVE",
"155 555 CURVE SMOOTH",
"195 623 OFFCURVE",
"237 676.667 OFFCURVE",
"293 718 CURVE",
"279 731 LINE",
"217.667 685.667 OFFCURVE",
"157.333 632.5 OFFCURVE",
"112 562.5 CURVE SMOOTH",
"66.667 492.5 OFFCURVE",
"21 407 OFFCURVE",
"21 295 CURVE SMOOTH",
"21 179 OFFCURVE",
"68.5 91.167 OFFCURVE",
"114.5 22.5 CURVE SMOOTH",
"160.5 -46.167 OFFCURVE",
"222.667 -98.333 OFFCURVE",
"280 -141 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
5 16 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 27 values pushed */
6 5 22 5 38 5 54 5 70 5 86 5 102 5 118 5 134 5 150 5 166 5 182 5 198 5 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 5 229 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 313;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2020-12-31 22:43:02 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"91 -98 OFFCURVE",
"154 -46 OFFCURVE",
"200 23 CURVE SMOOTH",
"246 91 OFFCURVE",
"293 179 OFFCURVE",
"293 295 CURVE SMOOTH",
"293 407 OFFCURVE",
"247 493 OFFCURVE",
"202 563 CURVE SMOOTH",
"157 633 OFFCURVE",
"96 686 OFFCURVE",
"35 731 CURVE",
"21 718 LINE",
"77 677 OFFCURVE",
"119 623 OFFCURVE",
"159 555 CURVE SMOOTH",
"200 486 OFFCURVE",
"226 402 OFFCURVE",
"226 295 CURVE SMOOTH",
"226 187 OFFCURVE",
"198 98 OFFCURVE",
"156 30 CURVE SMOOTH",
"114 -39 OFFCURVE",
"74 -91 OFFCURVE",
"21 -128 CURVE",
"34 -141 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
0 11 3 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 5 values pushed */
218 11 234 11 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 313;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"197 378 LINE",
"209 403.333 OFFCURVE",
"215 423 OFFCURVE",
"215 451 CURVE SMOOTH",
"215 465.667 OFFCURVE",
"212.833 479.5 OFFCURVE",
"208.5 492.5 CURVE SMOOTH",
"204.167 505.5 OFFCURVE",
"200.333 520 OFFCURVE",
"197 536 CURVE",
"207 541 LINE",
"219 530.333 OFFCURVE",
"230.167 520.167 OFFCURVE",
"240.5 510.5 CURVE SMOOTH",
"250.833 500.833 OFFCURVE",
"262.333 492.333 OFFCURVE",
"275 485 CURVE",
"297.667 470.333 OFFCURVE",
"316 465.333 OFFCURVE",
"344 464 CURVE",
"348 470 LINE",
"323.738 518.525 OFFCURVE",
"283.866 526.331 OFFCURVE",
"213 547 CURVE",
"213 560 LINE",
"228.333 565.333 OFFCURVE",
"242.167 569.333 OFFCURVE",
"254.5 572 CURVE SMOOTH",
"266.833 574.667 OFFCURVE",
"280.333 580.333 OFFCURVE",
"295 589 CURVE SMOOTH",
"321.667 605 OFFCURVE",
"333.333 615 OFFCURVE",
"348 639 CURVE",
"344 646 LINE",
"318.253 646 OFFCURVE",
"300.773 638.058 OFFCURVE",
"275 624 CURVE SMOOTH",
"247.527 607.974 OFFCURVE",
"233.361 589.654 OFFCURVE",
"209 568 CURVE",
"198 574 LINE",
"201.333 590 OFFCURVE",
"205 604.667 OFFCURVE",
"209 618 CURVE SMOOTH",
"213 631.333 OFFCURVE",
"215 645 OFFCURVE",
"215 659 CURVE SMOOTH",
"215 687 OFFCURVE",
"209 705.667 OFFCURVE",
"197 731 CURVE",
"189 731 LINE",
"177 705.667 OFFCURVE",
"172 687 OFFCURVE",
"172 659 CURVE SMOOTH",
"172 643 OFFCURVE",
"174 628.667 OFFCURVE",
"178 616 CURVE SMOOTH",
"182 603.333 OFFCURVE",
"185.667 589.333 OFFCURVE",
"189 574 CURVE",
"179 568 LINE",
"154.406 587.675 OFFCURVE",
"141.774 606.293 OFFCURVE",
"113 624 CURVE SMOOTH",
"89 638.667 OFFCURVE",
"72.333 644.667 OFFCURVE",
"43 646 CURVE",
"40 639 LINE",
"54.667 615 OFFCURVE",
"68 603.667 OFFCURVE",
"92 589 CURVE SMOOTH",
"104.667 581 OFFCURVE",
"117.833 575.5 OFFCURVE",
"131.5 572.5 CURVE SMOOTH",
"145.167 569.5 OFFCURVE",
"159.667 565.333 OFFCURVE",
"175 560 CURVE",
"175 547 LINE",
"159 542.333 OFFCURVE",
"144.833 538.833 OFFCURVE",
"132.5 536.5 CURVE SMOOTH",
"120.167 534.167 OFFCURVE",
"106.667 528.667 OFFCURVE",
"92 520 CURVE SMOOTH",
"68 506.667 OFFCURVE",
"55 496.333 OFFCURVE",
"39 471 CURVE",
"43 465 LINE",
"72.333 466.333 OFFCURVE",
"90.333 470.333 OFFCURVE",
"113 485 CURVE",
"125.667 492.333 OFFCURVE",
"136.667 500.833 OFFCURVE",
"146 510.5 CURVE SMOOTH",
"155.333 520.167 OFFCURVE",
"166.667 530 OFFCURVE",
"180 540 CURVE",
"189 536 LINE",
"185.667 519.333 OFFCURVE",
"182 505.167 OFFCURVE",
"178 493.5 CURVE SMOOTH",
"174 481.833 OFFCURVE",
"172 467.667 OFFCURVE",
"172 451 CURVE SMOOTH",
"172 423 OFFCURVE",
"177 403.333 OFFCURVE",
"189 378 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
27 5 34 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
106 34 122 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 34 25 34 41 34 57 34 73 34 89 34 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
78 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
46 4 61 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
61 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 388;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"370 35 LINE",
"370 241 LINE",
"575 241 LINE",
"575 280 LINE",
"370 280 LINE",
"370 485 LINE",
"330 485 LINE",
"330 280 LINE",
"125 280 LINE",
"125 241 LINE",
"330 241 LINE",
"330 35 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
3 4 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"162.696 -107.744 OFFCURVE",
"206 -59.497 OFFCURVE",
"206 0 CURVE SMOOTH",
"206 54.82 OFFCURVE",
"169.42 110 OFFCURVE",
"115 110 CURVE SMOOTH",
"80.333 110 OFFCURVE",
"51 88.667 OFFCURVE",
"51 50 CURVE SMOOTH",
"51 19.333 OFFCURVE",
"71 0 OFFCURVE",
"99 0 CURVE SMOOTH",
"129.667 0 OFFCURVE",
"146.333 16.333 OFFCURVE",
"149 43 CURVE",
"163.667 40.333 OFFCURVE",
"174 13.333 OFFCURVE",
"174 -8 CURVE SMOOTH",
"174 -62.667 OFFCURVE",
"148.667 -98.333 OFFCURVE",
"110 -133 CURVE",
"117 -140 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 8 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 5 values pushed */
106 8 122 8 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 8 25 8 41 8 57 8 73 8 89 8 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
5 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 5 23 5 39 5 55 5 71 5 87 5 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 5 118 5 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 243;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"243 225 LINE",
"243 295 LINE",
"12 295 LINE",
"12 225 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 4 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 256;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = period;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"158.667 -1 OFFCURVE",
"182 19.333 OFFCURVE",
"182 54 CURVE SMOOTH",
"182 88.667 OFFCURVE",
"158.667 117 OFFCURVE",
"124 117 CURVE SMOOTH",
"89.333 117 OFFCURVE",
"64 90.667 OFFCURVE",
"64 56 CURVE SMOOTH",
"64 21.333 OFFCURVE",
"89.333 -1 OFFCURVE",
"124 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 13 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 0 117 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
3 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 3 23 3 39 3 55 3 71 3 87 3 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 3 118 3 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 243;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
lastChange = "2020-12-31 22:41:51 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"363 747 LINE",
"320 760 LINE",
"-50 -131 LINE",
"-7 -143 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 311;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
lastChange = "2020-12-31 22:34:25 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"403 4 OFFCURVE",
"528 156 OFFCURVE",
"528 367 CURVE SMOOTH",
"528 582 OFFCURVE",
"402 718 OFFCURVE",
"277 718 CURVE SMOOTH",
"137 718 OFFCURVE",
"15 561 OFFCURVE",
"15 372 CURVE SMOOTH",
"15 129 OFFCURVE",
"154 4 OFFCURVE",
"274 4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"163 30 OFFCURVE",
"101 215 OFFCURVE",
"101 374 CURVE SMOOTH",
"101 534 OFFCURVE",
"162 693 OFFCURVE",
"272 693 CURVE SMOOTH",
"384 693 OFFCURVE",
"439 525 OFFCURVE",
"439 364 CURVE SMOOTH",
"439 204 OFFCURVE",
"386 30 OFFCURVE",
"274 30 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 20 122 20 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 20 25 20 41 20 57 20 73 20 89 20 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 30 22 30 38 30 54 30 70 30 86 30 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 30 117 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
25 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 103 25 119 25 135 25 151 25 167 25 183 25 199 25 215 25 231 25 247 25 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 25 23 25 39 25 55 25 71 25 87 25 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 25 118 25 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
35 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 35 121 35 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 35 24 35 40 35 56 35 72 35 88 35 104 35 120 35 136 35 152 35 168 35 184 35 200 35 216 35 232 35 248 35 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 35 24 35 40 35 56 35 72 35 88 35 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 533;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2020-12-31 20:18:49 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"201 725 LINE",
"38 725 LINE",
"38 711 LINE",
"74 711 OFFCURVE",
"118 699 OFFCURVE",
"118 668 CURVE SMOOTH",
"118 55 LINE SMOOTH",
"118 26 OFFCURVE",
"77.676 11 OFFCURVE",
"42 11 CURVE",
"42 0 LINE",
"281 0 LINE",
"281 11 LINE",
"247.36 11 OFFCURVE",
"201 21.172 OFFCURVE",
"201 54 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 5 20 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 316;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2020-12-31 20:27:30 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"387 -4 LINE",
"437 205 LINE",
"427 209 LINE",
"410 155 OFFCURVE",
"396 81 OFFCURVE",
"334 81 CURVE SMOOTH",
"113 81 LINE",
"180 184 OFFCURVE",
"210 231 OFFCURVE",
"255 305 CURVE SMOOTH",
"295 371 OFFCURVE",
"362 468 OFFCURVE",
"365 551 CURVE SMOOTH",
"369 658 OFFCURVE",
"324 733 OFFCURVE",
"232 733 CURVE SMOOTH",
"128 733 OFFCURVE",
"38 654 OFFCURVE",
"23 558 CURVE",
"38 557 LINE",
"76 650 OFFCURVE",
"145 662 OFFCURVE",
"199 658 CURVE SMOOTH",
"252 654 OFFCURVE",
"278 611 OFFCURVE",
"280 556 CURVE SMOOTH",
"282 502 OFFCURVE",
"261 424 OFFCURVE",
"226 357 CURVE SMOOTH",
"156 223 OFFCURVE",
"90 111 OFFCURVE",
"46 35 CURVE",
"46 -4 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
13 5 30 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
106 30 122 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 30 25 30 41 30 57 30 73 30 89 30 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
36 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
6 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
8 36 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 25 121 25 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 25 24 25 40 25 56 25 72 25 88 25 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 436;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2020-12-31 20:18:28 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"232 0 OFFCURVE",
"370 101 OFFCURVE",
"370 249 CURVE SMOOTH",
"370 337 OFFCURVE",
"290 402 OFFCURVE",
"201 421 CURVE",
"277 480 OFFCURVE",
"340 534 OFFCURVE",
"340 605 CURVE SMOOTH",
"340 681 OFFCURVE",
"277 733 OFFCURVE",
"186 733 CURVE SMOOTH",
"105 733 OFFCURVE",
"52 673 OFFCURVE",
"21 606 CURVE",
"30 601 LINE",
"59 646 OFFCURVE",
"96 662 OFFCURVE",
"153 662 CURVE SMOOTH",
"212 662 OFFCURVE",
"258 628 OFFCURVE",
"258 573 CURVE SMOOTH",
"258 477 OFFCURVE",
"166 411 OFFCURVE",
"92 354 CURVE",
"95 348 LINE",
"108 348 LINE SMOOTH",
"203 348 OFFCURVE",
"287 287 OFFCURVE",
"287 193 CURVE SMOOTH",
"287 74 OFFCURVE",
"190 26 OFFCURVE",
"142 26 CURVE SMOOTH",
"87 26 OFFCURVE",
"71 100 OFFCURVE",
"26 100 CURVE SMOOTH",
"-1 100 OFFCURVE",
"-9 83 OFFCURVE",
"-9 62 CURVE SMOOTH",
"-9 21 OFFCURVE",
"33 0 OFFCURVE",
"75 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
10 5 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
106 25 122 25 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 25 25 25 41 25 57 25 73 25 89 25 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
37 25 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
106 37 122 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 37 25 37 41 37 57 37 73 37 89 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIRP[11100]	/* MoveIndirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
5 55 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 22 121 22 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 22 24 22 40 22 56 22 72 22 88 22 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
42 2 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 42 23 42 39 42 55 42 71 42 87 42 103 42 119 42 135 42 151 42 167 42 183 42 199 42 215 42 231 42 247 42 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 42 23 42 39 42 55 42 71 42 87 42 103 42 119 42 135 42 151 42 167 42 183 42 199 42 215 42 231 42 247 42 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 42 23 42 39 42 55 42 71 42 87 42 103 42 119 42 135 42 151 42 167 42 183 42 199 42 215 42 231 42 247 42 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
47 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 47 23 47 39 47 55 47 71 47 87 47 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 47 118 47 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 396;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2020-12-31 20:23:12 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"389 -6 LINE",
"389 225 LINE",
"525 225 LINE",
"525 302 LINE",
"387 302 LINE",
"387 726 LINE",
"358 726 LINE",
"46 304 LINE",
"0 237 LINE",
"-7 226 OFFCURVE",
"-2 225 OFFCURVE",
"7 225 CURVE SMOOTH",
"301 225 LINE",
"301 -6 LINE"
);
},
{
closed = 1;
nodes = (
"301 622 LINE",
"301 302 LINE",
"66 302 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
2 5 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 4 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
15 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
16 11 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 551;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2020-12-31 20:23:49 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"252 -1 OFFCURVE",
"373 107 OFFCURVE",
"373 244 CURVE SMOOTH",
"373 361 OFFCURVE",
"292 446 OFFCURVE",
"155 446 CURVE SMOOTH",
"128 446 OFFCURVE",
"110 444 OFFCURVE",
"86 440 CURVE",
"103 626 LINE",
"342 626 LINE",
"361 689 OFFCURVE",
"376 736 OFFCURVE",
"385 760 CURVE",
"373 764 LINE",
"361 736 OFFCURVE",
"353 722 OFFCURVE",
"309 722 CURVE SMOOTH",
"96 722 LINE",
"52 291 LINE",
"62 289 LINE",
"78 336 OFFCURVE",
"105 357 OFFCURVE",
"162 357 CURVE SMOOTH",
"232 357 OFFCURVE",
"292 307 OFFCURVE",
"292 202 CURVE SMOOTH",
"292 114 OFFCURVE",
"254 22 OFFCURVE",
"167 22 CURVE SMOOTH",
"86 22 OFFCURVE",
"101 121 OFFCURVE",
"36 121 CURVE SMOOTH",
"15 121 OFFCURVE",
"0 103 OFFCURVE",
"0 82 CURVE SMOOTH",
"0 22 OFFCURVE",
"72 -1 OFFCURVE",
"138 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
40 5 17 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
106 17 122 17 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 17 25 17 41 17 57 17 73 17 89 17 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
45 4 12 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 1 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 27 23 27 39 27 55 27 71 27 87 27 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 27 118 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
49 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 393;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"390.19 0 OFFCURVE",
"487 104.918 OFFCURVE",
"487 237 CURVE SMOOTH",
"487 357.429 OFFCURVE",
"395.16 449 OFFCURVE",
"266 449 CURVE SMOOTH",
"235.333 449 OFFCURVE",
"217.667 445.667 OFFCURVE",
"195 439 CURVE",
"262.953 572.39 OFFCURVE",
"372.145 667.679 OFFCURVE",
"483 716 CURVE",
"475 728 LINE",
"443.667 719.333 OFFCURVE",
"411 707 OFFCURVE",
"377 691 CURVE SMOOTH",
"309 659 OFFCURVE",
"241 615.167 OFFCURVE",
"181 558.5 CURVE SMOOTH",
"151 530.167 OFFCURVE",
"124.5 499.667 OFFCURVE",
"101.5 467 CURVE SMOOTH",
"55.5 401.667 OFFCURVE",
"27 328 OFFCURVE",
"27 248 CURVE SMOOTH",
"27 114.619 OFFCURVE",
"128.913 0 OFFCURVE",
"254 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"171.667 14 OFFCURVE",
"118 83 OFFCURVE",
"118 203 CURVE SMOOTH",
"118 275 OFFCURVE",
"133 351.667 OFFCURVE",
"185 409 CURVE SMOOTH",
"199.667 425 OFFCURVE",
"218.333 430 OFFCURVE",
"241 430 CURVE SMOOTH",
"348.011 430 OFFCURVE",
"396 307.681 OFFCURVE",
"396 196 CURVE SMOOTH",
"396 74.667 OFFCURVE",
"338.333 14 OFFCURVE",
"257 14 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
8 21 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
31 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 31 122 31 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 31 25 31 41 31 57 31 73 31 89 31 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 37 22 37 38 37 54 37 70 37 86 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 37 117 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
8 26 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 512;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2020-12-31 20:24:11 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"190 51 OFFCURVE",
"211 104 OFFCURVE",
"232 159 CURVE SMOOTH",
"266 247 OFFCURVE",
"325 389 OFFCURVE",
"355 465 CURVE SMOOTH",
"382 533 OFFCURVE",
"445 688 OFFCURVE",
"459 720 CURVE",
"69 720 LINE",
"4 552 LINE",
"16 548 LINE",
"34 592 OFFCURVE",
"59 635 OFFCURVE",
"135 635 CURVE SMOOTH",
"406 635 LINE",
"392 601 OFFCURVE",
"375 563 OFFCURVE",
"356 520 CURVE SMOOTH",
"316 435 OFFCURVE",
"273 344 OFFCURVE",
"230 258 CURVE SMOOTH",
"198 193 OFFCURVE",
"122 40 OFFCURVE",
"103 -1 CURVE",
"170 -1 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
8 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
16 17 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 444;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2020-12-31 20:25:07 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"353.685 -4 OFFCURVE",
"452 51 OFFCURVE",
"453 154 CURVE SMOOTH",
"454 280 OFFCURVE",
"359 335 OFFCURVE",
"292 388 CURVE",
"368.714 435.616 OFFCURVE",
"443 490.475 OFFCURVE",
"443 571 CURVE SMOOTH",
"443 662.17 OFFCURVE",
"359.513 727 OFFCURVE",
"243 727 CURVE SMOOTH",
"141.572 727 OFFCURVE",
"44 643.876 OFFCURVE",
"44 540 CURVE SMOOTH",
"44 446.974 OFFCURVE",
"107.758 391.014 OFFCURVE",
"180 341 CURVE",
"111.762 294.598 OFFCURVE",
"36 239.262 OFFCURVE",
"36 158 CURVE SMOOTH",
"36 57.629 OFFCURVE",
"136.514 -4 OFFCURVE",
"234 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"167.333 11 OFFCURVE",
"108 67 OFFCURVE",
"108 163 CURVE SMOOTH",
"108 220.014 OFFCURVE",
"147 300 OFFCURVE",
"197 333 CURVE",
"297.042 285.48 OFFCURVE",
"370 247 OFFCURVE",
"371 155 CURVE SMOOTH",
"372 87 OFFCURVE",
"332.84 11 OFFCURVE",
"250 11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"202.289 439.415 OFFCURVE",
"117 490.018 OFFCURVE",
"117 591 CURVE SMOOTH",
"117 664.604 OFFCURVE",
"175.62 710 OFFCURVE",
"245 710 CURVE SMOOTH",
"326.858 710 OFFCURVE",
"375 649.045 OFFCURVE",
"375 571 CURVE SMOOTH",
"375 491 OFFCURVE",
"343 435.667 OFFCURVE",
"275 397 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
66 5 30 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
10 5 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
106 40 122 40 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 40 25 40 41 40 57 40 73 40 89 40 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
5 30 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 13 values pushed */
6 66 22 66 38 66 54 66 70 66 86 66 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 66 117 66 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
20 30 66 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
25 30 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
48 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
5 35 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
25 35 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 486;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2020-12-31 20:25:24 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"148 19 OFFCURVE",
"257 80 OFFCURVE",
"342 165 CURVE SMOOTH",
"426 249 OFFCURVE",
"486 358 OFFCURVE",
"486 482 CURVE SMOOTH",
"486 616 OFFCURVE",
"385 734 OFFCURVE",
"254 734 CURVE SMOOTH",
"127 734 OFFCURVE",
"26 626 OFFCURVE",
"26 501 CURVE SMOOTH",
"26 376 OFFCURVE",
"111 282 OFFCURVE",
"246 282 CURVE SMOOTH",
"277 282 OFFCURVE",
"303 285 OFFCURVE",
"332 297 CURVE",
"264 144 OFFCURVE",
"169 62 OFFCURVE",
"45 9 CURVE",
"51 -6 LINE"
);
},
{
closed = 1;
nodes = (
"166 303 OFFCURVE",
"113 436 OFFCURVE",
"113 547 CURVE SMOOTH",
"113 655 OFFCURVE",
"169 718 OFFCURVE",
"254 718 CURVE SMOOTH",
"350 718 OFFCURVE",
"393 614 OFFCURVE",
"393 512 CURVE SMOOTH",
"393 444 OFFCURVE",
"383 383 OFFCURVE",
"340 328 CURVE SMOOTH",
"324 308 OFFCURVE",
"301 303 OFFCURVE",
"273 303 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
18 10 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 29 122 29 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 29 25 29 41 29 57 29 73 29 89 29 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 40 22 40 38 40 54 40 70 40 86 40 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 40 117 40 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
35 1 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
18 15 35 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 512;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"164.667 307 OFFCURVE",
"192 330.667 OFFCURVE",
"192 364 CURVE SMOOTH",
"192 394.667 OFFCURVE",
"164.667 421 OFFCURVE",
"134 421 CURVE SMOOTH",
"103.333 421 OFFCURVE",
"75 398.667 OFFCURVE",
"75 364 CURVE SMOOTH",
"75 329.333 OFFCURVE",
"103.333 307 OFFCURVE",
"134 307 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164.667 -1 OFFCURVE",
"192 20.667 OFFCURVE",
"192 54 CURVE SMOOTH",
"192 84.667 OFFCURVE",
"164.667 111 OFFCURVE",
"134 111 CURVE SMOOTH",
"103.333 111 OFFCURVE",
"75 88.667 OFFCURVE",
"75 54 CURVE SMOOTH",
"75 18 OFFCURVE",
"103.333 -1 OFFCURVE",
"134 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 5 values pushed */
106 6 122 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 6 25 6 41 6 57 6 73 6 89 6 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
15 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 15 23 15 39 15 55 15 71 15 87 15 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 15 118 15 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 263;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"137.266 -135.412 OFFCURVE",
"201 -67.379 OFFCURVE",
"201 8 CURVE SMOOTH",
"201 57.695 OFFCURVE",
"162.244 99 OFFCURVE",
"119 99 CURVE SMOOTH",
"88.333 99 OFFCURVE",
"60 74.667 OFFCURVE",
"60 44 CURVE SMOOTH",
"60 17.333 OFFCURVE",
"78.667 -5 OFFCURVE",
"108 -5 CURVE SMOOTH",
"125.333 -5 OFFCURVE",
"144 3 OFFCURVE",
"152 23 CURVE",
"165.333 17.667 OFFCURVE",
"168 4.667 OFFCURVE",
"168 -14 CURVE SMOOTH",
"168 -71.333 OFFCURVE",
"127.333 -120.333 OFFCURVE",
"70 -131 CURVE",
"73 -141 LINE"
);
},
{
closed = 1;
nodes = (
"148.667 195 OFFCURVE",
"174 218 OFFCURVE",
"174 250 CURVE SMOOTH",
"174 280.667 OFFCURVE",
"148.667 305 OFFCURVE",
"118 305 CURVE SMOOTH",
"87.333 305 OFFCURVE",
"61 283.333 OFFCURVE",
"61 250 CURVE SMOOTH",
"61 215.333 OFFCURVE",
"87.333 195 OFFCURVE",
"118 195 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 13 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 0 117 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 263;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"606 61 LINE",
"175 273 LINE",
"606 490 LINE",
"606 545 LINE",
"61 273 LINE",
"606 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
4 2 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"555 300 LINE",
"555 339 LINE",
"145 339 LINE",
"145 300 LINE"
);
},
{
closed = 1;
nodes = (
"555 186 LINE",
"555 225 LINE",
"145 225 LINE",
"145 186 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
5 3 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
1 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"606 273 LINE",
"61 545 LINE",
"61 484 LINE",
"492 273 LINE",
"61 56 LINE",
"61 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
4 0 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
lastChange = "2020-12-31 22:47:32 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"167.667 0 OFFCURVE",
"192 20.333 OFFCURVE",
"192 55 CURVE SMOOTH",
"192 89.667 OFFCURVE",
"167.667 118 OFFCURVE",
"133 118 CURVE SMOOTH",
"98.333 118 OFFCURVE",
"73 91.667 OFFCURVE",
"73 57 CURVE SMOOTH",
"73 22.333 OFFCURVE",
"98.333 0 OFFCURVE",
"133 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"41 590 LINE",
"70 635 OFFCURVE",
"107 651 OFFCURVE",
"164 651 CURVE SMOOTH",
"223 651 OFFCURVE",
"269 617 OFFCURVE",
"269 562 CURVE SMOOTH",
"269 466 OFFCURVE",
"177 400 OFFCURVE",
"104 341 CURVE",
"104 167 LINE",
"142 167 LINE",
"142 337 LINE",
"224 410 LINE SMOOTH",
"296 474 OFFCURVE",
"351 523 OFFCURVE",
"351 594 CURVE SMOOTH",
"351 670 OFFCURVE",
"288 722 OFFCURVE",
"197 722 CURVE SMOOTH",
"116 722 OFFCURVE",
"63 662 OFFCURVE",
"32 595 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
38 7 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 19 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
218 19 234 19 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 19 25 19 41 19 57 19 73 19 89 19 105 19 121 19 137 19 153 19 169 19 185 19 201 19 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
6 38 22 38 38 38 54 38 70 38 86 38 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 38 117 38 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
8 4 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
41 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 41 23 41 39 41 55 41 71 41 87 41 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 41 118 41 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 401;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"535 -177 OFFCURVE",
"638.667 -137 OFFCURVE",
"722 -57 CURVE",
"714 -48 LINE",
"628.667 -118.667 OFFCURVE",
"544 -159 OFFCURVE",
"428 -159 CURVE SMOOTH",
"334.667 -159 OFFCURVE",
"253.5 -129.333 OFFCURVE",
"195.5 -76 CURVE SMOOTH",
"137.5 -22.667 OFFCURVE",
"104 53 OFFCURVE",
"104 149 CURVE SMOOTH",
"104 261 OFFCURVE",
"148.5 374 OFFCURVE",
"222.5 458 CURVE SMOOTH",
"296.5 542 OFFCURVE",
"401 599 OFFCURVE",
"521 599 CURVE SMOOTH",
"681.174 599 OFFCURVE",
"804 496.155 OFFCURVE",
"804 341 CURVE SMOOTH",
"804 191.678 OFFCURVE",
"701.105 56 OFFCURVE",
"546 56 CURVE SMOOTH",
"540.667 56 OFFCURVE",
"535.833 56.333 OFFCURVE",
"531.5 57 CURVE SMOOTH",
"527.167 57.667 OFFCURVE",
"522.333 58.333 OFFCURVE",
"517 59 CURVE",
"687 467 LINE",
"628 467 LINE",
"603 432 LINE",
"589.667 448 OFFCURVE",
"571.667 462 OFFCURVE",
"549 462 CURVE SMOOTH",
"529.667 462 OFFCURVE",
"507.667 455.667 OFFCURVE",
"483 443 CURVE SMOOTH",
"433.667 417.667 OFFCURVE",
"381.333 373.667 OFFCURVE",
"332 319 CURVE SMOOTH",
"307.333 291.667 OFFCURVE",
"285.333 263.5 OFFCURVE",
"266 234.5 CURVE SMOOTH",
"227.333 176.5 OFFCURVE",
"202 116.667 OFFCURVE",
"202 70 CURVE SMOOTH",
"202 43.333 OFFCURVE",
"212.333 20 OFFCURVE",
"251 20 CURVE SMOOTH",
"337.695 20 OFFCURVE",
"441.151 123.181 OFFCURVE",
"506 201 CURVE",
"512 199 LINE",
"441 35 LINE",
"462.333 23.667 OFFCURVE",
"487.333 18 OFFCURVE",
"516 18 CURVE SMOOTH",
"606.667 18 OFFCURVE",
"683.333 55.5 OFFCURVE",
"738 113.5 CURVE SMOOTH",
"792.667 171.5 OFFCURVE",
"825 251.667 OFFCURVE",
"825 337 CURVE SMOOTH",
"825 422.333 OFFCURVE",
"788.5 494.5 OFFCURVE",
"730.5 544.5 CURVE SMOOTH",
"672.5 594.5 OFFCURVE",
"592.333 623 OFFCURVE",
"503 623 CURVE SMOOTH",
"379 623 OFFCURVE",
"267.333 570.667 OFFCURVE",
"186 488 CURVE SMOOTH",
"104.667 405.333 OFFCURVE",
"54 290 OFFCURVE",
"54 166 CURVE SMOOTH",
"54 64.667 OFFCURVE",
"89.333 -19.833 OFFCURVE",
"152 -80.5 CURVE SMOOTH",
"214.667 -141.167 OFFCURVE",
"304.333 -177 OFFCURVE",
"411 -177 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"295 67 OFFCURVE",
"283 84 OFFCURVE",
"283 104 CURVE SMOOTH",
"283 154.349 OFFCURVE",
"339.903 261.715 OFFCURVE",
"377.5 313.5 CURVE SMOOTH",
"415.101 365.29 OFFCURVE",
"488.959 442 OFFCURVE",
"526 442 CURVE SMOOTH",
"555.333 442 OFFCURVE",
"570 414.333 OFFCURVE",
"570 389 CURVE SMOOTH",
"570 333.946 OFFCURVE",
"510.108 229.27 OFFCURVE",
"470 182 CURVE SMOOTH",
"430.104 134.98 OFFCURVE",
"354.322 67 OFFCURVE",
"319 67 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
26 5 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
84 5 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
84 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 36 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 26 22 26 38 26 54 26 70 26 86 26 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 26 117 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
218 36 234 36 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 36 25 36 41 36 57 36 73 36 89 36 105 36 121 36 137 36 153 36 169 36 185 36 201 36 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
44 10 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
45 10 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
47 10 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 13 values pushed */
6 84 22 84 38 84 54 84 70 84 86 84 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 84 117 84 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
91 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
5 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
81 3 69 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
81 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
41 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
47 15 91 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 868;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
lastChange = "2020-12-31 21:34:40 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{348, 726}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"181 -4 LINE",
"181 6 LINE",
"145 12 OFFCURVE",
"98 19 OFFCURVE",
"98 54 CURVE SMOOTH",
"98 69 OFFCURVE",
"105 94 OFFCURVE",
"119 130 CURVE SMOOTH",
"128 153 OFFCURVE",
"138 177 OFFCURVE",
"147 200 CURVE SMOOTH",
"156 223 OFFCURVE",
"166 247 OFFCURVE",
"176 272 CURVE",
"442 272 LINE",
"462 220 OFFCURVE",
"480 171 OFFCURVE",
"493 132 CURVE SMOOTH",
"504 100 OFFCURVE",
"514 65 OFFCURVE",
"514 52 CURVE SMOOTH",
"514 19 OFFCURVE",
"462 6 OFFCURVE",
"444 6 CURVE",
"444 -4 LINE",
"736 -4 LINE",
"736 8 LINE",
"683 10 OFFCURVE",
"651 48 OFFCURVE",
"640 70 CURVE SMOOTH",
"632 87 OFFCURVE",
"625 103 OFFCURVE",
"619 117 CURVE SMOOTH",
"612 130 OFFCURVE",
"605 147 OFFCURVE",
"598 168 CURVE SMOOTH",
"566 252 OFFCURVE",
"535 337 OFFCURVE",
"501 429 CURVE SMOOTH",
"473 503 OFFCURVE",
"420 644 OFFCURVE",
"388 730 CURVE",
"380 730 LINE",
"366 705 OFFCURVE",
"336 666 OFFCURVE",
"292 647 CURVE",
"302 625 LINE",
"275 562 OFFCURVE",
"227 447 OFFCURVE",
"197 377 CURVE SMOOTH",
"160 292 OFFCURVE",
"124 209 OFFCURVE",
"96 146 CURVE SMOOTH",
"81 112 OFFCURVE",
"68 86 OFFCURVE",
"57 69 CURVE SMOOTH",
"46 52 OFFCURVE",
"39 41 OFFCURVE",
"34 36 CURVE",
"32 33 OFFCURVE",
"25 28 OFFCURVE",
"13 21 CURVE SMOOTH",
"0 14 OFFCURVE",
"-15 9 OFFCURVE",
"-32 7 CURVE",
"-32 -4 LINE"
);
},
{
closed = 1;
nodes = (
"210 356 OFFCURVE",
"248 448 OFFCURVE",
"267 493 CURVE SMOOTH",
"285 535 OFFCURVE",
"305 586 OFFCURVE",
"313 602 CURVE",
"324 575 OFFCURVE",
"348 515 OFFCURVE",
"366 470 CURVE SMOOTH",
"388 414 OFFCURVE",
"411 353 OFFCURVE",
"434 293 CURVE",
"185 293 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
58 0 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
63 0 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
64 0 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 704;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
lastChange = "2021-01-01 23:28:17 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"384 -1 LINE SMOOTH",
"443 -1 OFFCURVE",
"509 0 OFFCURVE",
"560 19 CURVE SMOOTH",
"625 43 OFFCURVE",
"684 108 OFFCURVE",
"684 196 CURVE SMOOTH",
"684 300 OFFCURVE",
"590 365 OFFCURVE",
"490 376 CURVE",
"490 380 LINE",
"581 399 OFFCURVE",
"643 453 OFFCURVE",
"643 541 CURVE SMOOTH",
"643 621 OFFCURVE",
"594 673 OFFCURVE",
"526 698 CURVE SMOOTH",
"483 714 OFFCURVE",
"438 719 OFFCURVE",
"387 719 CURVE SMOOTH",
"50 719 LINE",
"50 709 LINE",
"86 705 OFFCURVE",
"102 700 OFFCURVE",
"122 679 CURVE SMOOTH",
"138 663 OFFCURVE",
"142 615 OFFCURVE",
"142 557 CURVE SMOOTH",
"142 155 LINE SMOOTH",
"142 99 OFFCURVE",
"136 63 OFFCURVE",
"123 47 CURVE SMOOTH",
"104 26 OFFCURVE",
"72 14 OFFCURVE",
"39 9 CURVE",
"39 -1 LINE"
);
},
{
closed = 1;
nodes = (
"305 14 OFFCURVE",
"285 25 OFFCURVE",
"272 40 CURVE SMOOTH",
"258 56 OFFCURVE",
"252 80 OFFCURVE",
"252 133 CURVE SMOOTH",
"252 360 LINE",
"349 360 LINE SMOOTH",
"388 360 OFFCURVE",
"414 357 OFFCURVE",
"443 348 CURVE SMOOTH",
"514 324 OFFCURVE",
"567 261 OFFCURVE",
"567 185 CURVE SMOOTH",
"567 117 OFFCURVE",
"535 68 OFFCURVE",
"479 39 CURVE SMOOTH",
"436 16 OFFCURVE",
"389 14 OFFCURVE",
"350 14 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"252 631 LINE SMOOTH",
"252 660 OFFCURVE",
"253 678 OFFCURVE",
"260 688 CURVE SMOOTH",
"267 698 OFFCURVE",
"296 706 OFFCURVE",
"324 706 CURVE SMOOTH",
"371 706 OFFCURVE",
"409 699 OFFCURVE",
"439 686 CURVE SMOOTH",
"490 663 OFFCURVE",
"528 608 OFFCURVE",
"528 541 CURVE SMOOTH",
"528 450 OFFCURVE",
"465 383 OFFCURVE",
"345 376 CURVE SMOOTH",
"336 375 OFFCURVE",
"274 375 OFFCURVE",
"252 375 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
67 7 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
9 7 56 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
41 56 57 56 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
106 56 122 56 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
73 56 89 56 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
9 56 25 56 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
83 56 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
83 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
106 83 122 83 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 83 25 83 41 83 57 83 73 83 89 83 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
0 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
6 38 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 13 values pushed */
6 67 22 67 38 67 54 67 70 67 86 67 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 67 117 67 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
95 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
95 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
98 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
100 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
102 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
6 47 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 745;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2020-12-31 21:38:10 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{437, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"507 -20 OFFCURVE",
"564 -5 OFFCURVE",
"604 12 CURVE SMOOTH",
"631 23 OFFCURVE",
"666 45 OFFCURVE",
"668 45 CURVE SMOOTH",
"671 45 OFFCURVE",
"677 40 OFFCURVE",
"686 31 CURVE SMOOTH",
"695 22 OFFCURVE",
"703 11 OFFCURVE",
"711 0 CURVE",
"723 0 LINE",
"726 220 LINE",
"714 220 LINE",
"689 101 OFFCURVE",
"575 -4 OFFCURVE",
"442 -4 CURVE SMOOTH",
"354 -4 OFFCURVE",
"281 35 OFFCURVE",
"230 97 CURVE SMOOTH",
"179 159 OFFCURVE",
"151 245 OFFCURVE",
"151 341 CURVE SMOOTH",
"151 432 OFFCURVE",
"178 521 OFFCURVE",
"227 589 CURVE SMOOTH",
"275 657 OFFCURVE",
"348 702 OFFCURVE",
"440 702 CURVE SMOOTH",
"572 702 OFFCURVE",
"680 601 OFFCURVE",
"715 472 CURVE",
"727 473 LINE",
"727 697 LINE",
"716 697 LINE",
"708 684 OFFCURVE",
"678 649 OFFCURVE",
"670 649 CURVE SMOOTH",
"668 649 OFFCURVE",
"632 673 OFFCURVE",
"606 684 CURVE SMOOTH",
"566 701 OFFCURVE",
"506 719 OFFCURVE",
"426 719 CURVE SMOOTH",
"264 719 OFFCURVE",
"149 649 OFFCURVE",
"87 548 CURVE SMOOTH",
"44 478 OFFCURVE",
"28 401 OFFCURVE",
"28 346 CURVE SMOOTH",
"28 238 OFFCURVE",
"67 146 OFFCURVE",
"137 82 CURVE SMOOTH",
"207 17 OFFCURVE",
"308 -20 OFFCURVE",
"432 -20 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
48 7 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 48 22 48 38 48 54 48 70 48 86 48 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 48 117 48 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 776;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
lastChange = "2021-01-01 23:39:33 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"406 0 LINE SMOOTH",
"436.667 0 OFFCURVE",
"468.333 2.167 OFFCURVE",
"501 6.5 CURVE SMOOTH",
"566.333 15.167 OFFCURVE",
"628.333 36 OFFCURVE",
"683 72 CURVE SMOOTH",
"710.333 90 OFFCURVE",
"734.333 112.667 OFFCURVE",
"755 140 CURVE SMOOTH",
"796.333 194.667 OFFCURVE",
"822 270 OFFCURVE",
"822 370 CURVE SMOOTH",
"822 530.72 OFFCURVE",
"737.547 635.766 OFFCURVE",
"618 687 CURVE SMOOTH",
"559.624 712.54 OFFCURVE",
"482.002 721 OFFCURVE",
"421 721 CURVE SMOOTH",
"399.667 721 OFFCURVE",
"378.333 721 OFFCURVE",
"357 721 CURVE SMOOTH",
"282.333 721 OFFCURVE",
"218.667 720.833 OFFCURVE",
"166 720.5 CURVE SMOOTH",
"113.333 720.167 OFFCURVE",
"73 720 OFFCURVE",
"45 720 CURVE",
"45 710 LINE",
"79.667 706 OFFCURVE",
"107 698 OFFCURVE",
"127 674 CURVE SMOOTH",
"138 661 OFFCURVE",
"143 630 OFFCURVE",
"143 594 CURVE SMOOTH",
"143 156 LINE SMOOTH",
"143 97 OFFCURVE",
"133 63 OFFCURVE",
"121 51 CURVE SMOOTH",
"105 34 OFFCURVE",
"74.333 14 OFFCURVE",
"41 10 CURVE",
"41 0 LINE"
);
},
{
closed = 1;
nodes = (
"347 15 OFFCURVE",
"301.667 19.333 OFFCURVE",
"275 46 CURVE SMOOTH",
"258.7 62.3 OFFCURVE",
"252 102 OFFCURVE",
"252 155 CURVE SMOOTH",
"252 602 LINE SMOOTH",
"252 655 OFFCURVE",
"259 687 OFFCURVE",
"264 692 CURVE SMOOTH",
"273 700 OFFCURVE",
"321 705 OFFCURVE",
"356 705 CURVE SMOOTH",
"403 705 OFFCURVE",
"432.333 701.333 OFFCURVE",
"459 696 CURVE SMOOTH",
"598.851 671.795 OFFCURVE",
"699 519.139 OFFCURVE",
"699 368 CURVE SMOOTH",
"699 193.333 OFFCURVE",
"628 68.333 OFFCURVE",
"484 27 CURVE SMOOTH",
"453.333 17.667 OFFCURVE",
"416.333 15 OFFCURVE",
"383 15 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
82 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
83 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
82 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
48 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 48 122 48 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 48 25 48 41 48 57 48 73 48 89 48 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
62 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 62 22 62 38 62 54 62 70 62 86 62 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 62 117 62 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 852;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
lastChange = "2021-01-01 23:30:54 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{332, 726}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"653 0 LINE",
"703 191 LINE",
"692 194 LINE",
"631.211 89.444 OFFCURVE",
"573 36 OFFCURVE",
"484 21 CURVE SMOOTH",
"423 11 OFFCURVE",
"348 7 OFFCURVE",
"300 41 CURVE SMOOTH",
"271 60 OFFCURVE",
"252 101 OFFCURVE",
"252 144 CURVE SMOOTH",
"252 360 LINE",
"263 360 OFFCURVE",
"365 361 OFFCURVE",
"385 358 CURVE SMOOTH",
"447 349 OFFCURVE",
"473 297 OFFCURVE",
"495 207 CURVE",
"507 207 LINE",
"507 522 LINE",
"495 522 LINE",
"478.527 445.128 OFFCURVE",
"458.234 402.488 OFFCURVE",
"379 384 CURVE SMOOTH",
"355.413 378.557 OFFCURVE",
"296.982 376 OFFCURVE",
"253 376 CURVE",
"253 652 LINE SMOOTH",
"253 672 OFFCURVE",
"275 688 OFFCURVE",
"305 692 CURVE SMOOTH",
"355 699 OFFCURVE",
"443 694 OFFCURVE",
"484 683 CURVE SMOOTH",
"553 665 OFFCURVE",
"606 617.333 OFFCURVE",
"660 550 CURVE",
"670 555 LINE",
"602 720 LINE",
"50 720 LINE",
"50 710 LINE",
"86 704.667 OFFCURVE",
"100 701 OFFCURVE",
"120 681 CURVE SMOOTH",
"136 665 OFFCURVE",
"144 653 OFFCURVE",
"143 558 CURVE SMOOTH",
"143 183 LINE SMOOTH",
"140 82 OFFCURVE",
"132 64 OFFCURVE",
"119 48 CURVE SMOOTH",
"100 27 OFFCURVE",
"74.333 15.333 OFFCURVE",
"41 10 CURVE",
"41 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
54 7 83 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
85 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
89 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
89 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
98 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
98 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 711;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
lastChange = "2020-12-31 20:44:32 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 10 LINE",
"252.87 15.275 OFFCURVE",
"252 46 OFFCURVE",
"252 144 CURVE SMOOTH",
"252 161 OFFCURVE",
"252 279 OFFCURVE",
"252 296 CURVE SMOOTH",
"252 317.333 OFFCURVE",
"252 338.667 OFFCURVE",
"252 360 CURVE",
"262.667 360 OFFCURVE",
"293.333 360 OFFCURVE",
"300 360 CURVE SMOOTH",
"313.333 360 OFFCURVE",
"327 359.333 OFFCURVE",
"347 358 CURVE SMOOTH",
"385.667 355.333 OFFCURVE",
"412.667 344.667 OFFCURVE",
"438 322 CURVE SMOOTH",
"466 296.667 OFFCURVE",
"486.333 242.667 OFFCURVE",
"497 200 CURVE",
"509 200 LINE",
"509 522 LINE",
"497 522 LINE",
"485.065 447.405 OFFCURVE",
"471.748 404.166 OFFCURVE",
"381 384 CURVE SMOOTH",
"356.123 378.669 OFFCURVE",
"293.763 376 OFFCURVE",
"270 376 CURVE SMOOTH",
"260 376 OFFCURVE",
"254 376 OFFCURVE",
"252 376 CURVE",
"252 379.333 OFFCURVE",
"252.667 579.333 OFFCURVE",
"254 626 CURVE SMOOTH",
"256.447 670.049 OFFCURVE",
"267 689 OFFCURVE",
"289 700 CURVE SMOOTH",
"301 706 OFFCURVE",
"331.734 706 OFFCURVE",
"349 706 CURVE SMOOTH",
"427.667 706 OFFCURVE",
"491.333 697.667 OFFCURVE",
"514 687 CURVE SMOOTH",
"560.667 664.333 OFFCURVE",
"609.333 615 OFFCURVE",
"664 547 CURVE",
"674 552 LINE",
"606 720 LINE",
"50 720 LINE",
"50 710 LINE",
"86 704.667 OFFCURVE",
"106 702.333 OFFCURVE",
"126 681 CURVE SMOOTH",
"142.15 664.85 OFFCURVE",
"143 597.599 OFFCURVE",
"143 558 CURVE SMOOTH",
"143 156 LINE SMOOTH",
"143 121 OFFCURVE",
"136.201 63.841 OFFCURVE",
"123 48 CURVE SMOOTH",
"104.333 26.667 OFFCURVE",
"74.333 15.333 OFFCURVE",
"41 10 CURVE",
"41 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
34 7 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 13 values pushed */
6 34 22 34 38 34 54 34 70 34 86 34 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 34 117 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
68 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 656;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"495 -5 OFFCURVE",
"561.833 10.167 OFFCURVE",
"614.5 29.5 CURVE SMOOTH",
"657.41 45.252 OFFCURVE",
"703.586 67.36 OFFCURVE",
"716 78 CURVE",
"716 224 LINE SMOOTH",
"716 254.667 OFFCURVE",
"715.667 289.333 OFFCURVE",
"725 304 CURVE SMOOTH",
"737 322.667 OFFCURVE",
"768.333 330.333 OFFCURVE",
"791 333 CURVE",
"791 343 LINE",
"498 343 LINE",
"498 333 LINE",
"536.667 329.667 OFFCURVE",
"563.667 319.333 OFFCURVE",
"579 302 CURVE SMOOTH",
"601.667 278 OFFCURVE",
"603 239.667 OFFCURVE",
"603 193 CURVE SMOOTH",
"603 146.333 OFFCURVE",
"597.667 96.333 OFFCURVE",
"587 79 CURVE SMOOTH",
"555 29.667 OFFCURVE",
"496 9 OFFCURVE",
"432 9 CURVE SMOOTH",
"342.667 9 OFFCURVE",
"273 44.667 OFFCURVE",
"225 106 CURVE SMOOTH",
"177 167.333 OFFCURVE",
"151 255 OFFCURVE",
"151 359 CURVE SMOOTH",
"151 453.667 OFFCURVE",
"178.667 542.5 OFFCURVE",
"228 608.5 CURVE SMOOTH",
"277.333 674.5 OFFCURVE",
"349 717 OFFCURVE",
"437 717 CURVE SMOOTH",
"519.667 717 OFFCURVE",
"588.333 686.333 OFFCURVE",
"631 641 CURVE SMOOTH",
"664.333 606.333 OFFCURVE",
"696.333 550 OFFCURVE",
"711 490 CURVE",
"723 490 LINE",
"723 708 LINE",
"714 708 LINE",
"705.333 696.667 OFFCURVE",
"698 687 OFFCURVE",
"692 679 CURVE SMOOTH",
"686 671 OFFCURVE",
"682.333 667 OFFCURVE",
"681 667 CURVE SMOOTH",
"678.781 667 OFFCURVE",
"641.932 689.217 OFFCURVE",
"613.5 700.5 CURVE SMOOTH",
"571.5 717.167 OFFCURVE",
"510 734 OFFCURVE",
"430 734 CURVE SMOOTH",
"296.667 734 OFFCURVE",
"206 692.667 OFFCURVE",
"142 630 CURVE SMOOTH",
"57.92 548.393 OFFCURVE",
"28 439.496 OFFCURVE",
"28 361 CURVE SMOOTH",
"28 247.667 OFFCURVE",
"65.833 154.833 OFFCURVE",
"134.5 91.5 CURVE SMOOTH",
"203.167 28.167 OFFCURVE",
"304.333 -5 OFFCURVE",
"431 -5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
60 7 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
19 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 19 22 19 38 19 54 19 70 19 86 19 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 19 117 19 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 825;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
lastChange = "2020-12-31 20:47:07 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"339 0 LINE",
"339 10 LINE",
"311 13 OFFCURVE",
"278 24 OFFCURVE",
"262 47 CURVE SMOOTH",
"251 62 OFFCURVE",
"252 102 OFFCURVE",
"252 141 CURVE SMOOTH",
"252 356 LINE",
"647 356 LINE",
"647 348 OFFCURVE",
"647 154 OFFCURVE",
"647 130 CURVE SMOOTH",
"647 104 OFFCURVE",
"645 57 OFFCURVE",
"638 47 CURVE",
"627 30 OFFCURVE",
"592 14 OFFCURVE",
"543 10 CURVE",
"543 0 LINE",
"850 0 LINE",
"850 10 LINE",
"815 14 OFFCURVE",
"784 22 OFFCURVE",
"767 49 CURVE SMOOTH",
"759 61 OFFCURVE",
"758 97 OFFCURVE",
"757 136 CURVE SMOOTH",
"757 587 LINE SMOOTH",
"757 612 OFFCURVE",
"760 653 OFFCURVE",
"767 666 CURVE SMOOTH",
"782 693 OFFCURVE",
"816 706 OFFCURVE",
"848 710 CURVE",
"848 720 LINE",
"547 720 LINE",
"547 710 LINE",
"578 709 OFFCURVE",
"610 705 OFFCURVE",
"634 669 CURVE",
"645 652 OFFCURVE",
"645 621 OFFCURVE",
"647 596 CURVE SMOOTH",
"647 570 OFFCURVE",
"647 397 OFFCURVE",
"647 376 CURVE",
"252 376 LINE",
"252 383 OFFCURVE",
"252 583 OFFCURVE",
"252 630 CURVE SMOOTH",
"252 688 OFFCURVE",
"300 704 OFFCURVE",
"345 710 CURVE",
"345 720 LINE",
"47 720 LINE",
"47 710 LINE",
"82 706 OFFCURVE",
"109 698 OFFCURVE",
"128 675 CURVE SMOOTH",
"139 662 OFFCURVE",
"143 622 OFFCURVE",
"143 594 CURVE SMOOTH",
"143 551 OFFCURVE",
"143 217 OFFCURVE",
"143 156 CURVE SMOOTH",
"143 121 OFFCURVE",
"137 60 OFFCURVE",
"127 47 CURVE SMOOTH",
"111 28 OFFCURVE",
"77 15 OFFCURVE",
"44 10 CURVE",
"44 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
111 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
46 7 66 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
111 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
100 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 100 122 100 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 100 25 100 41 100 57 100 73 100 89 100 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
100 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
100 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
100 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
100 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
90 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
100 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
92 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
92 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
100 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
100 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
96 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
96 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
100 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
98 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
98 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
91 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
82 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
82 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 900;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
lastChange = "2020-12-31 21:36:39 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{206, 726}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"349 0 LINE",
"349 10 LINE",
"321 12.667 OFFCURVE",
"280 24.333 OFFCURVE",
"264 47 CURVE SMOOTH",
"253.333 61.667 OFFCURVE",
"254 102.333 OFFCURVE",
"254 141 CURVE SMOOTH",
"254 367 LINE SMOOTH",
"254 433 OFFCURVE",
"255 563 OFFCURVE",
"256.5 624 CURVE SMOOTH",
"256.833 641.333 OFFCURVE",
"260 655.667 OFFCURVE",
"266 667 CURVE SMOOTH",
"283.333 699 OFFCURVE",
"320 706 OFFCURVE",
"348 710 CURVE",
"348 720 LINE",
"49 720 LINE",
"49 710 LINE",
"83.667 706 OFFCURVE",
"111 698 OFFCURVE",
"130 675 CURVE SMOOTH",
"146 656 OFFCURVE",
"145 578 OFFCURVE",
"145 363 CURVE SMOOTH",
"145 345 OFFCURVE",
"143 181 OFFCURVE",
"143 156 CURVE SMOOTH",
"143 119 OFFCURVE",
"141.92 64.504 OFFCURVE",
"129 49 CURVE SMOOTH",
"109 26.333 OFFCURVE",
"79.333 15.333 OFFCURVE",
"46 10 CURVE",
"46 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
12 7 33 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
lastChange = "2020-12-31 20:48:31 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"134.667 -15 OFFCURVE",
"183.333 -1.333 OFFCURVE",
"226 32 CURVE SMOOTH",
"260.667 58.667 OFFCURVE",
"284 88 OFFCURVE",
"284 132 CURVE SMOOTH",
"284 367 LINE SMOOTH",
"284 421 OFFCURVE",
"285 569 OFFCURVE",
"287 624.5 CURVE SMOOTH",
"287.667 642.167 OFFCURVE",
"290.667 656.333 OFFCURVE",
"296 667 CURVE SMOOTH",
"313.333 699 OFFCURVE",
"352 706 OFFCURVE",
"380 710 CURVE",
"380 720 LINE",
"72 720 LINE",
"72 710 LINE",
"106.667 706 OFFCURVE",
"142.333 700.667 OFFCURVE",
"161 678 CURVE SMOOTH",
"171.425 665.837 OFFCURVE",
"175 622.022 OFFCURVE",
"175 594 CURVE SMOOTH",
"175 582 OFFCURVE",
"175 570 OFFCURVE",
"175 558 CURVE SMOOTH",
"175 363 LINE SMOOTH",
"175 342 OFFCURVE",
"174 177 OFFCURVE",
"174 156 CURVE SMOOTH",
"174 119 OFFCURVE",
"170 79.333 OFFCURVE",
"162 50 CURVE SMOOTH",
"152.667 19.333 OFFCURVE",
"132.333 -5 OFFCURVE",
"99 -5 CURVE SMOOTH",
"88.333 -5 OFFCURVE",
"74.667 -0.333 OFFCURVE",
"68 9 CURVE",
"68 12 LINE",
"96 16 OFFCURVE",
"117 28.333 OFFCURVE",
"117 59 CURVE SMOOTH",
"117 85.667 OFFCURVE",
"94.667 108 OFFCURVE",
"68 108 CURVE SMOOTH",
"37.333 108 OFFCURVE",
"9 86 OFFCURVE",
"9 54 CURVE SMOOTH",
"9 5.854 OFFCURVE",
"49.543 -15 OFFCURVE",
"96 -15 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
55 7 12 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
64 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
33 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 33 22 33 38 33 54 33 70 33 86 33 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 33 117 33 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
30 39 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
36 4 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
30 44 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
lastChange = "2020-12-31 20:49:03 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"365 0 LINE",
"365 10 LINE",
"336.864 12.814 OFFCURVE",
"286.846 23.506 OFFCURVE",
"269 49 CURVE",
"255.667 66.333 OFFCURVE",
"253.333 102.333 OFFCURVE",
"252 141 CURVE SMOOTH",
"251 180 OFFCURVE",
"251 280 OFFCURVE",
"251 319 CURVE",
"255 329.667 OFFCURVE",
"256.333 334 OFFCURVE",
"267 334 CURVE SMOOTH",
"271.667 334 OFFCURVE",
"277.167 331.667 OFFCURVE",
"283.5 327 CURVE SMOOTH",
"289.833 322.333 OFFCURVE",
"301.667 310.333 OFFCURVE",
"319 291 CURVE SMOOTH",
"371 234 OFFCURVE",
"509 74 OFFCURVE",
"560 16 CURVE SMOOTH",
"568 6.667 OFFCURVE",
"574.667 2.667 OFFCURVE",
"580 0 CURVE",
"805 0 LINE",
"805 10 LINE",
"767.667 12.667 OFFCURVE",
"736.333 20.333 OFFCURVE",
"719 27 CURVE",
"707.866 30.711 OFFCURVE",
"653.272 78.673 OFFCURVE",
"638 97 CURVE SMOOTH",
"582 159.667 OFFCURVE",
"518.333 231 OFFCURVE",
"465 291 CURVE SMOOTH",
"421.919 339.466 OFFCURVE",
"372.977 395.529 OFFCURVE",
"359 413 CURVE",
"392.492 448.463 OFFCURVE",
"497.062 553.722 OFFCURVE",
"525 579 CURVE SMOOTH",
"597 645.667 OFFCURVE",
"666 703.333 OFFCURVE",
"734 710 CURVE",
"734 720 LINE",
"466 720 LINE",
"466 710 LINE",
"500.667 704.667 OFFCURVE",
"532 689.667 OFFCURVE",
"532 651 CURVE SMOOTH",
"532 628.333 OFFCURVE",
"510.667 598.667 OFFCURVE",
"488 572 CURVE",
"427.043 505.963 OFFCURVE",
"306.034 379.02 OFFCURVE",
"252 346 CURVE",
"252 395 OFFCURVE",
"252 541 OFFCURVE",
"254 590 CURVE SMOOTH",
"256.374 689.695 OFFCURVE",
"294.479 703.419 OFFCURVE",
"357 710 CURVE",
"357 720 LINE",
"47 720 LINE",
"47 710 LINE",
"81.667 706 OFFCURVE",
"108.333 696.667 OFFCURVE",
"127 674 CURVE SMOOTH",
"141.667 655.333 OFFCURVE",
"143 608.667 OFFCURVE",
"143 558 CURVE SMOOTH",
"143 363 LINE SMOOTH",
"143 342 OFFCURVE",
"142 167 OFFCURVE",
"142 156 CURVE SMOOTH",
"142 118.832 OFFCURVE",
"140.28 59.936 OFFCURVE",
"127 44 CURVE SMOOTH",
"111 25.333 OFFCURVE",
"77.333 15.333 OFFCURVE",
"44 10 CURVE",
"44 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
40 7 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
86 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
86 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
74 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
36 0 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 767;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
lastChange = "2020-12-31 20:51:13 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"676 0 LINE",
"713 206 LINE",
"703 209 LINE",
"668.987 123.968 OFFCURVE",
"635 66 OFFCURVE",
"534 30 CURVE SMOOTH",
"495 16 OFFCURVE",
"411.496 15 OFFCURVE",
"388 15 CURVE SMOOTH",
"343.926 15 OFFCURVE",
"277 27 OFFCURVE",
"266 42 CURVE SMOOTH",
"253 60 OFFCURVE",
"253 103 OFFCURVE",
"253 146 CURVE SMOOTH",
"253 223 OFFCURVE",
"253 549 OFFCURVE",
"253 622 CURVE SMOOTH",
"253 649 OFFCURVE",
"263 668 OFFCURVE",
"279 681 CURVE SMOOTH",
"300 699 OFFCURVE",
"332 706 OFFCURVE",
"360 710 CURVE",
"360 720 LINE",
"41 720 LINE",
"41 710 LINE",
"70 707 OFFCURVE",
"90 702 OFFCURVE",
"105 692 CURVE SMOOTH",
"132 673 OFFCURVE",
"141 649 OFFCURVE",
"141 627 CURVE SMOOTH",
"141 156 LINE SMOOTH",
"141 120 OFFCURVE",
"135.189 63.827 OFFCURVE",
"122 48 CURVE SMOOTH",
"103.333 26.667 OFFCURVE",
"67.333 15.333 OFFCURVE",
"34 10 CURVE",
"34 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
19 7 52 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 19 22 19 38 19 54 19 70 19 86 19 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 19 117 19 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
38 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 708;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
lastChange = "2020-12-31 20:52:59 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"286 0 LINE",
"286 10 LINE",
"171.338 26 OFFCURVE",
"164 79.953 OFFCURVE",
"164 206 CURVE SMOOTH",
"164 269 OFFCURVE",
"166 558 OFFCURVE",
"166 655 CURVE",
"180.294 623.553 OFFCURVE",
"242.46 484.417 OFFCURVE",
"266 431 CURVE SMOOTH",
"283.333 391.667 OFFCURVE",
"302 349.5 OFFCURVE",
"322 304.5 CURVE SMOOTH",
"355.129 229.959 OFFCURVE",
"412.22 97.429 OFFCURVE",
"447 17 CURVE",
"453 17 LINE",
"458.168 32.505 OFFCURVE",
"504.488 142.976 OFFCURVE",
"512 158 CURVE",
"556 256.667 OFFCURVE",
"591 335.333 OFFCURVE",
"627 414 CURVE SMOOTH",
"655.191 475.602 OFFCURVE",
"708.518 595.918 OFFCURVE",
"740 671 CURVE",
"740 332 OFFCURVE",
"740 194 OFFCURVE",
"740 138 CURVE SMOOTH",
"740 111 OFFCURVE",
"735 83.333 OFFCURVE",
"727 66 CURVE SMOOTH",
"713.667 38 OFFCURVE",
"673.333 13.667 OFFCURVE",
"616 11 CURVE",
"616 0 LINE",
"959 0 LINE",
"959 10 LINE",
"911.347 11.986 OFFCURVE",
"871.167 37.667 OFFCURVE",
"861 58 CURVE",
"853 72.667 OFFCURVE",
"850 102 OFFCURVE",
"849 127 CURVE SMOOTH",
"849 190 OFFCURVE",
"849 452 OFFCURVE",
"849 583 CURVE SMOOTH",
"849 620 OFFCURVE",
"856 647 OFFCURVE",
"861 655 CURVE SMOOTH",
"878 682 OFFCURVE",
"898.333 708.667 OFFCURVE",
"953 710 CURVE",
"953 720 LINE",
"740 720 LINE",
"732.62 700.319 OFFCURVE",
"695.905 615.323 OFFCURVE",
"660.5 535 CURVE SMOOTH",
"615.833 433.667 OFFCURVE",
"557.667 302.667 OFFCURVE",
"499 176 CURVE",
"260 720 LINE",
"47 720 LINE",
"47 710 LINE",
"71 706 OFFCURVE",
"98 699 OFFCURVE",
"117 682 CURVE SMOOTH",
"133 668 OFFCURVE",
"145 647 OFFCURVE",
"146 616 CURVE SMOOTH",
"148 550 OFFCURVE",
"146 268 OFFCURVE",
"143 214 CURVE SMOOTH",
"140.493 86.137 OFFCURVE",
"120.116 29.023 OFFCURVE",
"25 10 CURVE",
"25 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
17 7 86 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
86 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
89 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
86 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
91 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
91 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
100 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
30 0 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
68 0 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
76 0 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
86 0 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 991;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2020-12-31 21:44:04 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{438, 730}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"731.667 -3 OFFCURVE",
"735 0.667 OFFCURVE",
"735 6 CURVE SMOOTH",
"735 25.333 OFFCURVE",
"735 47 OFFCURVE",
"735 71 CURVE SMOOTH",
"735 95 OFFCURVE",
"734.833 119.167 OFFCURVE",
"734.5 143.5 CURVE SMOOTH",
"733 227 OFFCURVE",
"735 422 OFFCURVE",
"739 506 CURVE SMOOTH",
"741.667 567.333 OFFCURVE",
"742.667 628 OFFCURVE",
"752 648 CURVE",
"768 686.667 OFFCURVE",
"796.667 703.333 OFFCURVE",
"846 710 CURVE",
"846 720 LINE",
"598 720 LINE",
"598 710 LINE",
"662 700.667 OFFCURVE",
"693.667 677.333 OFFCURVE",
"707 640 CURVE SMOOTH",
"717.667 612 OFFCURVE",
"717 559.333 OFFCURVE",
"717 506 CURVE SMOOTH",
"717 166 LINE",
"243 720 LINE",
"40 720 LINE",
"40 710 LINE",
"91.79 703.526 OFFCURVE",
"143 684 OFFCURVE",
"146 612 CURVE SMOOTH",
"147 585 OFFCURVE",
"147 460.333 OFFCURVE",
"147 441 CURVE SMOOTH",
"147 351.667 OFFCURVE",
"145.667 271.333 OFFCURVE",
"143 214 CURVE SMOOTH",
"140.333 138 OFFCURVE",
"137.667 82 OFFCURVE",
"119 54 CURVE SMOOTH",
"100.333 24.667 OFFCURVE",
"65 14 OFFCURVE",
"33 10 CURVE",
"33 0 LINE",
"279 0 LINE",
"279 10 LINE",
"224.333 16.667 OFFCURVE",
"194.667 30.333 OFFCURVE",
"180 61 CURVE SMOOTH",
"166.667 87.667 OFFCURVE",
"165 146 OFFCURVE",
"165 214 CURVE SMOOTH",
"165 636 LINE",
"255.667 534.667 OFFCURVE",
"333.833 442.833 OFFCURVE",
"418.5 343.5 CURVE SMOOTH",
"503.167 244.167 OFFCURVE",
"593.667 137.667 OFFCURVE",
"707 7 CURVE",
"713.667 0.333 OFFCURVE",
"719.667 -3 OFFCURVE",
"725 -3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
36 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
10 52 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
45 52 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 875;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
lastChange = "2020-12-31 21:37:07 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{417, 725}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"504.667 -5 OFFCURVE",
"598.833 32.333 OFFCURVE",
"667.5 99 CURVE SMOOTH",
"736.167 165.667 OFFCURVE",
"779 258.333 OFFCURVE",
"779 365 CURVE SMOOTH",
"779 461 OFFCURVE",
"744.667 552.167 OFFCURVE",
"682 619.5 CURVE SMOOTH",
"619.333 686.833 OFFCURVE",
"528.333 730 OFFCURVE",
"415 730 CURVE SMOOTH",
"311 730 OFFCURVE",
"213.5 694.833 OFFCURVE",
"143.5 631.5 CURVE SMOOTH",
"73.5 568.167 OFFCURVE",
"29 475.667 OFFCURVE",
"29 361 CURVE SMOOTH",
"29 253 OFFCURVE",
"71 161.167 OFFCURVE",
"139 96.5 CURVE SMOOTH",
"207 31.833 OFFCURVE",
"300.667 -5 OFFCURVE",
"402 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"322 10 OFFCURVE",
"258.5 52 OFFCURVE",
"216.5 116 CURVE SMOOTH",
"174.5 180 OFFCURVE",
"153 267.333 OFFCURVE",
"153 358 CURVE SMOOTH",
"153 444.667 OFFCURVE",
"171.833 533.333 OFFCURVE",
"212.5 600 CURVE SMOOTH",
"253.167 666.667 OFFCURVE",
"316.333 713 OFFCURVE",
"403 713 CURVE SMOOTH",
"569.104 713 OFFCURVE",
"655 532.116 OFFCURVE",
"655 364 CURVE SMOOTH",
"655 280 OFFCURVE",
"634.333 191.833 OFFCURVE",
"593 124.5 CURVE SMOOTH",
"551.667 57.167 OFFCURVE",
"490 10 OFFCURVE",
"406 10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 20 122 20 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 20 25 20 41 20 57 20 73 20 89 20 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 30 22 30 38 30 54 30 70 30 86 30 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 30 117 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 808;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
lastChange = "2020-12-31 20:54:44 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 10 LINE",
"306.333 12.667 OFFCURVE",
"277 34 OFFCURVE",
"266 51 CURVE SMOOTH",
"253 71 OFFCURVE",
"254 101 OFFCURVE",
"253 144 CURVE SMOOTH",
"253 182 OFFCURVE",
"252 263 OFFCURVE",
"252 301 CURVE",
"268 301 OFFCURVE",
"286 301 OFFCURVE",
"306 301 CURVE SMOOTH",
"359.193 301 OFFCURVE",
"444.984 308.494 OFFCURVE",
"494 326 CURVE SMOOTH",
"571.291 354.626 OFFCURVE",
"636 417.119 OFFCURVE",
"636 512 CURVE SMOOTH",
"636 592 OFFCURVE",
"592.667 652 OFFCURVE",
"534 684 CURVE SMOOTH",
"474 717.333 OFFCURVE",
"409 722 OFFCURVE",
"321 722 CURVE SMOOTH",
"309 722 OFFCURVE",
"294 722 OFFCURVE",
"276 722 CURVE SMOOTH",
"258.667 722 OFFCURVE",
"240.167 721.833 OFFCURVE",
"220.5 721.5 CURVE SMOOTH",
"200.833 721.167 OFFCURVE",
"181 721 OFFCURVE",
"161 721 CURVE SMOOTH",
"141 721 OFFCURVE",
"122.5 720.833 OFFCURVE",
"105.5 720.5 CURVE SMOOTH",
"88.5 720.167 OFFCURVE",
"73.667 720 OFFCURVE",
"61 720 CURVE SMOOTH",
"49 720 OFFCURVE",
"41 720 OFFCURVE",
"37 720 CURVE",
"37 710 LINE",
"73 704.667 OFFCURVE",
"106 700.333 OFFCURVE",
"126 679 CURVE SMOOTH",
"142.103 662.897 OFFCURVE",
"143 596.302 OFFCURVE",
"143 558 CURVE SMOOTH",
"143 317 OFFCURVE",
"143 202 OFFCURVE",
"143 156 CURVE SMOOTH",
"143 121 OFFCURVE",
"137.405 60.886 OFFCURVE",
"125 46 CURVE SMOOTH",
"107.667 24.667 OFFCURVE",
"74.333 15.333 OFFCURVE",
"41 10 CURVE",
"41 0 LINE"
);
},
{
closed = 1;
nodes = (
"252 320.333 OFFCURVE",
"252 335 OFFCURVE",
"252 359 CURVE SMOOTH",
"252 383 OFFCURVE",
"252 411 OFFCURVE",
"252 443 CURVE SMOOTH",
"252 507 OFFCURVE",
"253 571 OFFCURVE",
"254 618 CURVE SMOOTH",
"255 649 OFFCURVE",
"255 657 OFFCURVE",
"257 669 CURVE SMOOTH",
"258 677 OFFCURVE",
"260 687 OFFCURVE",
"263 703 CURVE",
"282 706 OFFCURVE",
"297 707 OFFCURVE",
"314 707 CURVE SMOOTH",
"353 707 OFFCURVE",
"389 702.667 OFFCURVE",
"421 688 CURVE SMOOTH",
"485 657.333 OFFCURVE",
"528 594.333 OFFCURVE",
"528 517 CURVE SMOOTH",
"528 433 OFFCURVE",
"481.333 360.333 OFFCURVE",
"396 331 CURVE SMOOTH",
"354.667 316.333 OFFCURVE",
"306.667 315 OFFCURVE",
"252 315 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
94 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
95 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
67 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 67 122 67 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 67 25 67 41 67 57 67 73 67 89 67 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
94 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
49 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 49 22 49 38 49 54 49 70 49 86 49 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 49 117 49 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
77 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
6 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 656;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"589 -151 OFFCURVE",
"639.333 -128.667 OFFCURVE",
"678 -102 CURVE",
"673 -94 LINE",
"646.333 -104.667 OFFCURVE",
"625 -107 OFFCURVE",
"601 -107 CURVE SMOOTH",
"530.078 -107 OFFCURVE",
"468 -67.535 OFFCURVE",
"468 2 CURVE",
"556 18 OFFCURVE",
"634.167 61.167 OFFCURVE",
"689.5 124.5 CURVE SMOOTH",
"744.833 187.833 OFFCURVE",
"779 270.333 OFFCURVE",
"779 365 CURVE SMOOTH",
"779 461 OFFCURVE",
"744.667 552.167 OFFCURVE",
"682 619.5 CURVE SMOOTH",
"619.333 686.833 OFFCURVE",
"528.333 730 OFFCURVE",
"415 730 CURVE SMOOTH",
"319 730 OFFCURVE",
"229.667 701 OFFCURVE",
"159 641 CURVE SMOOTH",
"72.333 567 OFFCURVE",
"29 473.667 OFFCURVE",
"29 361 CURVE SMOOTH",
"29 266.333 OFFCURVE",
"62.5 185.5 OFFCURVE",
"116.5 123.5 CURVE SMOOTH",
"170.5 61.5 OFFCURVE",
"244.667 18.333 OFFCURVE",
"326 1 CURVE",
"339.313 -105.503 OFFCURVE",
"417.624 -151 OFFCURVE",
"525 -151 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328.667 6 OFFCURVE",
"265 48.667 OFFCURVE",
"221 114 CURVE SMOOTH",
"177 179.333 OFFCURVE",
"153 267.333 OFFCURVE",
"153 358 CURVE SMOOTH",
"153 444.667 OFFCURVE",
"171.833 533.333 OFFCURVE",
"212.5 600 CURVE SMOOTH",
"253.167 666.667 OFFCURVE",
"316.333 713 OFFCURVE",
"403 713 CURVE SMOOTH",
"569.104 713 OFFCURVE",
"655 532.116 OFFCURVE",
"655 364 CURVE SMOOTH",
"655 194.052 OFFCURVE",
"581.26 6 OFFCURVE",
"406 6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
47 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 47 22 47 38 47 54 47 70 47 86 47 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 47 117 47 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 37 122 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 37 25 37 41 37 57 37 73 37 89 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
42 4 20 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 808;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2021-01-01 23:35:44 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"361 0 LINE",
"361 10 LINE",
"306.333 12.667 OFFCURVE",
"282 35 OFFCURVE",
"271 52 CURVE SMOOTH",
"258 72 OFFCURVE",
"252 92 OFFCURVE",
"252 145 CURVE SMOOTH",
"252 339 LINE",
"272 338 OFFCURVE",
"280 339 OFFCURVE",
"304 334 CURVE SMOOTH",
"338.667 327.333 OFFCURVE",
"370.333 296.667 OFFCURVE",
"397 266 CURVE SMOOTH",
"429 228.667 OFFCURVE",
"451 200.333 OFFCURVE",
"471 171 CURVE SMOOTH",
"485.645 149.521 OFFCURVE",
"515.034 103.949 OFFCURVE",
"534 76 CURVE SMOOTH",
"559.681 39.084 OFFCURVE",
"569.226 22.774 OFFCURVE",
"592 0 CURVE",
"797 0 LINE",
"797 10 LINE",
"734.333 19.333 OFFCURVE",
"692.333 47.667 OFFCURVE",
"643 117 CURVE SMOOTH",
"611 162.333 OFFCURVE",
"566.667 226.333 OFFCURVE",
"532 277 CURVE SMOOTH",
"512 305 OFFCURVE",
"490.667 329 OFFCURVE",
"468 341 CURVE",
"468 344 LINE",
"558.048 374.016 OFFCURVE",
"633 430.251 OFFCURVE",
"633 528 CURVE SMOOTH",
"633 608 OFFCURVE",
"593.667 659.333 OFFCURVE",
"535 690 CURVE SMOOTH",
"477.667 720.667 OFFCURVE",
"410.333 721 OFFCURVE",
"321 721 CURVE SMOOTH",
"303 721 OFFCURVE",
"279.667 721 OFFCURVE",
"251 721 CURVE SMOOTH",
"222.333 721 OFFCURVE",
"193.667 720.833 OFFCURVE",
"165 720.5 CURVE SMOOTH",
"136.333 720.167 OFFCURVE",
"110.667 720 OFFCURVE",
"88 720 CURVE SMOOTH",
"66 720 OFFCURVE",
"52.333 720 OFFCURVE",
"47 720 CURVE",
"47 710 LINE",
"83 704.667 OFFCURVE",
"102 697 OFFCURVE",
"126 679 CURVE SMOOTH",
"138 670 OFFCURVE",
"143 626 OFFCURVE",
"143 558 CURVE SMOOTH",
"143 156 LINE SMOOTH",
"143 103 OFFCURVE",
"136 57 OFFCURVE",
"125 46 CURVE SMOOTH",
"105 26 OFFCURVE",
"74.333 15.333 OFFCURVE",
"41 10 CURVE",
"41 0 LINE"
);
},
{
closed = 1;
nodes = (
"252 626 LINE SMOOTH",
"252 665 OFFCURVE",
"255 687 OFFCURVE",
"261 697 CURVE SMOOTH",
"264 702 OFFCURVE",
"286 707 OFFCURVE",
"314 706 CURVE SMOOTH",
"353 705 OFFCURVE",
"388 699.667 OFFCURVE",
"420 685 CURVE SMOOTH",
"484 654.333 OFFCURVE",
"518 600.667 OFFCURVE",
"518 534 CURVE SMOOTH",
"518 459.664 OFFCURVE",
"478.433 395.448 OFFCURVE",
"397 370 CURVE SMOOTH",
"353 355.333 OFFCURVE",
"306.667 352 OFFCURVE",
"252 352 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
113 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
114 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
113 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
114 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
11 45 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
62 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 62 22 62 38 62 54 62 70 62 86 62 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 62 117 62 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
84 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 84 122 84 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 84 25 84 41 84 57 84 73 84 89 84 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
92 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
92 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
96 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
96 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
99 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
104 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
104 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
11 0 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 762;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"445.258 -7 OFFCURVE",
"558 63.98 OFFCURVE",
"558 197 CURVE SMOOTH",
"558 291.667 OFFCURVE",
"505.667 354.667 OFFCURVE",
"415 388 CURVE SMOOTH",
"374.766 402.823 OFFCURVE",
"311.282 422.287 OFFCURVE",
"272 438 CURVE SMOOTH",
"204 463.333 OFFCURVE",
"157 503.333 OFFCURVE",
"157 574 CURVE SMOOTH",
"157 664.037 OFFCURVE",
"220.816 715 OFFCURVE",
"307 715 CURVE SMOOTH",
"407.148 715 OFFCURVE",
"476.825 625.232 OFFCURVE",
"510 534 CURVE",
"521 534 LINE",
"521 719 LINE",
"510 719 LINE",
"499.333 703 OFFCURVE",
"484 683 OFFCURVE",
"480 683 CURVE SMOOTH",
"478.243 683 OFFCURVE",
"457.334 698.292 OFFCURVE",
"437.5 707 CURVE SMOOTH",
"410.167 719 OFFCURVE",
"368 731 OFFCURVE",
"308 731 CURVE SMOOTH",
"175.916 731 OFFCURVE",
"68 661.393 OFFCURVE",
"68 522 CURVE SMOOTH",
"68 438.938 OFFCURVE",
"128.973 368.318 OFFCURVE",
"200 341 CURVE SMOOTH",
"218.421 333.792 OFFCURVE",
"328.443 295.959 OFFCURVE",
"347 289 CURVE SMOOTH",
"412.891 264.291 OFFCURVE",
"462 230.664 OFFCURVE",
"462 157 CURVE SMOOTH",
"462 65 OFFCURVE",
"394.667 7 OFFCURVE",
"296 7 CURVE SMOOTH",
"244.134 7 OFFCURVE",
"191.424 32.503 OFFCURVE",
"161.5 60 CURVE SMOOTH",
"127.422 91.315 OFFCURVE",
"89.058 151.827 OFFCURVE",
"73 200 CURVE",
"63 200 LINE",
"66 1 LINE",
"75 1 LINE",
"85.667 15.667 OFFCURVE",
"102 36 OFFCURVE",
"106 36 CURVE SMOOTH",
"110.52 36 OFFCURVE",
"131.647 22.131 OFFCURVE",
"155 13.5 CURVE SMOOTH",
"185.667 2.167 OFFCURVE",
"231.667 -7 OFFCURVE",
"297 -7 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
77 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
78 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
77 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
11 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 11 22 11 38 11 54 11 70 11 86 11 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 11 117 11 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
51 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 51 122 51 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 51 25 51 41 51 57 51 73 51 89 51 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
61 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 605;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
lastChange = "2020-12-31 20:56:23 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"525 0 LINE",
"525 10 LINE",
"495.667 15.333 OFFCURVE",
"453 22.667 OFFCURVE",
"433 52 CURVE SMOOTH",
"422.333 66.667 OFFCURVE",
"422 106.333 OFFCURVE",
"422 145 CURVE SMOOTH",
"422 387.667 OFFCURVE",
"422.167 597.333 OFFCURVE",
"422.5 626 CURVE SMOOTH",
"422.833 654.667 OFFCURVE",
"423 677.333 OFFCURVE",
"423 694 CURVE",
"460 694 OFFCURVE",
"513 693 OFFCURVE",
"550 693 CURVE SMOOTH",
"600.667 691.667 OFFCURVE",
"630 685 OFFCURVE",
"658 659 CURVE SMOOTH",
"678 640 OFFCURVE",
"723.602 571.145 OFFCURVE",
"741 532 CURVE",
"750 535 LINE",
"718 730 LINE",
"687.333 720.667 OFFCURVE",
"663 714.333 OFFCURVE",
"619 713 CURVE SMOOTH",
"571 713 OFFCURVE",
"181 711 OFFCURVE",
"119 713 CURVE SMOOTH",
"69.667 714.333 OFFCURVE",
"50.667 718.333 OFFCURVE",
"20 725 CURVE",
"-10 535 LINE",
"-1 532 LINE",
"12.135 571.405 OFFCURVE",
"58 638 OFFCURVE",
"78 656 CURVE SMOOTH",
"106 682 OFFCURVE",
"135.333 691.667 OFFCURVE",
"186 693 CURVE SMOOTH",
"235 693 OFFCURVE",
"264 694 OFFCURVE",
"313 694 CURVE",
"313 317 OFFCURVE",
"311 206 OFFCURVE",
"311 160 CURVE SMOOTH",
"311 125.855 OFFCURVE",
"309.364 65.364 OFFCURVE",
"297 53 CURVE",
"266.333 18.333 OFFCURVE",
"234.667 14 OFFCURVE",
"200 10 CURVE",
"200 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
66 7 37 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
76 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 737;
}
);
note = T;
unicode = 0054;
},
{
glyphname = U;
lastChange = "2021-01-01 23:47:37 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{445, 729}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"605 -10 OFFCURVE",
"718 96 OFFCURVE",
"718 281 CURVE SMOOTH",
"718 497 LINE SMOOTH",
"718 547 OFFCURVE",
"723.106 627.248 OFFCURVE",
"732 648 CURVE SMOOTH",
"748 686.667 OFFCURVE",
"774.667 703.333 OFFCURVE",
"824 710 CURVE",
"824 720 LINE",
"576 720 LINE",
"576 710 LINE",
"640 700.667 OFFCURVE",
"664 686 OFFCURVE",
"680 640 CURVE SMOOTH",
"686 623 OFFCURVE",
"690 547 OFFCURVE",
"690 497 CURVE SMOOTH",
"690 284 LINE SMOOTH",
"690 136 OFFCURVE",
"610 22 OFFCURVE",
"454 22 CURVE SMOOTH",
"321 22 OFFCURVE",
"241 115 OFFCURVE",
"241 256 CURVE SMOOTH",
"241 630 LINE SMOOTH",
"241 688 OFFCURVE",
"287.66 703.523 OFFCURVE",
"333 710 CURVE",
"333 720 LINE",
"35 720 LINE",
"35 710 LINE",
"69.667 706 OFFCURVE",
"97.333 697.667 OFFCURVE",
"116 675 CURVE SMOOTH",
"127.257 661.866 OFFCURVE",
"131 628 OFFCURVE",
"130 594 CURVE SMOOTH",
"130 252 LINE SMOOTH",
"130 166 OFFCURVE",
"154 96 OFFCURVE",
"217 45.5 CURVE SMOOTH",
"259.667 11.5 OFFCURVE",
"324 -10 OFFCURVE",
"420 -10 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
31 7 63 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
83 11 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
218 11 234 11 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 105 11 121 11 137 11 153 11 169 11 185 11 201 11 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
92 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
51 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
73 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
26 2 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 26 23 26 39 26 55 26 71 26 87 26 103 26 119 26 135 26 151 26 167 26 183 26 199 26 215 26 231 26 247 26 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 26 23 26 39 26 55 26 71 26 87 26 103 26 119 26 135 26 151 26 167 26 183 26 199 26 215 26 231 26 247 26 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 26 23 26 39 26 55 26 71 26 87 26 103 26 119 26 135 26 151 26 167 26 183 26 199 26 215 26 231 26 247 26 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 834;
}
);
note = U;
unicode = 0055;
},
{
glyphname = V;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"337 -7 LINE",
"386 93 LINE",
"410.801 157.257 OFFCURVE",
"454.388 270.417 OFFCURVE",
"482 340 CURVE SMOOTH",
"515.333 424 OFFCURVE",
"548.333 506 OFFCURVE",
"575 570 CURVE SMOOTH",
"596.128 621.06 OFFCURVE",
"618.382 662.382 OFFCURVE",
"634 678 CURVE",
"636 680.667 OFFCURVE",
"643.5 686 OFFCURVE",
"656.5 694 CURVE SMOOTH",
"669.5 702 OFFCURVE",
"684.667 707 OFFCURVE",
"702 709 CURVE",
"702 720 LINE",
"469 720 LINE",
"469 710 LINE",
"506.673 707.102 OFFCURVE",
"565 691.46 OFFCURVE",
"565 654 CURVE SMOOTH",
"565 646.667 OFFCURVE",
"563 633.5 OFFCURVE",
"559 614.5 CURVE SMOOTH",
"555 595.5 OFFCURVE",
"546.333 567.667 OFFCURVE",
"533 531 CURVE SMOOTH",
"497 435 OFFCURVE",
"462.833 344.333 OFFCURVE",
"435.5 275 CURVE SMOOTH",
"413.878 220.154 OFFCURVE",
"390.603 158.727 OFFCURVE",
"383 142 CURVE",
"375.667 162 OFFCURVE",
"365.667 187.667 OFFCURVE",
"353 219 CURVE SMOOTH",
"327.667 281.667 OFFCURVE",
"298.333 356.167 OFFCURVE",
"269 431.5 CURVE SMOOTH",
"248.802 483.372 OFFCURVE",
"190 624.379 OFFCURVE",
"190 659 CURVE SMOOTH",
"190 698.196 OFFCURVE",
"242.087 704.617 OFFCURVE",
"269 710 CURVE",
"269 720 LINE",
"-30 720 LINE",
"-30 709 LINE",
"21.746 706.75 OFFCURVE",
"47.202 676.595 OFFCURVE",
"59 653 CURVE SMOOTH",
"72.475 626.05 OFFCURVE",
"94.815 578.358 OFFCURVE",
"106 548 CURVE SMOOTH",
"139.333 462.667 OFFCURVE",
"172 379.667 OFFCURVE",
"208 289 CURVE SMOOTH",
"236.635 216.881 OFFCURVE",
"290.393 77.945 OFFCURVE",
"325 -7 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
16 46 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"320 -3 LINE",
"364 95 LINE",
"386.667 157.667 OFFCURVE",
"411 225.667 OFFCURVE",
"435 295 CURVE SMOOTH",
"454.63 351.708 OFFCURVE",
"487.581 443.92 OFFCURVE",
"505 494 CURVE",
"527.451 434.131 OFFCURVE",
"564.793 326.426 OFFCURVE",
"587.5 262 CURVE SMOOTH",
"616.167 180.667 OFFCURVE",
"647 93 OFFCURVE",
"683 -3 CURVE",
"693 -3 LINE",
"735 93 LINE",
"756.488 157.463 OFFCURVE",
"796.103 271.442 OFFCURVE",
"819.5 340 CURVE SMOOTH",
"842.699 407.978 OFFCURVE",
"880.474 514.264 OFFCURVE",
"899 571 CURVE SMOOTH",
"917.721 625.292 OFFCURVE",
"938.601 661.601 OFFCURVE",
"958 681 CURVE",
"960 683.667 OFFCURVE",
"966.833 688.667 OFFCURVE",
"978.5 696 CURVE SMOOTH",
"990.167 703.333 OFFCURVE",
"1004.333 708 OFFCURVE",
"1021 710 CURVE",
"1021 720 LINE",
"801 720 LINE",
"801 710 LINE",
"835.563 707.12 OFFCURVE",
"887 691.573 OFFCURVE",
"887 655 CURVE SMOOTH",
"887 648.333 OFFCURVE",
"886.333 638 OFFCURVE",
"885 624 CURVE SMOOTH",
"883.667 610 OFFCURVE",
"878.333 587.667 OFFCURVE",
"869 557 CURVE SMOOTH",
"861.667 533 OFFCURVE",
"853.5 507.167 OFFCURVE",
"844.5 479.5 CURVE SMOOTH",
"829.783 434.258 OFFCURVE",
"805.305 358.868 OFFCURVE",
"790.5 315 CURVE SMOOTH",
"777.706 277.093 OFFCURVE",
"745.394 179.92 OFFCURVE",
"736 158 CURVE",
"731.333 170.667 OFFCURVE",
"723.833 191.167 OFFCURVE",
"713.5 219.5 CURVE SMOOTH",
"695.937 267.657 OFFCURVE",
"661.917 363.706 OFFCURVE",
"639 427 CURVE SMOOTH",
"619.456 480.978 OFFCURVE",
"562 625.763 OFFCURVE",
"562 659 CURVE SMOOTH",
"562 698.223 OFFCURVE",
"626.235 705.206 OFFCURVE",
"655 710 CURVE",
"655 720 LINE",
"342 720 LINE",
"342 709 LINE",
"399.292 706.613 OFFCURVE",
"425.764 682.472 OFFCURVE",
"440 654 CURVE SMOOTH",
"458.667 615.333 OFFCURVE",
"473 577.333 OFFCURVE",
"493 524 CURVE",
"463.667 432 OFFCURVE",
"433 344.833 OFFCURVE",
"409 277.5 CURVE SMOOTH",
"390.28 224.98 OFFCURVE",
"369.399 166.397 OFFCURVE",
"364 152 CURVE",
"356.667 172 OFFCURVE",
"347 197.5 OFFCURVE",
"335 228.5 CURVE SMOOTH",
"311 290.5 OFFCURVE",
"282.833 363.667 OFFCURVE",
"255.5 437 CURVE SMOOTH",
"236.763 487.271 OFFCURVE",
"180 625.096 OFFCURVE",
"180 659 CURVE SMOOTH",
"180 699.189 OFFCURVE",
"230.739 710 OFFCURVE",
"254 710 CURVE",
"254 720 LINE",
"-28 720 LINE",
"-28 709 LINE",
"22.003 706.727 OFFCURVE",
"44.471 677.058 OFFCURVE",
"56 654 CURVE SMOOTH",
"66.43 633.139 OFFCURVE",
"86.919 581.791 OFFCURVE",
"99 549 CURVE SMOOTH",
"131 465 OFFCURVE",
"162.5 381.5 OFFCURVE",
"196.5 291.5 CURVE SMOOTH",
"224.027 218.635 OFFCURVE",
"275.492 81.94 OFFCURVE",
"308 -3 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
59 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
76 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
76 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
88 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
18 76 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
46 76 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
83 76 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 991;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"248 0 LINE",
"248 10 LINE",
"208.685 15.616 OFFCURVE",
"156 31.786 OFFCURVE",
"156 69 CURVE SMOOTH",
"156 93 OFFCURVE",
"173.333 120.333 OFFCURVE",
"192 147 CURVE SMOOTH",
"220.178 186.919 OFFCURVE",
"295.358 277.675 OFFCURVE",
"331 320 CURVE",
"381.667 249.333 OFFCURVE",
"420.333 194 OFFCURVE",
"451 146 CURVE SMOOTH",
"473.667 111.333 OFFCURVE",
"494 77.667 OFFCURVE",
"494 59 CURVE SMOOTH",
"494 21.698 OFFCURVE",
"442.351 15.764 OFFCURVE",
"402 10 CURVE",
"402 0 LINE",
"726 0 LINE",
"726 10 LINE",
"669.472 18.075 OFFCURVE",
"632.458 74.635 OFFCURVE",
"586 142 CURVE",
"572.188 163.705 OFFCURVE",
"515.752 241.654 OFFCURVE",
"492 275.5 CURVE SMOOTH",
"470.1 306.707 OFFCURVE",
"415.43 384.855 OFFCURVE",
"408 396 CURVE",
"424.454 415.745 OFFCURVE",
"540.458 556.833 OFFCURVE",
"561 581 CURVE SMOOTH",
"619.667 651.667 OFFCURVE",
"666 695.333 OFFCURVE",
"734 710 CURVE",
"734 720 LINE",
"473 720 LINE",
"473 710 LINE",
"508.917 704.474 OFFCURVE",
"564 688.182 OFFCURVE",
"564 652 CURVE SMOOTH",
"564 630.667 OFFCURVE",
"540 593.333 OFFCURVE",
"524 572 CURVE SMOOTH",
"506.667 550 OFFCURVE",
"486.5 524 OFFCURVE",
"463.5 494 CURVE SMOOTH",
"440.5 464 OFFCURVE",
"418 436.333 OFFCURVE",
"396 411 CURVE",
"371.333 446.333 OFFCURVE",
"350.333 476.5 OFFCURVE",
"333 501.5 CURVE SMOOTH",
"315.667 526.5 OFFCURVE",
"298.667 551 OFFCURVE",
"282 575 CURVE SMOOTH",
"258 609.667 OFFCURVE",
"236 642.333 OFFCURVE",
"236 661 CURVE SMOOTH",
"236 696.316 OFFCURVE",
"292.812 707.062 OFFCURVE",
"331 710 CURVE",
"331 720 LINE",
"5 720 LINE",
"5 710 LINE",
"68.785 690.587 OFFCURVE",
"96.275 649.43 OFFCURVE",
"148 578 CURVE SMOOTH",
"180.573 533.212 OFFCURVE",
"305.344 355.541 OFFCURVE",
"320 336 CURVE",
"301.73 314.076 OFFCURVE",
"174.981 160.779 OFFCURVE",
"154 137 CURVE SMOOTH",
"94 69 OFFCURVE",
"36.333 24.667 OFFCURVE",
"-17 10 CURVE",
"-17 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
74 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 708;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2020-12-31 21:51:13 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{371, 728}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"473 0 LINE",
"473 10 LINE",
"443.667 15.333 OFFCURVE",
"408 20.667 OFFCURVE",
"388 50 CURVE SMOOTH",
"377.333 64.667 OFFCURVE",
"377 106.333 OFFCURVE",
"377 145 CURVE SMOOTH",
"377 346 LINE",
"395.857 374.285 OFFCURVE",
"500.448 533.626 OFFCURVE",
"531 582 CURVE SMOOTH",
"576.893 653.39 OFFCURVE",
"608.417 699.488 OFFCURVE",
"682 710 CURVE",
"682 720 LINE",
"451 720 LINE",
"451 710 LINE",
"491.396 704.229 OFFCURVE",
"536 699.211 OFFCURVE",
"536 659 CURVE SMOOTH",
"536 634.962 OFFCURVE",
"511.549 591.479 OFFCURVE",
"500 573 CURVE",
"476.954 532.029 OFFCURVE",
"396.895 407.155 OFFCURVE",
"366 362 CURVE",
"362.387 368.097 OFFCURVE",
"240.708 567.296 OFFCURVE",
"236 575 CURVE SMOOTH",
"214.667 611 OFFCURVE",
"191 650.667 OFFCURVE",
"191 668 CURVE SMOOTH",
"191 701.024 OFFCURVE",
"238.91 707.394 OFFCURVE",
"278 710 CURVE",
"278 720 LINE",
"-25 720 LINE",
"-25 710 LINE",
"29.537 707.273 OFFCURVE",
"65.161 643.386 OFFCURVE",
"108 578 CURVE SMOOTH",
"126.309 550.536 OFFCURVE",
"172.916 475.054 OFFCURVE",
"199.5 431 CURVE SMOOTH",
"220.49 396.217 OFFCURVE",
"260.597 331.104 OFFCURVE",
"268 320 CURVE",
"268 246.667 OFFCURVE",
"266 197 OFFCURVE",
"266 160 CURVE SMOOTH",
"266 125.787 OFFCURVE",
"264.767 63.767 OFFCURVE",
"252 51 CURVE",
"222.667 17.667 OFFCURVE",
"199.667 14 OFFCURVE",
"165 10 CURVE",
"165 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
67 7 46 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
18 46 67 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
58 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
18 58 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 649;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
lastChange = "2020-12-31 20:58:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"623 0 LINE",
"695 225 LINE",
"684 229 LINE",
"617.333 114.333 OFFCURVE",
"532 34 OFFCURVE",
"424 22 CURVE SMOOTH",
"371 17 OFFCURVE",
"203 17 OFFCURVE",
"154 18 CURVE",
"659 712 LINE",
"656 718 LINE",
"631.333 718 OFFCURVE",
"601.333 718 OFFCURVE",
"566 718 CURVE SMOOTH",
"531.333 718 OFFCURVE",
"494.333 718 OFFCURVE",
"455 718 CURVE SMOOTH",
"415.667 718 OFFCURVE",
"376 718 OFFCURVE",
"336 718 CURVE SMOOTH",
"250.988 718 OFFCURVE",
"123.394 718.4 OFFCURVE",
"87 721 CURVE",
"14 508 LINE",
"25 504 LINE",
"52.672 549.281 OFFCURVE",
"118.228 623.857 OFFCURVE",
"152 652 CURVE SMOOTH",
"185.333 678.667 OFFCURVE",
"225.333 697.333 OFFCURVE",
"276 700 CURVE SMOOTH",
"308 702 OFFCURVE",
"490 702 OFFCURVE",
"522 702 CURVE",
"16 7 LINE",
"20 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
11 42 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
40 42 23 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 694;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
lastChange = "2020-12-31 22:43:30 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"276 -106 LINE",
"276 -82 LINE",
"97 -82 LINE",
"97 696 LINE",
"276 696 LINE",
"276 720 LINE",
"49 720 LINE",
"49 -106 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
3 6 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
1 2 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
3 2 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"362 -131 LINE",
"-8 760 LINE",
"-41 747 LINE",
"329 -143 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 311;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
lastChange = "2020-12-31 22:43:39 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"237 -106 LINE",
"237 720 LINE",
"10 720 LINE",
"10 696 LINE",
"189 696 LINE",
"189 -82 LINE",
"10 -82 LINE",
"10 -106 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 4 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 2 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
3 2 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"218 527 LINE",
"129 698 LINE",
"114 698 LINE",
"23 528 LINE",
"35 521 LINE",
"121 633 LINE",
"206 520 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 6 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 254;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = underscore;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"500 -130 LINE",
"500 -96 LINE",
"0 -96 LINE",
"0 -130 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 2 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
lastChange = "2020-12-31 21:30:33 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{4, 481}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"5 520 LINE",
"-96 696 LINE",
"-125 696 OFFCURVE",
"-134 683 OFFCURVE",
"-142 672 CURVE",
"-142 667 LINE",
"-5 514 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2020-12-31 21:33:56 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{272, 483}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"420.265 -1 OFFCURVE",
"462.158 44.005 OFFCURVE",
"465 98 CURVE",
"459 98 LINE",
"453.667 78 OFFCURVE",
"440.667 64 OFFCURVE",
"410 64 CURVE SMOOTH",
"383.333 64 OFFCURVE",
"361 76 OFFCURVE",
"361 138 CURVE SMOOTH",
"361 377 LINE SMOOTH",
"361 400 OFFCURVE",
"360 426 OFFCURVE",
"355 436 CURVE SMOOTH",
"341 462 OFFCURVE",
"307.667 483 OFFCURVE",
"273 483 CURVE SMOOTH",
"234.324 483 OFFCURVE",
"150 443 OFFCURVE",
"90 408 CURVE SMOOTH",
"63 392 OFFCURVE",
"31 375.174 OFFCURVE",
"31 343 CURVE SMOOTH",
"31 323 OFFCURVE",
"48.667 305 OFFCURVE",
"70 305 CURVE SMOOTH",
"92.667 305 OFFCURVE",
"116 322.333 OFFCURVE",
"116 341 CURVE SMOOTH",
"116 386 LINE SMOOTH",
"116 405.428 OFFCURVE",
"162.853 437 OFFCURVE",
"201 437 CURVE SMOOTH",
"246.644 437 OFFCURVE",
"279 409.312 OFFCURVE",
"279 391 CURVE SMOOTH",
"279 288 LINE",
"263.336 278.602 OFFCURVE",
"205.763 248.214 OFFCURVE",
"176.5 231 CURVE SMOOTH",
"122.289 199.111 OFFCURVE",
"40 152.246 OFFCURVE",
"40 94 CURVE SMOOTH",
"40 28.594 OFFCURVE",
"84.719 0 OFFCURVE",
"133 0 CURVE SMOOTH",
"200.233 0 OFFCURVE",
"250.435 46.831 OFFCURVE",
"277 90 CURVE",
"279 89 LINE",
"279 22.333 OFFCURVE",
"320.667 -1 OFFCURVE",
"366 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"145.333 61 OFFCURVE",
"119 94.333 OFFCURVE",
"119 129 CURVE SMOOTH",
"119 192 OFFCURVE",
"218.953 228.633 OFFCURVE",
"279 272 CURVE",
"279 118 LINE SMOOTH",
"279 106.667 OFFCURVE",
"275 97.333 OFFCURVE",
"267 90 CURVE",
"244.333 67.333 OFFCURVE",
"218.667 61 OFFCURVE",
"184 61 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
35 5 54 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
7 5 73 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
68 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
65 54 68 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
81 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
59 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
68 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 68 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 4 118 4 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
41 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 41 121 41 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 41 24 41 40 41 56 41 72 41 88 41 104 41 120 41 136 41 152 41 168 41 184 41 200 41 216 41 232 41 248 41 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 41 24 41 40 41 56 41 72 41 88 41 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
65 68 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
78 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
78 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
86 68 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 448;
}
);
note = a;
unicode = 0061;
},
{
glyphname = b;
lastChange = "2020-12-31 19:08:12 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"420 -5 OFFCURVE",
"519 101 OFFCURVE",
"519 238 CURVE SMOOTH",
"519 365 OFFCURVE",
"447 479 OFFCURVE",
"324 479 CURVE SMOOTH",
"252 479 OFFCURVE",
"175 423 OFFCURVE",
"150 366 CURVE",
"149 366 LINE",
"149 722 LINE",
"141 722 LINE",
"7 661 LINE",
"7 655 LINE",
"65 622 LINE",
"65 -1 LINE",
"72 -1 LINE",
"96 53 LINE",
"101 53 LINE",
"144 17 OFFCURVE",
"208 -5 OFFCURVE",
"284 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"216 9 OFFCURVE",
"151 95 OFFCURVE",
"148 189 CURVE SMOOTH",
"147 202 OFFCURVE",
"148 330 OFFCURVE",
"148 338 CURVE SMOOTH",
"148 364 OFFCURVE",
"200 416 OFFCURVE",
"268 416 CURVE SMOOTH",
"374 416 OFFCURVE",
"427 327 OFFCURVE",
"427 224 CURVE SMOOTH",
"427 107 OFFCURVE",
"376 9 OFFCURVE",
"287 9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
46 5 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
11 19 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 30 122 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 30 25 30 41 30 57 30 73 30 89 30 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
11 25 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
15 25 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
53 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 53 121 53 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 53 24 53 40 53 56 53 72 53 88 53 104 53 120 53 136 53 152 53 168 53 184 53 200 53 216 53 232 53 248 53 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 53 24 53 40 53 56 53 72 53 88 53 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 538;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2020-12-31 21:38:26 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{240, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"339.14 -3 OFFCURVE",
"415.505 58.016 OFFCURVE",
"441 143 CURVE",
"433 147 LINE",
"401 93.667 OFFCURVE",
"357.667 66 OFFCURVE",
"275 66 CURVE SMOOTH",
"168.819 66 OFFCURVE",
"105 149.674 OFFCURVE",
"105 268 CURVE SMOOTH",
"105 371.587 OFFCURVE",
"163.46 467 OFFCURVE",
"248 467 CURVE SMOOTH",
"304 467 OFFCURVE",
"328 430 OFFCURVE",
"329 381 CURVE SMOOTH",
"329 368 OFFCURVE",
"324 357 OFFCURVE",
"324 347 CURVE SMOOTH",
"324 326 OFFCURVE",
"349.333 312 OFFCURVE",
"372 312 CURVE SMOOTH",
"400 312 OFFCURVE",
"424 336 OFFCURVE",
"424 364 CURVE SMOOTH",
"424 440.445 OFFCURVE",
"332.942 483 OFFCURVE",
"246 483 CURVE SMOOTH",
"116.805 483 OFFCURVE",
"20 369.68 OFFCURVE",
"20 242 CURVE SMOOTH",
"20 104.135 OFFCURVE",
"111.341 -3 OFFCURVE",
"241 -3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 9 22 9 38 9 54 9 70 9 86 9 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 9 117 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
17 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 17 122 17 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 17 25 17 41 17 57 17 73 17 89 17 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 4 118 4 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 432;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
lastChange = "2020-12-31 19:48:00 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"385 -3 LINE",
"533 39 LINE",
"533 46 LINE",
"520 51 OFFCURVE",
"474 71 OFFCURVE",
"462 77 CURVE",
"462 726 LINE",
"454 726 LINE",
"295 682 LINE",
"295 676 LINE",
"379 645 LINE",
"379 625 OFFCURVE",
"379 486 OFFCURVE",
"379 466 CURVE",
"349.667 475.333 OFFCURVE",
"314 483 OFFCURVE",
"274 483 CURVE SMOOTH",
"124.75 483 OFFCURVE",
"19 377.572 OFFCURVE",
"19 236 CURVE SMOOTH",
"19 89.911 OFFCURVE",
"106 -1 OFFCURVE",
"214 -1 CURVE SMOOTH",
"319 -1 OFFCURVE",
"361 74 OFFCURVE",
"378 97 CURVE",
"379 97 LINE",
"379 -3 LINE"
);
},
{
closed = 1;
nodes = (
"159 36 OFFCURVE",
"112 139.422 OFFCURVE",
"112 249 CURVE SMOOTH",
"112 359.746 OFFCURVE",
"156.622 464 OFFCURVE",
"259 464 CURVE SMOOTH",
"297.667 464 OFFCURVE",
"348.667 427.667 OFFCURVE",
"378 373 CURVE",
"378 135 LINE",
"355 99 OFFCURVE",
"301 36 OFFCURVE",
"263 36 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
5 5 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
33 9 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 44 22 44 38 44 54 44 70 44 86 44 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 44 117 44 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
8 34 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
16 34 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
33 34 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
39 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 39 23 39 39 39 55 39 71 39 87 39 103 39 119 39 135 39 151 39 167 39 183 39 199 39 215 39 231 39 247 39 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 39 23 39 39 39 55 39 71 39 87 39 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 39 118 39 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 546;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2020-12-31 21:35:04 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{232, 483}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"348.238 -1 OFFCURVE",
"419.868 79.772 OFFCURVE",
"433 152 CURVE",
"425 154 LINE",
"409 104.667 OFFCURVE",
"354.667 66 OFFCURVE",
"288 66 CURVE SMOOTH",
"168.591 66 OFFCURVE",
"96 161 OFFCURVE",
"102 278 CURVE SMOOTH",
"104 318 LINE",
"425 318 LINE",
"417.12 428.321 OFFCURVE",
"337.569 483 OFFCURVE",
"231 483 CURVE SMOOTH",
"105.938 483 OFFCURVE",
"19 367.847 OFFCURVE",
"19 251 CURVE SMOOTH",
"19 108.701 OFFCURVE",
"107.763 -1 OFFCURVE",
"245 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"113.064 374.383 OFFCURVE",
"162.917 466 OFFCURVE",
"232 466 CURVE SMOOTH",
"289.333 466 OFFCURVE",
"339 425 OFFCURVE",
"339 376 CURVE SMOOTH",
"339 357 OFFCURVE",
"331 348 OFFCURVE",
"319 340 CURVE SMOOTH",
"307 332 OFFCURVE",
"281 332 OFFCURVE",
"261 332 CURVE SMOOTH",
"147 332 LINE SMOOTH",
"135 332 OFFCURVE",
"121 332 OFFCURVE",
"106 332 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
13 7 33 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 9 22 9 38 9 54 9 70 9 86 9 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 9 117 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 4 118 4 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
12 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 435;
}
);
note = e;
unicode = 0065;
},
{
glyphname = f;
lastChange = "2020-12-31 19:50:27 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"254 0 LINE",
"254 10 LINE",
"218.162 14.778 OFFCURVE",
"168 13 OFFCURVE",
"168 39 CURVE SMOOTH",
"168 429 LINE",
"274 429 LINE",
"287 473 LINE",
"169 473 LINE",
"169 521 OFFCURVE",
"169.333 552.667 OFFCURVE",
"172 606 CURVE SMOOTH",
"176.454 675.042 OFFCURVE",
"211.788 699 OFFCURVE",
"242 699 CURVE SMOOTH",
"290 699 OFFCURVE",
"286.865 627 OFFCURVE",
"337 627 CURVE SMOOTH",
"362.333 627 OFFCURVE",
"379 651 OFFCURVE",
"379 675 CURVE SMOOTH",
"379 710.644 OFFCURVE",
"335.879 726 OFFCURVE",
"297 726 CURVE SMOOTH",
"216.229 726 OFFCURVE",
"131.763 680.231 OFFCURVE",
"102 618 CURVE SMOOTH",
"87.333 588.667 OFFCURVE",
"86 529 OFFCURVE",
"86 473 CURVE",
"24 473 LINE",
"13 429 LINE",
"85 429 LINE",
"85 42 LINE SMOOTH",
"85 21.594 OFFCURVE",
"29.004 12.637 OFFCURVE",
"0 10 CURVE",
"0 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
31 5 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
15 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
47 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 47 121 47 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 47 24 47 40 47 56 47 72 47 88 47 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2020-12-31 19:51:26 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"386.788 -250 OFFCURVE",
"505 -166.09 OFFCURVE",
"505 -55 CURVE SMOOTH",
"505 24.257 OFFCURVE",
"442.807 84 OFFCURVE",
"353 84 CURVE SMOOTH",
"193 84 LINE SMOOTH",
"147.283 84 OFFCURVE",
"90 94.195 OFFCURVE",
"90 137 CURVE SMOOTH",
"90 163.667 OFFCURVE",
"117.333 182.333 OFFCURVE",
"160 185 CURVE",
"173.333 185 OFFCURVE",
"185 184 OFFCURVE",
"194.5 183 CURVE SMOOTH",
"204 182 OFFCURVE",
"213.667 181 OFFCURVE",
"223 181 CURVE SMOOTH",
"352.333 181 OFFCURVE",
"430 233.667 OFFCURVE",
"430 339 CURVE SMOOTH",
"430 381.667 OFFCURVE",
"414 403.333 OFFCURVE",
"394 434 CURVE",
"398 438 LINE",
"424.66 422.448 OFFCURVE",
"482.352 390 OFFCURVE",
"499 390 CURVE SMOOTH",
"519 390 OFFCURVE",
"535 408 OFFCURVE",
"535 428 CURVE SMOOTH",
"535 450.667 OFFCURVE",
"518.667 469 OFFCURVE",
"496 469 CURVE SMOOTH",
"467.252 469 OFFCURVE",
"448.829 446 OFFCURVE",
"419 446 CURVE SMOOTH",
"403 446 OFFCURVE",
"394 446.667 OFFCURVE",
"378 452 CURVE",
"335.333 474.667 OFFCURVE",
"299.667 483 OFFCURVE",
"249 483 CURVE SMOOTH",
"141.56 483 OFFCURVE",
"55 418.49 OFFCURVE",
"55 330 CURVE SMOOTH",
"55 262 OFFCURVE",
"89.333 218.667 OFFCURVE",
"148 196 CURVE",
"148 193 LINE",
"84.758 185.411 OFFCURVE",
"30 141.498 OFFCURVE",
"30 90 CURVE SMOOTH",
"30 39.333 OFFCURVE",
"68 8 OFFCURVE",
"136 0 CURVE",
"136 -2 LINE",
"83.034 -34.789 OFFCURVE",
"14 -74.099 OFFCURVE",
"14 -128 CURVE SMOOTH",
"14 -204 OFFCURVE",
"98.667 -250 OFFCURVE",
"244 -250 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"188.678 -227 OFFCURVE",
"89 -179.198 OFFCURVE",
"89 -98 CURVE SMOOTH",
"89 -56.667 OFFCURVE",
"109.333 -19 OFFCURVE",
"172 -3 CURVE",
"190.667 -0.333 OFFCURVE",
"223 3 OFFCURVE",
"251 3 CURVE SMOOTH",
"328.333 3 OFFCURVE",
"367.667 -2.333 OFFCURVE",
"397 -17 CURVE SMOOTH",
"419.667 -27.667 OFFCURVE",
"438 -57.333 OFFCURVE",
"438 -96 CURVE SMOOTH",
"438 -153.333 OFFCURVE",
"397 -197 OFFCURVE",
"350 -215 CURVE SMOOTH",
"328 -224 OFFCURVE",
"300 -227 OFFCURVE",
"260 -227 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"181.333 196 OFFCURVE",
"135 249 OFFCURVE",
"135 329 CURVE SMOOTH",
"135 400.589 OFFCURVE",
"173.732 467 OFFCURVE",
"241 467 CURVE SMOOTH",
"311.486 467 OFFCURVE",
"350 408.89 OFFCURVE",
"350 339 CURVE SMOOTH",
"350 264.99 OFFCURVE",
"311.06 196 OFFCURVE",
"240 196 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
106 5 37 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
106 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
65 5 77 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
65 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
45 5 95 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 106 22 106 38 106 54 106 70 106 86 106 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 106 117 106 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
19 37 106 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
23 37 45 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
106 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
32 37 45 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
106 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
106 77 122 77 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 77 25 77 41 77 57 77 73 77 89 77 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
69 77 65 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
85 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 95 122 95 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 95 25 95 41 95 57 95 73 95 89 95 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
119 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
51 4 112 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
51 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
23 40 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
112 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
69 40 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
101 1 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 101 23 101 39 101 55 101 71 101 87 101 103 101 119 101 135 101 151 101 167 101 183 101 199 101 215 101 231 101 247 101 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 101 23 101 39 101 55 101 71 101 87 101 103 101 119 101 135 101 151 101 167 101 183 101 199 101 215 101 231 101 247 101 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 101 23 101 39 101 55 101 71 101 87 101 103 101 119 101 135 101 151 101 167 101 183 101 199 101 215 101 231 101 247 101 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 525;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
lastChange = "2021-01-01 23:52:13 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"224 0 LINE",
"224 10 LINE",
"197 16 OFFCURVE",
"168 17 OFFCURVE",
"168 48 CURVE SMOOTH",
"168 352 LINE",
"241 463 OFFCURVE",
"371 438 OFFCURVE",
"371 319 CURVE SMOOTH",
"371 38 LINE SMOOTH",
"371 19 OFFCURVE",
"338 15 OFFCURVE",
"308 9 CURVE",
"308 0 LINE",
"514 0 LINE",
"514 9 LINE",
"483 16 OFFCURVE",
"455 20 OFFCURVE",
"455 37 CURVE SMOOTH",
"455 319 LINE SMOOTH",
"455 564 OFFCURVE",
"231 477 OFFCURVE",
"166 369 CURVE",
"166 726 LINE",
"161 726 LINE",
"27 665 LINE",
"27 659 LINE",
"85 614 LINE",
"85 46 LINE SMOOTH",
"85 20 OFFCURVE",
"51 17 OFFCURVE",
"25 10 CURVE",
"25 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
18 5 28 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
7 5 52 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
18 0 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
22 0 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
47 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 47 121 47 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 47 24 47 40 47 56 47 72 47 88 47 104 47 120 47 136 47 152 47 168 47 184 47 200 47 216 47 232 47 248 47 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 47 24 47 40 47 56 47 72 47 88 47 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 524;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2020-12-31 19:51:40 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"233 0 LINE",
"233 10 LINE",
"206.178 15.364 OFFCURVE",
"169 9 OFFCURVE",
"169 36 CURVE SMOOTH",
"169 483 LINE",
"163 483 LINE",
"28 439 LINE",
"28 433 LINE",
"46.667 426.333 OFFCURVE",
"64 418 OFFCURVE",
"76 410 CURVE SMOOTH",
"85.333 403.333 OFFCURVE",
"86 395.667 OFFCURVE",
"86 385 CURVE SMOOTH",
"86 42 LINE SMOOTH",
"86 16.974 OFFCURVE",
"47.53 12.461 OFFCURVE",
"18 10 CURVE",
"18 0 LINE"
);
},
{
closed = 1;
nodes = (
"153.667 587 OFFCURVE",
"177 610.333 OFFCURVE",
"177 641 CURVE SMOOTH",
"177 671.667 OFFCURVE",
"153.667 694 OFFCURVE",
"123 694 CURVE SMOOTH",
"92.333 694 OFFCURVE",
"69 671.667 OFFCURVE",
"69 641 CURVE SMOOTH",
"69 611.667 OFFCURVE",
"93.667 587 OFFCURVE",
"123 587 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 13 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 0 117 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
28 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
19 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
20 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 254;
}
);
note = i;
unicode = 0069;
},
{
glyphname = j;
lastChange = "2020-12-31 19:52:50 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"90 -241 OFFCURVE",
"172 -134.337 OFFCURVE",
"172 -61 CURVE SMOOTH",
"172 -11 OFFCURVE",
"172 474 OFFCURVE",
"172 483 CURVE",
"165 483 LINE",
"25 429 LINE",
"25 422 LINE",
"33 417.333 OFFCURVE",
"42.5 412 OFFCURVE",
"53.5 406 CURVE SMOOTH",
"69 397 OFFCURVE",
"88 389 OFFCURVE",
"88 369 CURVE SMOOTH",
"88 44 LINE SMOOTH",
"88 18.667 OFFCURVE",
"87.667 -36 OFFCURVE",
"85 -88 CURVE SMOOTH",
"82.149 -142.171 OFFCURVE",
"83 -214 OFFCURVE",
"31 -214 CURVE SMOOTH",
"-16 -214 OFFCURVE",
"3.274 -131 OFFCURVE",
"-52 -131 CURVE SMOOTH",
"-85.333 -131 OFFCURVE",
"-102 -149.667 OFFCURVE",
"-102 -179 CURVE SMOOTH",
"-102 -218.268 OFFCURVE",
"-58.328 -241 OFFCURVE",
"-18 -241 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"155.667 585 OFFCURVE",
"179 608.333 OFFCURVE",
"179 639 CURVE SMOOTH",
"179 669.667 OFFCURVE",
"155.667 692 OFFCURVE",
"125 692 CURVE SMOOTH",
"94.333 692 OFFCURVE",
"71 669.667 OFFCURVE",
"71 639 CURVE SMOOTH",
"71 609.667 OFFCURVE",
"95.667 585 OFFCURVE",
"125 585 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 5 values pushed */
106 6 122 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 6 25 6 41 6 57 6 73 6 89 6 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
33 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
46 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 46 23 46 39 46 55 46 71 46 87 46 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 46 118 46 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 246;
}
);
note = j;
unicode = 006A;
},
{
glyphname = k;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"224 0 LINE",
"224 10 LINE",
"197.111 15.378 OFFCURVE",
"168 13.483 OFFCURVE",
"168 38 CURVE SMOOTH",
"168 234 LINE",
"173.333 236.667 OFFCURVE",
"177.333 237 OFFCURVE",
"184 237 CURVE SMOOTH",
"192.667 237 OFFCURVE",
"202.333 229.667 OFFCURVE",
"213 215 CURVE SMOOTH",
"229.918 192.443 OFFCURVE",
"333 47.815 OFFCURVE",
"333 31 CURVE SMOOTH",
"333 12.333 OFFCURVE",
"312.667 11.333 OFFCURVE",
"286 10 CURVE",
"286 0 LINE",
"528 0 LINE",
"528 10 LINE",
"502.667 10 OFFCURVE",
"477.667 13.333 OFFCURVE",
"467 16 CURVE",
"451 28 OFFCURVE",
"431.333 49.333 OFFCURVE",
"408 80 CURVE SMOOTH",
"369.333 130.667 OFFCURVE",
"315.667 212.667 OFFCURVE",
"257 302 CURVE",
"293 335.333 OFFCURVE",
"335.333 375 OFFCURVE",
"378 411 CURVE SMOOTH",
"421.989 448.705 OFFCURVE",
"497.829 463 OFFCURVE",
"526 463 CURVE",
"526 473 LINE",
"281 473 LINE",
"281 463 LINE",
"309.669 463 OFFCURVE",
"361 454.41 OFFCURVE",
"361 437 CURVE SMOOTH",
"361 424.605 OFFCURVE",
"324.656 388.627 OFFCURVE",
"294 358.5 CURVE SMOOTH",
"255.333 320.5 OFFCURVE",
"206.667 277 OFFCURVE",
"168 245 CURVE",
"168 723 LINE",
"160 723 LINE",
"27 662 LINE",
"27 656 LINE",
"66.542 634.708 OFFCURVE",
"85 632.892 OFFCURVE",
"85 607 CURVE SMOOTH",
"85 42 LINE SMOOTH",
"85 16.667 OFFCURVE",
"55.667 12.667 OFFCURVE",
"25 10 CURVE",
"25 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
31 5 39 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
51 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
30 0 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
34 0 31 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 488;
}
);
note = k;
unicode = 006B;
},
{
glyphname = l;
lastChange = "2020-12-31 19:55:15 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"240 0 LINE",
"240 11 LINE",
"200.398 15.169 OFFCURVE",
"166 8.762 OFFCURVE",
"166 38 CURVE SMOOTH",
"166 723 LINE",
"159 723 LINE",
"16 676 LINE",
"16 670 LINE",
"24 666.667 OFFCURVE",
"34 661.5 OFFCURVE",
"46 654.5 CURVE SMOOTH",
"64 644 OFFCURVE",
"83 633 OFFCURVE",
"83 618 CURVE SMOOTH",
"83 43 LINE SMOOTH",
"83 32.333 OFFCURVE",
"78 24.833 OFFCURVE",
"68 20.5 CURVE SMOOTH",
"58 16.167 OFFCURVE",
"37.667 13 OFFCURVE",
"7 11 CURVE",
"7 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 5 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
10 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 246;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"223 0 LINE",
"223 10 LINE",
"195.43 15.514 OFFCURVE",
"173.254 9.728 OFFCURVE",
"168 36 CURVE",
"168 364 LINE",
"202.667 401.333 OFFCURVE",
"225 420 OFFCURVE",
"269 420 CURVE SMOOTH",
"338.333 420 OFFCURVE",
"362 372.667 OFFCURVE",
"362 294 CURVE SMOOTH",
"362 38 LINE SMOOTH",
"362 16.667 OFFCURVE",
"339 13.667 OFFCURVE",
"303 11 CURVE",
"303 0 LINE",
"500 0 LINE",
"500 9 LINE",
"475.016 11.776 OFFCURVE",
"446 15.601 OFFCURVE",
"446 35 CURVE SMOOTH",
"446 358 LINE",
"478 394 OFFCURVE",
"503 420 OFFCURVE",
"547 420 CURVE SMOOTH",
"616.333 420 OFFCURVE",
"640 370.333 OFFCURVE",
"640 293 CURVE SMOOTH",
"640 38 LINE SMOOTH",
"640 16.667 OFFCURVE",
"621 13.667 OFFCURVE",
"585 11 CURVE",
"585 0 LINE",
"782 0 LINE",
"782 9 LINE",
"758.54 11.607 OFFCURVE",
"724 15.983 OFFCURVE",
"724 35 CURVE SMOOTH",
"724 333 LINE SMOOTH",
"724 421 OFFCURVE",
"684.333 483 OFFCURVE",
"607 483 CURVE SMOOTH",
"537.086 483 OFFCURVE",
"472.756 420.513 OFFCURVE",
"446 367 CURVE",
"443 367 LINE",
"433.667 437.667 OFFCURVE",
"393 483 OFFCURVE",
"329 483 CURVE SMOOTH",
"259.974 483 OFFCURVE",
"197.148 424.667 OFFCURVE",
"169 374 CURVE",
"167 375 LINE",
"167 483 LINE",
"161 483 LINE",
"30 436 LINE",
"30 428 LINE",
"46 421.333 OFFCURVE",
"63 411.667 OFFCURVE",
"75 405 CURVE",
"84.333 398.333 OFFCURVE",
"85 394.667 OFFCURVE",
"85 384 CURVE SMOOTH",
"85 42 LINE SMOOTH",
"85 20.667 OFFCURVE",
"59.667 12.667 OFFCURVE",
"29 10 CURVE",
"29 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
48 5 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
67 5 54 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
7 5 73 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
27 35 48 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
59 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
16 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
25 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
51 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 51 121 51 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 51 24 51 40 51 56 51 72 51 88 51 104 51 120 51 136 51 152 51 168 51 184 51 200 51 216 51 232 51 248 51 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 51 24 51 40 51 56 51 72 51 88 51 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 794;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2020-12-31 21:47:09 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{321, 480}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"221 0 LINE",
"221 10 LINE",
"194.954 15.209 OFFCURVE",
"172.192 10.04 OFFCURVE",
"167 36 CURVE",
"167 364 LINE",
"203 400 OFFCURVE",
"227 419 OFFCURVE",
"271 419 CURVE SMOOTH",
"340.333 419 OFFCURVE",
"367 367.333 OFFCURVE",
"367 290 CURVE SMOOTH",
"367 38 LINE SMOOTH",
"367 16.667 OFFCURVE",
"344 13.667 OFFCURVE",
"308 11 CURVE",
"308 0 LINE",
"512 0 LINE",
"512 9 LINE",
"488.474 11.614 OFFCURVE",
"451 15.933 OFFCURVE",
"451 35 CURVE SMOOTH",
"451 329 LINE SMOOTH",
"451 419.667 OFFCURVE",
"408.333 483 OFFCURVE",
"331 483 CURVE SMOOTH",
"260.317 483 OFFCURVE",
"200.491 424.213 OFFCURVE",
"168 374 CURVE",
"166 375 LINE",
"166 483 LINE",
"160 483 LINE",
"29 436 LINE",
"29 430 LINE",
"45 423.333 OFFCURVE",
"62 413.667 OFFCURVE",
"74 407 CURVE",
"83.333 400.333 OFFCURVE",
"84 396.667 OFFCURVE",
"84 386 CURVE SMOOTH",
"84 42 LINE SMOOTH",
"84 20.667 OFFCURVE",
"58.667 12.667 OFFCURVE",
"28 10 CURVE",
"28 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
39 5 26 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
7 5 45 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
16 26 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
18 26 39 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
16 0 10 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
42 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 42 121 42 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 42 24 42 40 42 56 42 72 42 88 42 104 42 120 42 136 42 152 42 168 42 184 42 200 42 216 42 232 42 248 42 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 42 24 42 40 42 56 42 72 42 88 42 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
20 10 42 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 521;
}
);
note = n;
unicode = 006E;
},
{
glyphname = o;
lastChange = "2020-12-31 21:36:54 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{292, 480}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"416 -3 OFFCURVE",
"523 109 OFFCURVE",
"523 245 CURVE SMOOTH",
"523 393 OFFCURVE",
"408 483 OFFCURVE",
"291 483 CURVE SMOOTH",
"152 483 OFFCURVE",
"50 372 OFFCURVE",
"50 245 CURVE SMOOTH",
"50 85 OFFCURVE",
"169 -3 OFFCURVE",
"289 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"184 11 OFFCURVE",
"143 118 OFFCURVE",
"143 239 CURVE SMOOTH",
"143 347 OFFCURVE",
"194 467 OFFCURVE",
"284 467 CURVE SMOOTH",
"389 467 OFFCURVE",
"430 346 OFFCURVE",
"430 246 CURVE SMOOTH",
"430 146 OFFCURVE",
"390 11 OFFCURVE",
"290 11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 20 122 20 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 20 25 20 41 20 57 20 73 20 89 20 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 30 22 30 38 30 54 30 70 30 86 30 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 30 117 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 573;
}
);
note = o;
unicode = 006F;
},
{
glyphname = p;
lastChange = "2020-12-31 19:57:23 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"246 -230 LINE",
"246 -219 LINE",
"215.916 -215.992 OFFCURVE",
"164 -216 OFFCURVE",
"164 -193 CURVE SMOOTH",
"164 -149 OFFCURVE",
"164 -33 OFFCURVE",
"164 11 CURVE",
"187.333 5.667 OFFCURVE",
"210 4 OFFCURVE",
"234 5 CURVE SMOOTH",
"403 9 OFFCURVE",
"514 110.734 OFFCURVE",
"514 265 CURVE SMOOTH",
"514 377.682 OFFCURVE",
"451.838 483 OFFCURVE",
"331 483 CURVE SMOOTH",
"257.334 483 OFFCURVE",
"203 423 OFFCURVE",
"164 371 CURVE",
"162 371 LINE",
"162 483 LINE",
"156 483 LINE",
"9 425 LINE",
"9 419 LINE",
"25 412.333 OFFCURVE",
"48 401 OFFCURVE",
"61 394 CURVE SMOOTH",
"70 389 OFFCURVE",
"80 387 OFFCURVE",
"80 369 CURVE SMOOTH",
"80 -185 LINE SMOOTH",
"80 -206.311 OFFCURVE",
"28.17 -216.183 OFFCURVE",
"0 -219 CURVE",
"0 -230 LINE"
);
},
{
closed = 1;
nodes = (
"190.841 24 OFFCURVE",
"168 83 OFFCURVE",
"161 150 CURVE SMOOTH",
"161 177 OFFCURVE",
"161 314 OFFCURVE",
"161 342 CURVE SMOOTH",
"161 366 OFFCURVE",
"214.33 418 OFFCURVE",
"274 418 CURVE SMOOTH",
"375.045 418 OFFCURVE",
"424 337.781 OFFCURVE",
"424 236 CURVE SMOOTH",
"424 122.565 OFFCURVE",
"357.804 24 OFFCURVE",
"274 24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
77 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
11 5 21 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
49 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 49 122 49 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 49 25 49 41 49 57 49 73 49 89 49 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
11 28 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
71 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 71 121 71 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 71 24 71 40 71 56 71 72 71 88 71 104 71 120 71 136 71 152 71 168 71 184 71 200 71 216 71 232 71 248 71 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 71 24 71 40 71 56 71 72 71 88 71 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
15 5 71 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 534;
}
);
note = p;
unicode = 0070;
},
{
glyphname = q;
lastChange = "2020-12-31 19:58:39 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"543 -230 LINE",
"543 -219 LINE",
"513.739 -216.562 OFFCURVE",
"471 -206.262 OFFCURVE",
"471 -185 CURVE SMOOTH",
"471 483 LINE",
"464 483 LINE",
"433 428 LINE",
"430 428 LINE",
"395.333 458.667 OFFCURVE",
"332.333 483 OFFCURVE",
"255 483 CURVE SMOOTH",
"118.447 483 OFFCURVE",
"19 370.632 OFFCURVE",
"19 238 CURVE SMOOTH",
"19 111.039 OFFCURVE",
"95.717 0 OFFCURVE",
"215 0 CURVE SMOOTH",
"296.633 0 OFFCURVE",
"363.946 50.864 OFFCURVE",
"388 111 CURVE",
"390 110 LINE",
"390 93 OFFCURVE",
"390 -171 OFFCURVE",
"390 -188 CURVE SMOOTH",
"390 -210 OFFCURVE",
"330.838 -216.216 OFFCURVE",
"303 -219 CURVE",
"303 -230 LINE"
);
},
{
closed = 1;
nodes = (
"165.353 60 OFFCURVE",
"110 149.717 OFFCURVE",
"110 252 CURVE SMOOTH",
"110 369.643 OFFCURVE",
"164.37 467 OFFCURVE",
"252 467 CURVE SMOOTH",
"348.827 467 OFFCURVE",
"389 381 OFFCURVE",
"389 287 CURVE SMOOTH",
"389 174 LINE SMOOTH",
"389 160 OFFCURVE",
"388.667 148 OFFCURVE",
"388 138 CURVE",
"388 111.422 OFFCURVE",
"336.508 60 OFFCURVE",
"270 60 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
6 5 33 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
29 33 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
55 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 55 22 55 38 55 54 55 70 55 86 55 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 55 117 55 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
29 0 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
50 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 50 23 50 39 50 55 50 71 50 87 50 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 50 118 50 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 548;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2020-12-31 19:59:50 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"253 0 LINE",
"253 10 LINE",
"222 15 OFFCURVE",
"168 20 OFFCURVE",
"168 48 CURVE SMOOTH",
"168 324 LINE",
"183.65 363.125 OFFCURVE",
"211.011 415 OFFCURVE",
"245 415 CURVE SMOOTH",
"283.184 415 OFFCURVE",
"280.435 379 OFFCURVE",
"324 379 CURVE SMOOTH",
"346.667 379 OFFCURVE",
"367 400.667 OFFCURVE",
"367 430 CURVE SMOOTH",
"367 460.667 OFFCURVE",
"340.333 483 OFFCURVE",
"307 483 CURVE SMOOTH",
"229.875 483 OFFCURVE",
"186.623 391.096 OFFCURVE",
"167 344 CURVE",
"165 344 LINE",
"167 483 LINE",
"161 483 LINE",
"30 432 LINE",
"30 426 LINE",
"38 422.667 OFFCURVE",
"46 420 OFFCURVE",
"54 415 CURVE SMOOTH",
"62 410 OFFCURVE",
"85 399 OFFCURVE",
"85 380 CURVE SMOOTH",
"85 42 LINE SMOOTH",
"85 20.667 OFFCURVE",
"59.667 12.667 OFFCURVE",
"29 10 CURVE",
"29 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
32 5 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
11 19 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
9 24 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 37 121 37 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 37 24 37 40 37 56 37 72 37 88 37 104 37 120 37 136 37 152 37 168 37 184 37 200 37 216 37 232 37 248 37 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 37 24 37 40 37 56 37 72 37 88 37 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
13 3 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
42 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 42 121 42 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 42 24 42 40 42 56 42 72 42 88 42 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 357;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2020-12-31 20:00:16 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"283.379 -2 OFFCURVE",
"369 42.436 OFFCURVE",
"369 146 CURVE SMOOTH",
"369 214 OFFCURVE",
"321 263.333 OFFCURVE",
"261 278 CURVE SMOOTH",
"241 283 OFFCURVE",
"188 295 OFFCURVE",
"168 299 CURVE SMOOTH",
"125.333 309.667 OFFCURVE",
"94 326.667 OFFCURVE",
"94 376 CURVE SMOOTH",
"94 434.131 OFFCURVE",
"136.535 469 OFFCURVE",
"185 469 CURVE SMOOTH",
"261.685 469 OFFCURVE",
"294.841 410.627 OFFCURVE",
"332 331 CURVE",
"340 333 LINE",
"328 457 LINE",
"289.333 471.667 OFFCURVE",
"249 483 OFFCURVE",
"193 483 CURVE SMOOTH",
"106.749 483 OFFCURVE",
"32 429.776 OFFCURVE",
"32 347 CURVE SMOOTH",
"32 287 OFFCURVE",
"66.333 242.333 OFFCURVE",
"117 225 CURVE SMOOTH",
"143.667 215.667 OFFCURVE",
"178 207.667 OFFCURVE",
"214 201 CURVE SMOOTH",
"259.333 191.667 OFFCURVE",
"287 163.333 OFFCURVE",
"287 122 CURVE SMOOTH",
"287 46 OFFCURVE",
"246 10 OFFCURVE",
"182 10 CURVE SMOOTH",
"98.992 10 OFFCURVE",
"58.703 89.892 OFFCURVE",
"35 161 CURVE",
"27 161 LINE",
"27 29 LINE",
"71 9 OFFCURVE",
"123.333 -2 OFFCURVE",
"182 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
9 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 9 22 9 38 9 54 9 70 9 86 9 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 9 117 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
38 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 38 122 38 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 38 25 38 41 38 57 38 73 38 89 38 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
51 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = s;
unicode = 0073;
},
{
glyphname = t;
lastChange = "2020-12-31 20:00:37 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"272.212 -2 OFFCURVE",
"313.602 37.004 OFFCURVE",
"334 88 CURVE",
"328 91 LINE",
"309.333 64.333 OFFCURVE",
"285.667 52 OFFCURVE",
"247 52 CURVE SMOOTH",
"200.333 52 OFFCURVE",
"168 81 OFFCURVE",
"168 149 CURVE SMOOTH",
"168 412 LINE",
"320 412 LINE",
"351 473 LINE",
"166 473 LINE",
"166 560 LINE",
"158 560 LINE",
"13 423 LINE",
"13 412 LINE",
"84 412 LINE",
"84 328 OFFCURVE",
"84 167 OFFCURVE",
"84 83 CURVE SMOOTH",
"84 36.792 OFFCURVE",
"140.102 -2 OFFCURVE",
"193 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
26 5 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
5 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
23 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 23 23 23 39 23 55 23 71 23 87 23 103 23 119 23 135 23 151 23 167 23 183 23 199 23 215 23 231 23 247 23 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 23 23 23 39 23 55 23 71 23 87 23 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 23 118 23 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 324;
}
);
note = t;
unicode = 0074;
},
{
glyphname = u;
lastChange = "2020-12-31 21:37:48 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{223, 478}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"269.117 -3 OFFCURVE",
"321.276 47.336 OFFCURVE",
"356 101 CURVE",
"357 100 LINE",
"357 -1 LINE",
"364 -1 LINE",
"506 25 LINE",
"506 31 LINE",
"490 37.667 OFFCURVE",
"466 48 OFFCURVE",
"454 55 CURVE SMOOTH",
"444 61 OFFCURVE",
"440 67.333 OFFCURVE",
"440 78 CURVE SMOOTH",
"440 473 LINE",
"272 473 LINE",
"272 462 LINE",
"301.333 459.333 OFFCURVE",
"333 459 OFFCURVE",
"347 449 CURVE SMOOTH",
"358 441 OFFCURVE",
"357 413.333 OFFCURVE",
"357 400 CURVE SMOOTH",
"357 115 LINE",
"332.303 82.07 OFFCURVE",
"299.508 53 OFFCURVE",
"250 53 CURVE SMOOTH",
"176.667 53 OFFCURVE",
"155 94 OFFCURVE",
"155 182 CURVE SMOOTH",
"155 473 LINE",
"0 473 LINE",
"0 462 LINE",
"29 459 OFFCURVE",
"47 458 OFFCURVE",
"57 450 CURVE SMOOTH",
"67 442 OFFCURVE",
"71 428 OFFCURVE",
"71 401 CURVE SMOOTH",
"71 146 LINE",
"71 48.667 OFFCURVE",
"110.667 -3 OFFCURVE",
"196 -3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
26 5 37 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
8 5 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
49 33 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 103 22 119 22 135 22 151 22 167 22 183 22 199 22 215 22 231 22 247 22 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 22 23 22 39 22 55 22 71 22 87 22 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 22 118 22 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
1 43 22 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
49 43 8 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 523;
}
);
note = u;
unicode = 0075;
},
{
glyphname = v;
lastChange = "2020-12-31 20:03:16 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"216.667 -4 OFFCURVE",
"220 -2 OFFCURVE",
"222 2 CURVE SMOOTH",
"245 53 OFFCURVE",
"309 209 OFFCURVE",
"330 261 CURVE SMOOTH",
"352.667 317 OFFCURVE",
"374 369.667 OFFCURVE",
"390 407 CURVE SMOOTH",
"409.625 451.156 OFFCURVE",
"457.965 462 OFFCURVE",
"493 462 CURVE",
"493 473 LINE",
"299 473 LINE",
"299 463 LINE",
"305 462.333 OFFCURVE",
"312 463 OFFCURVE",
"320 462 CURVE SMOOTH",
"344 460 OFFCURVE",
"369 453.487 OFFCURVE",
"369 427 CURVE SMOOTH",
"369 409.254 OFFCURVE",
"345.508 348.104 OFFCURVE",
"326 295 CURVE SMOOTH",
"302 229.667 OFFCURVE",
"273 156.333 OFFCURVE",
"253 107 CURVE",
"238.131 146.651 OFFCURVE",
"193.151 257.375 OFFCURVE",
"178 297 CURVE SMOOTH",
"163.112 335.938 OFFCURVE",
"131 415.681 OFFCURVE",
"131 430 CURVE SMOOTH",
"131 456.189 OFFCURVE",
"178.569 458.73 OFFCURVE",
"208 462 CURVE",
"208 473 LINE",
"-33 473 LINE",
"-33 462 LINE",
"-11 460.667 OFFCURVE",
"4.167 457.5 OFFCURVE",
"12.5 452.5 CURVE SMOOTH",
"20.833 447.5 OFFCURVE",
"27 443 OFFCURVE",
"31 439 CURVE SMOOTH",
"44 426 OFFCURVE",
"65.818 358.817 OFFCURVE",
"74 337 CURVE SMOOTH",
"102 263.667 OFFCURVE",
"186.663 44.863 OFFCURVE",
"203 3 CURVE",
"204.333 0.333 OFFCURVE",
"206.667 -4 OFFCURVE",
"212 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
14 45 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 443;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2020-12-31 20:05:27 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"227 -2 OFFCURVE",
"231 0 OFFCURVE",
"233 4 CURVE SMOOTH",
"240 18 OFFCURVE",
"245 33 OFFCURVE",
"250 45 CURVE SMOOTH",
"366 339 LINE",
"386.22 280.363 OFFCURVE",
"461.667 57 OFFCURVE",
"479 5 CURVE SMOOTH",
"480.333 1 OFFCURVE",
"481.333 -2 OFFCURVE",
"488 -2 CURVE SMOOTH",
"491.333 -2 OFFCURVE",
"495 0 OFFCURVE",
"497 4 CURVE SMOOTH",
"513 33 OFFCURVE",
"596 229 OFFCURVE",
"609.5 260 CURVE SMOOTH",
"628.877 305.398 OFFCURVE",
"658.058 371.468 OFFCURVE",
"672 404 CURVE SMOOTH",
"694.292 456.015 OFFCURVE",
"722.696 458.475 OFFCURVE",
"765 462 CURVE",
"765 473 LINE",
"582 473 LINE",
"582 462 LINE",
"613.007 458.555 OFFCURVE",
"645 458.058 OFFCURVE",
"645 423 CURVE SMOOTH",
"645 402.844 OFFCURVE",
"615.805 323.404 OFFCURVE",
"596.5 275.5 CURVE SMOOTH",
"577.681 228.801 OFFCURVE",
"538.952 134.395 OFFCURVE",
"530 115 CURVE",
"515.029 154.924 OFFCURVE",
"479.892 251.092 OFFCURVE",
"462.5 301 CURVE SMOOTH",
"449.31 338.85 OFFCURVE",
"422 415.708 OFFCURVE",
"422 430 CURVE SMOOTH",
"422 455.558 OFFCURVE",
"467.655 458.707 OFFCURVE",
"494 462 CURVE",
"494 473 LINE",
"266 473 LINE",
"266 462 LINE",
"332 458 OFFCURVE",
"334 426 OFFCURVE",
"356 364 CURVE",
"326.929 283.496 OFFCURVE",
"279.805 159.512 OFFCURVE",
"260 110 CURVE",
"237.727 163.923 OFFCURVE",
"195 257 OFFCURVE",
"171 315 CURVE SMOOTH",
"149 368 OFFCURVE",
"129 413 OFFCURVE",
"126 443 CURVE SMOOTH",
"124 459 OFFCURVE",
"173.032 459.147 OFFCURVE",
"193 462 CURVE",
"193 473 LINE",
"-32 473 LINE",
"-32 462 LINE",
"-8 461 OFFCURVE",
"20 455 OFFCURVE",
"30 441 CURVE SMOOTH",
"42 424 OFFCURVE",
"51 399.667 OFFCURVE",
"59 381 CURVE SMOOTH",
"115 246.333 OFFCURVE",
"162 132 OFFCURVE",
"214 5 CURVE SMOOTH",
"216 0 OFFCURVE",
"219.667 -2 OFFCURVE",
"223 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
67 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
69 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
78 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
78 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
81 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
81 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
83 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
83 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
15 67 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
43 67 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
73 67 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 739;
}
);
note = w;
unicode = 0077;
},
{
glyphname = x;
lastChange = "2020-12-31 20:06:18 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"187 0 LINE",
"187 11 LINE",
"152.333 12.333 OFFCURVE",
"126 14 OFFCURVE",
"126 45 CURVE SMOOTH",
"126 70.754 OFFCURVE",
"187.153 150.729 OFFCURVE",
"218 197 CURVE",
"244.693 148.062 OFFCURVE",
"292 72 OFFCURVE",
"292 43 CURVE SMOOTH",
"292 13 OFFCURVE",
"263.609 11 OFFCURVE",
"245 11 CURVE",
"245 0 LINE",
"478 0 LINE",
"478 11 LINE",
"422.868 14.063 OFFCURVE",
"410.769 20.62 OFFCURVE",
"367 96 CURVE SMOOTH",
"333.234 153.884 OFFCURVE",
"301.181 203.638 OFFCURVE",
"271 264 CURVE",
"286.764 286.333 OFFCURVE",
"332.501 348.501 OFFCURVE",
"355 377 CURVE SMOOTH",
"410.034 446.302 OFFCURVE",
"422.675 458.23 OFFCURVE",
"483 462 CURVE",
"483 473 LINE",
"292 473 LINE",
"292 462 LINE",
"329.333 459.333 OFFCURVE",
"353 454 OFFCURVE",
"353 426 CURVE SMOOTH",
"353 405.972 OFFCURVE",
"295.227 320.34 OFFCURVE",
"265 275 CURVE",
"239.193 316.936 OFFCURVE",
"184 414 OFFCURVE",
"184 435 CURVE SMOOTH",
"184 458 OFFCURVE",
"220.203 462 OFFCURVE",
"235 462 CURVE",
"235 473 LINE",
"-4 473 LINE",
"-4 462 LINE",
"21.333 458 OFFCURVE",
"49 458 OFFCURVE",
"73 438 CURVE SMOOTH",
"84 429 OFFCURVE",
"94.667 409.667 OFFCURVE",
"104 395 CURVE SMOOTH",
"117.622 372.013 OFFCURVE",
"197.378 232.987 OFFCURVE",
"211 210 CURVE",
"189.667 179.333 OFFCURVE",
"157.667 133.667 OFFCURVE",
"119 87 CURVE SMOOTH",
"62.371 16.78 OFFCURVE",
"37.363 11 OFFCURVE",
"-8 11 CURVE",
"-8 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
11 44 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
54 44 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 458;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2020-12-31 21:51:30 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{237, 478}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"133.667 -240 OFFCURVE",
"166 -218.667 OFFCURVE",
"182 -168 CURVE SMOOTH",
"218 -54 OFFCURVE",
"242.167 23 OFFCURVE",
"254.5 63 CURVE SMOOTH",
"266.833 103 OFFCURVE",
"298 201 OFFCURVE",
"306 227.5 CURVE SMOOTH",
"332.102 310.158 OFFCURVE",
"370.295 433.251 OFFCURVE",
"379 442.5 CURVE SMOOTH",
"394.647 459.125 OFFCURVE",
"420.184 460.099 OFFCURVE",
"443 462 CURVE",
"443 473 LINE",
"289 473 LINE",
"289 462 LINE",
"316.848 458.906 OFFCURVE",
"345 457.233 OFFCURVE",
"345 433 CURVE SMOOTH",
"345 408.08 OFFCURVE",
"256.914 126.438 OFFCURVE",
"247 100 CURVE",
"230.578 143.793 OFFCURVE",
"194.219 244.597 OFFCURVE",
"176.5 293.5 CURVE SMOOTH",
"161.956 333.642 OFFCURVE",
"132 415.35 OFFCURVE",
"132 430 CURVE SMOOTH",
"132 455.333 OFFCURVE",
"156 458 OFFCURVE",
"184 462 CURVE",
"184 473 LINE",
"-34 473 LINE",
"-34 462 LINE",
"-11.333 460.667 OFFCURVE",
"4.167 458 OFFCURVE",
"12.5 454 CURVE SMOOTH",
"20.833 450 OFFCURVE",
"30 446 OFFCURVE",
"34 438 CURVE SMOOTH",
"46 412 OFFCURVE",
"55 380.667 OFFCURVE",
"67 348 CURVE SMOOTH",
"86.883 293.875 OFFCURVE",
"120.049 203.203 OFFCURVE",
"140 150 CURVE SMOOTH",
"156.788 105.232 OFFCURVE",
"199 -7 OFFCURVE",
"206 -28 CURVE",
"202.116 -47.421 OFFCURVE",
"174.314 -141.049 OFFCURVE",
"156 -186 CURVE",
"154 -186 LINE",
"135.333 -168.667 OFFCURVE",
"119.667 -149 OFFCURVE",
"93 -149 CURVE SMOOTH",
"66.333 -149 OFFCURVE",
"49 -168.333 OFFCURVE",
"49 -195 CURVE SMOOTH",
"49 -221.667 OFFCURVE",
"76.333 -240 OFFCURVE",
"103 -240 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
15 53 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
47 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 47 23 47 39 47 55 47 71 47 87 47 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 47 118 47 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
44 53 47 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 416;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
lastChange = "2020-12-31 20:07:55 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"424 -3 LINE",
"437 149 LINE",
"427 150 LINE",
"402.362 73.007 OFFCURVE",
"374.611 19 OFFCURVE",
"274 19 CURVE SMOOTH",
"123 19 LINE",
"405 463 LINE",
"405 472 LINE",
"376 472 OFFCURVE",
"350.5 471.833 OFFCURVE",
"327.5 471.5 CURVE SMOOTH",
"304.5 471.167 OFFCURVE",
"135 471 OFFCURVE",
"103 471 CURVE SMOOTH",
"63.552 471 OFFCURVE",
"52.354 476.468 OFFCURVE",
"44 489 CURVE",
"35 488 LINE",
"17 350 LINE",
"27 348 LINE",
"54.898 428.904 OFFCURVE",
"70.763 453 OFFCURVE",
"165 453 CURVE SMOOTH",
"300 453 LINE",
"21 8 LINE",
"21 1 LINE",
"51 1 OFFCURVE",
"83 1 OFFCURVE",
"107 1 CURVE SMOOTH",
"131.667 1 OFFCURVE",
"155.833 1.167 OFFCURVE",
"179.5 1.5 CURVE SMOOTH",
"203.167 1.833 OFFCURVE",
"227.667 2 OFFCURVE",
"253 2 CURVE SMOOTH",
"278.333 2 OFFCURVE",
"307.333 2 OFFCURVE",
"340 2 CURVE SMOOTH",
"348 2 OFFCURVE",
"356 2 OFFCURVE",
"364 2 CURVE SMOOTH",
"376.57 2 OFFCURVE",
"412.157 1.264 OFFCURVE",
"415 -3 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
7 45 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
30 45 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 433;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"192 -120 OFFCURVE",
"201 -112.667 OFFCURVE",
"201 -102 CURVE SMOOTH",
"201 -95.333 OFFCURVE",
"199.333 -88.667 OFFCURVE",
"196 -82 CURVE",
"185.333 -82 OFFCURVE",
"174 -82 OFFCURVE",
"162 -82 CURVE SMOOTH",
"124.814 -82 OFFCURVE",
"96 -69.705 OFFCURVE",
"96 -25 CURVE SMOOTH",
"96 55.348 OFFCURVE",
"205 81.086 OFFCURVE",
"205 179 CURVE SMOOTH",
"205 242.674 OFFCURVE",
"150.912 284.022 OFFCURVE",
"87 300 CURVE",
"87 302 LINE",
"153.667 319.333 OFFCURVE",
"205 360.333 OFFCURVE",
"205 423 CURVE SMOOTH",
"205 523.431 OFFCURVE",
"96 544.886 OFFCURVE",
"96 629 CURVE SMOOTH",
"96 691.367 OFFCURVE",
"146.575 686 OFFCURVE",
"196 686 CURVE",
"199.333 692.667 OFFCURVE",
"201 699.333 OFFCURVE",
"201 706 CURVE SMOOTH",
"201 716.667 OFFCURVE",
"192 724 OFFCURVE",
"180 724 CURVE SMOOTH",
"140.632 724 OFFCURVE",
"66 667.382 OFFCURVE",
"66 612 CURVE SMOOTH",
"66 523.594 OFFCURVE",
"166 508.084 OFFCURVE",
"166 422 CURVE SMOOTH",
"166 351.246 OFFCURVE",
"98.247 307 OFFCURVE",
"39 307 CURVE",
"39 295 LINE",
"96.247 295 OFFCURVE",
"166 249.389 OFFCURVE",
"166 180 CURVE SMOOTH",
"166 96.412 OFFCURVE",
"68 77.097 OFFCURVE",
"68 -8 CURVE SMOOTH",
"68 -63.159 OFFCURVE",
"140.293 -120 OFFCURVE",
"180 -120 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
6 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 14 229 14 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
6 29 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
218 34 234 34 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 34 25 34 41 34 57 34 73 34 89 34 105 34 121 34 137 34 153 34 169 34 185 34 201 34 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
6 55 24 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"163 -21 LINE",
"163 780 LINE",
"83 780 LINE",
"83 -21 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 5 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 246;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"145.707 -120 OFFCURVE",
"218 -63.159 OFFCURVE",
"218 -8 CURVE SMOOTH",
"218 77.097 OFFCURVE",
"120 96.412 OFFCURVE",
"120 180 CURVE SMOOTH",
"120 249.389 OFFCURVE",
"189.753 295 OFFCURVE",
"247 295 CURVE",
"247 307 LINE",
"187.753 307 OFFCURVE",
"120 351.246 OFFCURVE",
"120 422 CURVE SMOOTH",
"120 508.084 OFFCURVE",
"220 523.594 OFFCURVE",
"220 612 CURVE SMOOTH",
"220 667.382 OFFCURVE",
"145.368 724 OFFCURVE",
"106 724 CURVE SMOOTH",
"94 724 OFFCURVE",
"85 716.667 OFFCURVE",
"85 706 CURVE SMOOTH",
"85 699.333 OFFCURVE",
"86.667 692.667 OFFCURVE",
"90 686 CURVE",
"100 686 OFFCURVE",
"110.667 686 OFFCURVE",
"122 686 CURVE SMOOTH",
"159.448 686 OFFCURVE",
"190 673.435 OFFCURVE",
"190 629 CURVE SMOOTH",
"190 544.886 OFFCURVE",
"81 523.431 OFFCURVE",
"81 423 CURVE SMOOTH",
"81 360.333 OFFCURVE",
"132.333 319.333 OFFCURVE",
"199 302 CURVE",
"199 300 LINE",
"135.088 284.022 OFFCURVE",
"81 242.674 OFFCURVE",
"81 179 CURVE SMOOTH",
"81 81.086 OFFCURVE",
"190 55.348 OFFCURVE",
"190 -25 CURVE SMOOTH",
"190 -69.724 OFFCURVE",
"161.131 -82 OFFCURVE",
"123 -82 CURVE SMOOTH",
"111.667 -82 OFFCURVE",
"100.667 -82 OFFCURVE",
"90 -82 CURVE",
"86.667 -88.667 OFFCURVE",
"85 -95.333 OFFCURVE",
"85 -102 CURVE SMOOTH",
"85 -112.667 OFFCURVE",
"94 -120 OFFCURVE",
"106 -120 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
6 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 6 229 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
218 27 234 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
36 11 27 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
36 57 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"136 535 LINE",
"154.195 581.786 OFFCURVE",
"166.051 581 OFFCURVE",
"218 581 CURVE",
"309 562 LINE",
"378.508 562 OFFCURVE",
"407.495 606.98 OFFCURVE",
"422 665 CURVE",
"408 665 LINE",
"398.667 619.667 OFFCURVE",
"371.333 614 OFFCURVE",
"322 614 CURVE",
"233 633 LINE",
"170.333 633 OFFCURVE",
"137.667 592.333 OFFCURVE",
"123 535 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 522;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = Adieresis;
lastChange = "2020-12-31 21:42:09 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 348, 244}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
57 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
83 1 69 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
83 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 704;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Aring;
lastChange = "2020-12-31 21:43:06 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 350, 242}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
93 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
94 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
93 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
218 12 234 12 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
6 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 18 229 18 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
88 6 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
57 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
82 24 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
83 24 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
88 24 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 704;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Ccedilla;
lastChange = "2020-12-31 21:43:19 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 436, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
80 7 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
53 5 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
27 22 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
28 22 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 5 values pushed */
106 31 122 31 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 31 25 31 41 31 57 31 73 31 89 31 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
58 22 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 13 values pushed */
6 80 22 80 38 80 54 80 70 80 86 80 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 80 117 80 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
48 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
27 48 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
28 48 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
58 48 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 776;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Eacute;
lastChange = "2020-12-31 21:43:27 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 332, 244}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
21 7 90 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 21 22 21 38 21 54 21 70 21 86 21 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 21 117 21 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
103 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
103 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 711;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ntilde;
lastChange = "2020-12-31 21:44:04 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 434, 251}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
56 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 3 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
30 72 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
65 72 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 875;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = Odieresis;
lastChange = "2020-12-31 21:44:29 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 417, 243}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 44 122 44 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
54 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 54 22 54 38 54 54 54 70 54 86 54 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 54 117 54 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
59 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 808;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Udieresis;
lastChange = "2020-12-31 21:44:43 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 445, 247}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
55 7 87 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
107 35 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
107 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
218 35 234 35 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 153 35 169 35 185 35 201 35 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
87 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
87 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
90 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
90 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
107 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
104 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
104 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
107 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
116 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
97 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
97 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
97 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
50 2 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 50 23 50 39 50 55 50 71 50 87 50 103 50 119 50 135 50 151 50 167 50 183 50 199 50 215 50 231 50 247 50 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 834;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = aacute;
lastChange = "2020-12-31 21:44:59 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 272, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
42 5 61 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
14 5 80 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
72 61 75 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
66 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
75 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
8 75 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
11 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 11 118 11 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
48 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 48 121 48 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 48 24 48 40 48 56 48 72 48 88 48 104 48 120 48 136 48 152 48 168 48 184 48 200 48 216 48 232 48 248 48 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 48 24 48 40 48 56 48 72 48 88 48 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
72 75 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
85 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
85 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
93 75 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 448;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = agrave;
lastChange = "2020-12-31 21:45:02 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 268, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
42 5 61 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
14 5 80 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
72 61 75 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
66 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
75 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
8 75 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
11 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 11 118 11 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
48 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 48 121 48 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 48 24 48 40 48 56 48 72 48 88 48 104 48 120 48 136 48 152 48 168 48 184 48 200 48 216 48 232 48 248 48 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 48 24 48 40 48 56 48 72 48 88 48 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
72 75 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
85 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
85 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
93 75 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 448;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = acircumflex;
lastChange = "2020-12-31 21:45:06 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 266, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
42 5 61 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
14 5 80 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
72 61 75 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
66 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
75 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
8 75 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
11 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 11 118 11 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
48 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 48 121 48 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 48 24 48 40 48 56 48 72 48 88 48 104 48 120 48 136 48 152 48 168 48 184 48 200 48 216 48 232 48 248 48 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 48 24 48 40 48 56 48 72 48 88 48 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
72 75 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
85 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
85 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
93 75 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 448;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = adieresis;
lastChange = "2020-12-31 21:45:11 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 272, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
59 5 78 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
31 5 97 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
97 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
97 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
97 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
92 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
92 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
89 78 92 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
105 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
105 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
43 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
83 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
83 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
92 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
92 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
25 92 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
92 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 28 23 28 39 28 55 28 71 28 87 28 103 28 119 28 135 28 151 28 167 28 183 28 199 28 215 28 231 28 247 28 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 28 23 28 39 28 55 28 71 28 87 28 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 28 118 28 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
65 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 65 121 65 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 65 24 65 40 65 56 65 72 65 88 65 104 65 120 65 136 65 152 65 168 65 184 65 200 65 216 65 232 65 248 65 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 65 24 65 40 65 56 65 72 65 88 65 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
89 92 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
102 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
102 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
110 92 43 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 448;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = atilde;
lastChange = "2020-12-31 21:45:16 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 268, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
55 5 74 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
27 5 93 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
93 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
85 74 88 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
101 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
101 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
79 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
79 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
88 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
61 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 61 121 61 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 61 24 61 40 61 56 61 72 61 88 61 104 61 120 61 136 61 152 61 168 61 184 61 200 61 216 61 232 61 248 61 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 61 24 61 40 61 56 61 72 61 88 61 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
21 88 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
88 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 24 23 24 39 24 55 24 71 24 87 24 103 24 119 24 135 24 151 24 167 24 183 24 199 24 215 24 231 24 247 24 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 24 23 24 39 24 55 24 71 24 87 24 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 24 118 24 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
85 88 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
98 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
98 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
106 88 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 448;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = aring;
lastChange = "2020-12-31 21:45:19 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 274, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
47 5 66 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
91 6 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
91 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 58 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
85 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
85 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 27 values pushed */
6 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 91 229 91 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
97 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
105 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
105 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
110 66 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
94 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
31 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
71 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
80 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
13 80 94 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
16 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 16 23 16 39 16 55 16 71 16 87 16 103 16 119 16 135 16 151 16 167 16 183 16 199 16 215 16 231 16 247 16 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 16 23 16 39 16 55 16 71 16 87 16 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 16 118 16 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
53 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 53 121 53 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 53 24 53 40 53 56 53 72 53 88 53 104 53 120 53 136 53 152 53 168 53 184 53 200 53 216 53 232 53 248 53 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 53 24 53 40 53 56 53 72 53 88 53 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
77 80 94 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
102 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
102 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
110 80 94 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 448;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = ccedilla;
lastChange = "2020-12-31 21:45:28 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 239, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
9 5 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
67 5 46 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 9 22 9 38 9 54 9 70 9 86 9 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 9 117 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
25 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 46 122 46 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 46 25 46 41 46 57 46 73 46 89 46 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
42 46 67 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
43 35 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
72 35 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
79 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 4 118 4 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
72 62 30 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 432;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = eacute;
lastChange = "2020-12-31 21:46:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 232, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
20 7 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 16 117 16 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
11 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 11 118 11 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 435;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = egrave;
lastChange = "2020-12-31 21:46:05 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 228, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
20 7 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 16 117 16 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
11 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 11 118 11 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 435;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = ecircumflex;
lastChange = "2020-12-31 21:46:09 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 226, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
20 7 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 16 117 16 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
11 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 11 23 11 39 11 55 11 71 11 87 11 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 11 118 11 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
19 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 435;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
lastChange = "2020-12-31 21:46:13 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 232, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
77 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
37 7 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
33 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 33 22 33 38 33 54 33 70 33 86 33 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 33 117 33 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 28 23 28 39 28 55 28 71 28 87 28 103 28 119 28 135 28 151 28 167 28 183 28 199 28 215 28 231 28 247 28 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 28 23 28 39 28 55 28 71 28 87 28 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 28 118 28 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
36 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
74 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 435;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = iacute;
lastChange = "2020-12-31 21:46:35 +0000";
layers = (
{
components = (
{
name = dotlessi;
},
{
name = acute;
transform = "{1, 0, 0, 1, 110, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
14 5 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
15 7 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 254;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = igrave;
lastChange = "2020-12-31 21:46:39 +0000";
layers = (
{
components = (
{
name = dotlessi;
},
{
name = grave;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
14 5 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
15 7 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 254;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = icircumflex;
lastChange = "2020-12-31 21:46:43 +0000";
layers = (
{
components = (
{
name = dotlessi;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 104, -3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
14 5 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
5 23 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
5 7 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
15 7 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 254;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idieresis;
lastChange = "2020-12-31 21:46:46 +0000";
layers = (
{
components = (
{
name = dotlessi;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 110, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
31 5 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 254;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = ntilde;
lastChange = "2020-12-31 21:47:09 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 317, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
57 5 46 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
27 5 63 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
36 46 57 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
38 46 57 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
37 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
51 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
36 20 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
38 20 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
60 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 60 121 60 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 60 24 60 40 60 56 60 72 60 88 60 104 60 120 60 136 60 152 60 168 60 184 60 200 60 216 60 232 60 248 60 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 60 24 60 40 60 56 60 72 60 88 60 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
40 30 60 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 521;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = oacute;
lastChange = "2020-12-31 21:47:26 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 292, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 27 122 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 37 22 37 38 37 54 37 70 37 86 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 37 117 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 573;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = ograve;
lastChange = "2020-12-31 21:47:30 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 288, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 27 122 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 37 22 37 38 37 54 37 70 37 86 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 37 117 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 573;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ocircumflex;
lastChange = "2020-12-31 21:47:34 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 286, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 27 122 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 37 22 37 38 37 54 37 70 37 86 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 37 117 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 573;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = odieresis;
lastChange = "2020-12-31 21:47:37 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 292, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 44 122 44 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
54 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 54 22 54 38 54 54 54 70 54 86 54 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 54 117 54 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
59 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 573;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = otilde;
lastChange = "2020-12-31 21:47:41 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 288, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
40 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 40 122 40 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 40 25 40 41 40 57 40 73 40 89 40 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
50 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 50 22 50 38 50 54 50 70 50 86 50 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 50 117 50 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 4 55 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 573;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = uacute;
lastChange = "2020-12-31 21:47:54 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 223, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
33 5 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
15 5 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
56 40 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
57 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 29 23 29 39 29 55 29 71 29 87 29 103 29 119 29 135 29 151 29 167 29 183 29 199 29 215 29 231 29 247 29 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 29 23 29 39 29 55 29 71 29 87 29 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 29 118 29 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
8 50 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
56 50 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 523;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ugrave;
lastChange = "2020-12-31 21:47:57 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 219, -3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
33 5 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
15 5 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
56 40 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
57 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 29 23 29 39 29 55 29 71 29 87 29 103 29 119 29 135 29 151 29 167 29 183 29 199 29 215 29 231 29 247 29 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 29 23 29 39 29 55 29 71 29 87 29 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 29 118 29 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
8 50 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
56 50 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 523;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = ucircumflex;
lastChange = "2020-12-31 21:48:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 217, -6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
33 5 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
15 5 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
56 40 15 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
57 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 29 23 29 39 29 55 29 71 29 87 29 103 29 119 29 135 29 151 29 167 29 183 29 199 29 215 29 231 29 247 29 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 29 23 29 39 29 55 29 71 29 87 29 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 29 118 29 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
8 50 29 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
56 50 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 523;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udieresis;
lastChange = "2020-12-31 21:57:55 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 223, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
50 5 61 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
32 5 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
73 57 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
74 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
67 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
74 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
46 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 46 23 46 39 46 55 46 71 46 87 46 103 46 119 46 135 46 151 46 167 46 183 46 199 46 215 46 231 46 247 46 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 46 23 46 39 46 55 46 71 46 87 46 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 46 118 46 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
25 67 46 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 523;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = degree;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"282.025 443 OFFCURVE",
"345 505.592 OFFCURVE",
"345 584 CURVE SMOOTH",
"345 662.284 OFFCURVE",
"282.284 725 OFFCURVE",
"204 725 CURVE SMOOTH",
"124.996 725 OFFCURVE",
"63 663.178 OFFCURVE",
"63 584 CURVE SMOOTH",
"63 505.154 OFFCURVE",
"124.929 443 OFFCURVE",
"203 443 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"148.28 482 OFFCURVE",
"103 528.339 OFFCURVE",
"103 584 CURVE SMOOTH",
"103 639.246 OFFCURVE",
"148.416 685 OFFCURVE",
"204 685 CURVE SMOOTH",
"260.339 685 OFFCURVE",
"304 639.584 OFFCURVE",
"304 584 CURVE SMOOTH",
"304 527.584 OFFCURVE",
"260.732 482 OFFCURVE",
"204 482 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
218 20 234 20 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 15 values pushed */
6 30 22 30 38 30 54 30 70 30 86 30 102 30 7 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
118 30 134 30 150 30 166 30 182 30 198 30 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 30 229 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
15 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 15 121 15 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 15 24 15 40 15 56 15 72 15 88 15 104 15 120 15 136 15 152 15 168 15 184 15 200 15 216 15 232 15 248 15 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 15 24 15 40 15 56 15 72 15 88 15 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
35 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 35 121 35 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 35 24 35 40 35 56 35 72 35 88 35 104 35 120 35 136 35 152 35 168 35 184 35 200 35 216 35 232 35 248 35 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 35 24 35 40 35 56 35 72 35 88 35 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 408;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = cent;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"229 8 LINE",
"246.333 4 OFFCURVE",
"264 2 OFFCURVE",
"282 2 CURVE SMOOTH",
"381.12 2 OFFCURVE",
"456.046 69.593 OFFCURVE",
"481 150 CURVE",
"473 154 LINE",
"442.333 100.667 OFFCURVE",
"398 64 OFFCURVE",
"314 64 CURVE SMOOTH",
"289.333 64 OFFCURVE",
"266.667 68.667 OFFCURVE",
"246 78 CURVE",
"338 449 LINE",
"360.667 436.333 OFFCURVE",
"372 413.333 OFFCURVE",
"372 380 CURVE SMOOTH",
"372 365.333 OFFCURVE",
"370 356.667 OFFCURVE",
"366 346 CURVE",
"371.333 326 OFFCURVE",
"389.333 311 OFFCURVE",
"412 311 CURVE SMOOTH",
"440 311 OFFCURVE",
"462 335 OFFCURVE",
"462 363 CURVE SMOOTH",
"462 421.124 OFFCURVE",
"404.231 456.906 OFFCURVE",
"344 470 CURVE",
"374 584 LINE",
"354 589 LINE",
"327 473 LINE",
"313 475 OFFCURVE",
"299.333 476 OFFCURVE",
"286 476 CURVE SMOOTH",
"157.741 476 OFFCURVE",
"60 365.872 OFFCURVE",
"60 242 CURVE SMOOTH",
"60 128.667 OFFCURVE",
"120 43.667 OFFCURVE",
"212 13 CURVE",
"176 -122 LINE",
"195 -126 LINE"
);
},
{
closed = 1;
nodes = (
"173 117.333 OFFCURVE",
"143 188 OFFCURVE",
"143 268 CURVE SMOOTH",
"143 370.35 OFFCURVE",
"199.809 459 OFFCURVE",
"286 459 CURVE SMOOTH",
"299.333 459 OFFCURVE",
"311 457.667 OFFCURVE",
"321 455 CURVE",
"229 84 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
50 5 33 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 50 22 50 38 50 54 50 70 50 86 50 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 50 117 50 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 4 118 4 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
7 38 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
47 38 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 526;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = sterling;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"513.631 -180 OFFCURVE",
"584 -121.019 OFFCURVE",
"584 -36 CURVE SMOOTH",
"584 -10.667 OFFCURVE",
"567.667 11 OFFCURVE",
"537 11 CURVE SMOOTH",
"510.333 11 OFFCURVE",
"492 -7 OFFCURVE",
"492 -31 CURVE SMOOTH",
"492 -73.746 OFFCURVE",
"554 -57.725 OFFCURVE",
"554 -86 CURVE SMOOTH",
"554 -116.677 OFFCURVE",
"511.13 -145 OFFCURVE",
"478 -145 CURVE SMOOTH",
"402.291 -145 OFFCURVE",
"380.206 -52 OFFCURVE",
"271 -52 CURVE SMOOTH",
"252.333 -52 OFFCURVE",
"236 -52.833 OFFCURVE",
"222 -54.5 CURVE SMOOTH",
"208 -56.167 OFFCURVE",
"191.667 -57.667 OFFCURVE",
"173 -59 CURVE",
"171 -55 LINE",
"208.075 -24.104 OFFCURVE",
"264.705 50.016 OFFCURVE",
"286 121 CURVE",
"422 121 LINE",
"433 155 LINE",
"299 155 LINE",
"307.053 179.158 OFFCURVE",
"345.729 282.277 OFFCURVE",
"358 315 CURVE SMOOTH",
"368 341.667 OFFCURVE",
"378.5 369 OFFCURVE",
"389.5 397 CURVE SMOOTH",
"411.5 453 OFFCURVE",
"434.667 512.333 OFFCURVE",
"456 563 CURVE SMOOTH",
"482.938 623.609 OFFCURVE",
"520.981 715 OFFCURVE",
"584 715 CURVE SMOOTH",
"612.308 715 OFFCURVE",
"620.784 691.298 OFFCURVE",
"624 672 CURVE",
"630.667 642.667 OFFCURVE",
"641.333 632 OFFCURVE",
"664 632 CURVE SMOOTH",
"681.333 632 OFFCURVE",
"700 648.667 OFFCURVE",
"700 666 CURVE SMOOTH",
"700 716.048 OFFCURVE",
"637.855 729 OFFCURVE",
"587 729 CURVE SMOOTH",
"474.715 729 OFFCURVE",
"381.008 608.079 OFFCURVE",
"337 489 CURVE SMOOTH",
"307.667 410.333 OFFCURVE",
"279.5 335 OFFCURVE",
"257.5 275 CURVE SMOOTH",
"240.173 227.746 OFFCURVE",
"219.71 172.131 OFFCURVE",
"214 155 CURVE",
"121 155 LINE",
"112 124 LINE",
"204 124 LINE",
"182.667 52 OFFCURVE",
"149.667 -20.667 OFFCURVE",
"127 -62 CURVE",
"63.597 -87.361 OFFCURVE",
"-24 -87.7 OFFCURVE",
"-24 -131 CURVE SMOOTH",
"-24 -151 OFFCURVE",
"-3 -160 OFFCURVE",
"17 -160 CURVE SMOOTH",
"71.897 -160 OFFCURVE",
"119.655 -115.425 OFFCURVE",
"145 -76 CURVE",
"182 -76 LINE SMOOTH",
"281.768 -76 OFFCURVE",
"311.115 -180 OFFCURVE",
"414 -180 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
45 6 51 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
106 51 122 51 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 51 25 51 41 51 57 51 73 51 89 51 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
102 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
48 40 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
66 2 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
78 2 75 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
78 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
18 75 78 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
61 2 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
70 40 48 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 678;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = section;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"198.667 -192 OFFCURVE",
"264 -162.5 OFFCURVE",
"316 -108.5 CURVE SMOOTH",
"368 -54.5 OFFCURVE",
"407 23 OFFCURVE",
"407 123 CURVE SMOOTH",
"407 189.667 OFFCURVE",
"397.667 248 OFFCURVE",
"355 312 CURVE SMOOTH",
"324.028 358.457 OFFCURVE",
"286.789 401.75 OFFCURVE",
"247 449 CURVE SMOOTH",
"208.333 495.667 OFFCURVE",
"176 536 OFFCURVE",
"176 588 CURVE SMOOTH",
"176 623.951 OFFCURVE",
"216.813 658 OFFCURVE",
"254 658 CURVE SMOOTH",
"263.333 658 OFFCURVE",
"268.667 657.333 OFFCURVE",
"278 656 CURVE",
"294 629.333 OFFCURVE",
"308.667 606 OFFCURVE",
"342 606 CURVE SMOOTH",
"368.667 606 OFFCURVE",
"395 633 OFFCURVE",
"395 665 CURVE SMOOTH",
"395 698.333 OFFCURVE",
"373.667 728 OFFCURVE",
"339 728 CURVE SMOOTH",
"276.333 728 OFFCURVE",
"209.833 679 OFFCURVE",
"158.5 607 CURVE SMOOTH",
"107.167 535 OFFCURVE",
"71 438.667 OFFCURVE",
"71 344 CURVE SMOOTH",
"71 284 OFFCURVE",
"82 246.333 OFFCURVE",
"110 193 CURVE SMOOTH",
"149.793 119.099 OFFCURVE",
"179.302 100.613 OFFCURVE",
"233 32 CURVE SMOOTH",
"265 -8 OFFCURVE",
"298 -43.667 OFFCURVE",
"298 -85 CURVE SMOOTH",
"298 -122.466 OFFCURVE",
"243.198 -151.073 OFFCURVE",
"211 -154 CURVE",
"164.996 -126.939 OFFCURVE",
"159.247 -69 OFFCURVE",
"113 -69 CURVE SMOOTH",
"85 -69 OFFCURVE",
"64 -94.667 OFFCURVE",
"64 -124 CURVE SMOOTH",
"64 -168 OFFCURVE",
"102.667 -192 OFFCURVE",
"148 -192 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"341.333 31 OFFCURVE",
"313.667 63.667 OFFCURVE",
"279 109 CURVE SMOOTH",
"240.985 159.02 OFFCURVE",
"181.707 224.94 OFFCURVE",
"149 274 CURVE SMOOTH",
"118.333 320.667 OFFCURVE",
"104 354.667 OFFCURVE",
"104 412 CURVE SMOOTH",
"104 444 OFFCURVE",
"109.333 466.667 OFFCURVE",
"120 496 CURVE",
"128 496 LINE",
"146.667 446.667 OFFCURVE",
"170.667 418.667 OFFCURVE",
"204 376 CURVE SMOOTH",
"247.532 320.376 OFFCURVE",
"292.031 264.75 OFFCURVE",
"325 212 CURVE SMOOTH",
"357.696 159.184 OFFCURVE",
"380 116.674 OFFCURVE",
"380 54 CURVE SMOOTH",
"380 24.667 OFFCURVE",
"368 -6.333 OFFCURVE",
"360 -17 CURVE",
"352 -17 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
80 33 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
0 7 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
106 44 122 44 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
6 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 80 229 80 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
54 4 60 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 22 121 22 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 22 24 22 40 22 56 22 72 22 88 22 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 468;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = bullet;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"373.233 88 OFFCURVE",
"453 165.233 OFFCURVE",
"453 262 CURVE SMOOTH",
"453 358.961 OFFCURVE",
"375.582 436 OFFCURVE",
"278 436 CURVE SMOOTH",
"182.14 436 OFFCURVE",
"104 357.86 OFFCURVE",
"104 262 CURVE SMOOTH",
"104 166.14 OFFCURVE",
"182.14 88 OFFCURVE",
"278 88 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 556;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = paragraph;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"316.453 -198 OFFCURVE",
"393 -79.327 OFFCURVE",
"393 66 CURVE SMOOTH",
"393 651 LINE SMOOTH",
"393 703.249 OFFCURVE",
"447.873 709 OFFCURVE",
"476 709 CURVE",
"476 720 LINE",
"460.667 720 OFFCURVE",
"442 720.167 OFFCURVE",
"420 720.5 CURVE SMOOTH",
"398 720.833 OFFCURVE",
"378 721 OFFCURVE",
"360 721 CURVE SMOOTH",
"260 721 OFFCURVE",
"184.833 696.5 OFFCURVE",
"133.5 654.5 CURVE SMOOTH",
"82.167 612.5 OFFCURVE",
"57 553 OFFCURVE",
"57 485 CURVE SMOOTH",
"57 338.273 OFFCURVE",
"172.831 233 OFFCURVE",
"319 233 CURVE SMOOTH",
"356 233 LINE",
"356 89 LINE SMOOTH",
"356 -47.29 OFFCURVE",
"317.249 -171 OFFCURVE",
"213 -171 CURVE SMOOTH",
"190.333 -171 OFFCURVE",
"163.667 -167.333 OFFCURVE",
"153 -150 CURVE",
"156.333 -148 OFFCURVE",
"159.667 -144.833 OFFCURVE",
"163 -140.5 CURVE SMOOTH",
"166.333 -136.167 OFFCURVE",
"168 -128.333 OFFCURVE",
"168 -117 CURVE SMOOTH",
"168 -93 OFFCURVE",
"146.333 -74 OFFCURVE",
"117 -74 CURVE SMOOTH",
"86.333 -74 OFFCURVE",
"63 -99.333 OFFCURVE",
"63 -126 CURVE SMOOTH",
"63 -169.746 OFFCURVE",
"110.209 -198 OFFCURVE",
"156 -198 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
43 16 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
30 4 38 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
21 2 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 530;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = germandbls;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"458.246 -1 OFFCURVE",
"527 51.262 OFFCURVE",
"527 138 CURVE SMOOTH",
"527 200.667 OFFCURVE",
"502.333 229.333 OFFCURVE",
"457 264 CURVE SMOOTH",
"442.333 275.333 OFFCURVE",
"429.667 284.833 OFFCURVE",
"419 292.5 CURVE SMOOTH",
"408.333 300.167 OFFCURVE",
"396 309.667 OFFCURVE",
"382 321 CURVE SMOOTH",
"359.333 339.667 OFFCURVE",
"336 364 OFFCURVE",
"336 404 CURVE SMOOTH",
"336 447.586 OFFCURVE",
"360.325 470.453 OFFCURVE",
"388 496 CURVE SMOOTH",
"417.277 523.025 OFFCURVE",
"440 554.317 OFFCURVE",
"440 608 CURVE SMOOTH",
"440 668.099 OFFCURVE",
"401.852 728 OFFCURVE",
"297 728 CURVE SMOOTH",
"213.355 728 OFFCURVE",
"132.02 674.381 OFFCURVE",
"100 597 CURVE SMOOTH",
"88 567.667 OFFCURVE",
"86 529 OFFCURVE",
"86 481 CURVE",
"13 440 LINE",
"13 429 LINE",
"85 429 LINE",
"85 42 LINE SMOOTH",
"85 21.56 OFFCURVE",
"38.508 12.459 OFFCURVE",
"9 10 CURVE",
"9 0 LINE",
"224 0 LINE",
"224 10 LINE",
"198.667 12.667 OFFCURVE",
"168 21.667 OFFCURVE",
"168 39 CURVE SMOOTH",
"168 473 LINE SMOOTH",
"168 483 OFFCURVE",
"168 491.667 OFFCURVE",
"168 499 CURVE SMOOTH",
"168 514.028 OFFCURVE",
"171.906 557.122 OFFCURVE",
"173 579 CURVE SMOOTH",
"179.646 683.117 OFFCURVE",
"240.006 709 OFFCURVE",
"278 709 CURVE",
"340.667 702.333 OFFCURVE",
"378 658 OFFCURVE",
"378 590 CURVE SMOOTH",
"378 496.098 OFFCURVE",
"365.782 497.22 OFFCURVE",
"310 448 CURVE",
"282 421.333 OFFCURVE",
"263 402 OFFCURVE",
"263 362 CURVE SMOOTH",
"263 311.333 OFFCURVE",
"296.333 279.333 OFFCURVE",
"331 250 CURVE SMOOTH",
"347.667 236 OFFCURVE",
"364 223.5 OFFCURVE",
"380 212.5 CURVE SMOOTH",
"396 201.5 OFFCURVE",
"411.667 189.667 OFFCURVE",
"427 177 CURVE SMOOTH",
"448.333 159.667 OFFCURVE",
"459 134.667 OFFCURVE",
"459 102 CURVE SMOOTH",
"459 54.083 OFFCURVE",
"431.405 12 OFFCURVE",
"383 12 CURVE SMOOTH",
"324.508 12 OFFCURVE",
"278.907 76.278 OFFCURVE",
"258 139 CURVE",
"249 139 LINE",
"249 21 LINE",
"286.628 2.186 OFFCURVE",
"328.643 -1 OFFCURVE",
"359 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
45 5 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
9 5 67 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
16 5 59 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
0 5 75 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
51 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
106 59 122 59 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 59 25 59 41 59 57 59 73 59 89 59 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
106 67 122 67 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 67 25 67 41 67 57 67 73 67 89 67 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
106 75 122 75 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 75 25 75 41 75 57 75 73 75 89 75 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
92 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
92 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 536;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = registered;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"375.074 382 OFFCURVE",
"470 476.301 OFFCURVE",
"470 594 CURVE SMOOTH",
"470 712.201 OFFCURVE",
"376.036 806 OFFCURVE",
"257 806 CURVE SMOOTH",
"140.38 806 OFFCURVE",
"44 711.313 OFFCURVE",
"44 594 CURVE SMOOTH",
"44 476.762 OFFCURVE",
"140.886 382 OFFCURVE",
"257 382 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"151.445 400 OFFCURVE",
"64 488.08 OFFCURVE",
"64 594 CURVE SMOOTH",
"64 699.841 OFFCURVE",
"151.918 788 OFFCURVE",
"257 788 CURVE SMOOTH",
"362.423 788 OFFCURVE",
"451 699.423 OFFCURVE",
"451 594 CURVE SMOOTH",
"451 552.667 OFFCURVE",
"440.333 516.333 OFFCURVE",
"419 485 CURVE",
"397.667 487.667 OFFCURVE",
"381.667 495.667 OFFCURVE",
"363 517 CURVE",
"352.333 533 OFFCURVE",
"337.333 554 OFFCURVE",
"324 570 CURVE SMOOTH",
"316.667 578.667 OFFCURVE",
"309.333 586.333 OFFCURVE",
"302 593 CURVE",
"302 594 LINE",
"332.667 600.667 OFFCURVE",
"360 622 OFFCURVE",
"360 654 CURVE SMOOTH",
"360 681.333 OFFCURVE",
"348.333 700.333 OFFCURVE",
"325 711 CURVE SMOOTH",
"305 720.333 OFFCURVE",
"282 722 OFFCURVE",
"250 722 CURVE SMOOTH",
"244 722 OFFCURVE",
"236 721.833 OFFCURVE",
"226 721.5 CURVE SMOOTH",
"216 721.167 OFFCURVE",
"206 721 OFFCURVE",
"196 721 CURVE SMOOTH",
"186 721 OFFCURVE",
"176.833 720.833 OFFCURVE",
"168.5 720.5 CURVE SMOOTH",
"160.167 720.167 OFFCURVE",
"154.667 720 OFFCURVE",
"152 720 CURVE",
"152 712 LINE",
"165.333 710 OFFCURVE",
"175 706.333 OFFCURVE",
"181 701 CURVE",
"187.667 694.333 OFFCURVE",
"188 675.667 OFFCURVE",
"188 661 CURVE SMOOTH",
"188 535 LINE SMOOTH",
"188 520.333 OFFCURVE",
"186.333 502.667 OFFCURVE",
"181 496 CURVE",
"174.333 489.333 OFFCURVE",
"160.667 486 OFFCURVE",
"150 486 CURVE",
"150 476 LINE",
"267 476 LINE",
"267 486 LINE",
"230.596 486 OFFCURVE",
"230 500.889 OFFCURVE",
"230 531 CURVE SMOOTH",
"230 589 LINE",
"233.333 589 OFFCURVE",
"236 589.167 OFFCURVE",
"238 589.5 CURVE SMOOTH",
"240 589.833 OFFCURVE",
"243 589.333 OFFCURVE",
"247 588 CURVE",
"256.333 585.333 OFFCURVE",
"268 576.333 OFFCURVE",
"276 567 CURVE SMOOTH",
"286.667 555 OFFCURVE",
"294.833 544.667 OFFCURVE",
"300.5 536 CURVE SMOOTH",
"306.167 527.333 OFFCURVE",
"313 517 OFFCURVE",
"321 505 CURVE SMOOTH",
"324.626 499.198 OFFCURVE",
"338.359 478.188 OFFCURVE",
"340 476 CURVE",
"413 476 LINE",
"377 429.333 OFFCURVE",
"321 400 OFFCURVE",
"257 400 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"230 684 LINE SMOOTH",
"230 691.333 OFFCURVE",
"230.167 696.833 OFFCURVE",
"230.5 700.5 CURVE SMOOTH",
"230.833 704.167 OFFCURVE",
"231.333 707 OFFCURVE",
"232 709 CURVE",
"234.667 709.667 OFFCURVE",
"240.333 710 OFFCURVE",
"249 710 CURVE SMOOTH",
"262.333 710 OFFCURVE",
"272.333 710.333 OFFCURVE",
"283 705 CURVE SMOOTH",
"303.667 695 OFFCURVE",
"314 678.667 OFFCURVE",
"314 656 CURVE SMOOTH",
"314 633.333 OFFCURVE",
"305.333 614.667 OFFCURVE",
"276 604 CURVE",
"261.333 600 OFFCURVE",
"248.667 600 OFFCURVE",
"230 600 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
107 10 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
107 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
27 68 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
68 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
51 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
48 68 51 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
83 
MDRP[10000]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
6 107 22 107 38 107 54 107 70 107 86 107 102 107 118 107 134 107 150 107 166 107 182 107 198 107 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 107 229 107 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
48 15 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
99 15 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 514;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = copyright;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"601.333 -151 OFFCURVE",
"696.667 -108 OFFCURVE",
"766 -40 CURVE SMOOTH",
"835.333 28 OFFCURVE",
"878 124.667 OFFCURVE",
"878 230 CURVE SMOOTH",
"878 335.333 OFFCURVE",
"835.333 431.667 OFFCURVE",
"766 501 CURVE SMOOTH",
"696.667 570.333 OFFCURVE",
"601.333 613 OFFCURVE",
"496 613 CURVE SMOOTH",
"390.667 613 OFFCURVE",
"294.333 570.333 OFFCURVE",
"225 501 CURVE SMOOTH",
"155.667 431.667 OFFCURVE",
"113 335.333 OFFCURVE",
"113 230 CURVE SMOOTH",
"113 124.667 OFFCURVE",
"155.667 28 OFFCURVE",
"225 -40 CURVE SMOOTH",
"294.333 -108 OFFCURVE",
"390.667 -151 OFFCURVE",
"496 -151 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"562.449 0 OFFCURVE",
"640.424 38 OFFCURVE",
"649 38 CURVE SMOOTH",
"653 38 OFFCURVE",
"666.333 19.667 OFFCURVE",
"677 5 CURVE",
"686 5 LINE",
"689 166 LINE",
"678 166 LINE",
"660.793 88.569 OFFCURVE",
"602.828 14 OFFCURVE",
"514 14 CURVE SMOOTH",
"405.572 14 OFFCURVE",
"349 114.105 OFFCURVE",
"349 229 CURVE SMOOTH",
"349 342.273 OFFCURVE",
"402.937 453 OFFCURVE",
"513 453 CURVE SMOOTH",
"577 453 OFFCURVE",
"621.667 414.667 OFFCURVE",
"651 368 CURVE SMOOTH",
"661.667 350.667 OFFCURVE",
"671.333 322.667 OFFCURVE",
"678 300 CURVE",
"689 300 LINE",
"689 458 LINE",
"680 458 LINE",
"669.333 444.667 OFFCURVE",
"654 428 OFFCURVE",
"650 428 CURVE SMOOTH",
"641.417 428 OFFCURVE",
"560.209 468 OFFCURVE",
"511 468 CURVE SMOOTH",
"408.448 468 OFFCURVE",
"336.044 422.498 OFFCURVE",
"295 358 CURVE SMOOTH",
"263 307.333 OFFCURVE",
"258 261.333 OFFCURVE",
"258 232 CURVE SMOOTH",
"258 89.29 OFFCURVE",
"353.903 0 OFFCURVE",
"512 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"398.667 -121 OFFCURVE",
"309.833 -81.667 OFFCURVE",
"246.5 -19 CURVE SMOOTH",
"183.167 43.667 OFFCURVE",
"144 132.667 OFFCURVE",
"144 230 CURVE SMOOTH",
"144 327.333 OFFCURVE",
"183.167 415 OFFCURVE",
"246.5 479 CURVE SMOOTH",
"309.833 543 OFFCURVE",
"398.667 582 OFFCURVE",
"496 582 CURVE SMOOTH",
"593.333 582 OFFCURVE",
"681.167 543 OFFCURVE",
"744.5 479 CURVE SMOOTH",
"807.833 415 OFFCURVE",
"847 327.333 OFFCURVE",
"847 230 CURVE SMOOTH",
"847 132.667 OFFCURVE",
"807.833 43.667 OFFCURVE",
"744.5 -19 CURVE SMOOTH",
"681.167 -81.667 OFFCURVE",
"593.333 -121 OFFCURVE",
"496 -121 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
30 10 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
51 6 81 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
51 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 20 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
218 20 234 20 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
6 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 30 229 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
6 51 22 51 38 51 54 51 70 51 86 51 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 51 117 51 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
25 2 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
5 2 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
46 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
56 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1000;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = trademark;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"387 482 LINE",
"387 491 LINE",
"347.318 496.291 OFFCURVE",
"345 508.604 OFFCURVE",
"345 552 CURVE SMOOTH",
"345 690 LINE",
"359.667 659.333 OFFCURVE",
"394.333 586.667 OFFCURVE",
"437 488 CURVE",
"445 488 LINE",
"448.333 495.333 OFFCURVE",
"451.833 504 OFFCURVE",
"455.5 514 CURVE SMOOTH",
"459.167 524 OFFCURVE",
"462.333 531.333 OFFCURVE",
"465 536 CURVE",
"474.529 556.789 OFFCURVE",
"527.951 676.434 OFFCURVE",
"537 697 CURVE",
"537 535 LINE SMOOTH",
"537 508.333 OFFCURVE",
"527.667 493.667 OFFCURVE",
"493 491 CURVE",
"493 482 LINE",
"618 482 LINE",
"618 492 LINE",
"583.333 493.333 OFFCURVE",
"581.333 508.333 OFFCURVE",
"580 531 CURVE SMOOTH",
"579.333 543.667 OFFCURVE",
"579 555 OFFCURVE",
"579 565 CURVE SMOOTH",
"579 575 OFFCURVE",
"579 585.667 OFFCURVE",
"579 597 CURVE SMOOTH",
"579 606.333 OFFCURVE",
"579 615 OFFCURVE",
"579 623 CURVE SMOOTH",
"579 631.667 OFFCURVE",
"579.333 641 OFFCURVE",
"580 651 CURVE SMOOTH",
"580.667 660.333 OFFCURVE",
"581.167 668 OFFCURVE",
"581.5 674 CURVE SMOOTH",
"581.833 680 OFFCURVE",
"582.667 685.667 OFFCURVE",
"584 691 CURVE",
"587.333 702.333 OFFCURVE",
"598 709 OFFCURVE",
"616 711 CURVE",
"616 720 LINE",
"531 720 LINE",
"519 690.667 OFFCURVE",
"494.667 631.667 OFFCURVE",
"456 549 CURVE",
"377 720 LINE",
"295 720 LINE",
"295 712 LINE",
"311.74 707.815 OFFCURVE",
"331 702.193 OFFCURVE",
"331 680 CURVE SMOOTH",
"331 555 LINE SMOOTH",
"331 515 OFFCURVE",
"318.667 496.333 OFFCURVE",
"288 491 CURVE",
"288 482 LINE"
);
},
{
closed = 1;
nodes = (
"216 482 LINE",
"216 491 LINE",
"205.333 491 OFFCURVE",
"187.667 494.667 OFFCURVE",
"181 504 CURVE",
"178.333 509.333 OFFCURVE",
"177 524 OFFCURVE",
"177 536 CURVE SMOOTH",
"177 612 LINE SMOOTH",
"177 618.667 OFFCURVE",
"177 626 OFFCURVE",
"177 634 CURVE SMOOTH",
"177 642.667 OFFCURVE",
"177.167 651.333 OFFCURVE",
"177.5 660 CURVE SMOOTH",
"177.833 668.667 OFFCURVE",
"178 677 OFFCURVE",
"178 685 CURVE SMOOTH",
"178 693 OFFCURVE",
"178 700 OFFCURVE",
"178 706 CURVE",
"211 706 LINE SMOOTH",
"227.667 706 OFFCURVE",
"240 702.333 OFFCURVE",
"248 695 CURVE",
"251.333 691.667 OFFCURVE",
"255.333 685.333 OFFCURVE",
"260 676 CURVE SMOOTH",
"264.667 666.667 OFFCURVE",
"269 658 OFFCURVE",
"273 650 CURVE",
"281 652 LINE",
"272 725 LINE",
"261.333 721 OFFCURVE",
"253.667 718 OFFCURVE",
"239 718 CURVE SMOOTH",
"74 718 LINE SMOOTH",
"65.333 718 OFFCURVE",
"58.833 718.833 OFFCURVE",
"54.5 720.5 CURVE SMOOTH",
"50.167 722.167 OFFCURVE",
"45.333 723.667 OFFCURVE",
"40 725 CURVE",
"27 652 LINE",
"34 650 LINE",
"42 666 OFFCURVE",
"56 686.333 OFFCURVE",
"64 693 CURVE",
"72.667 701.667 OFFCURVE",
"84.667 706 OFFCURVE",
"100 706 CURVE SMOOTH",
"133 706 LINE",
"133 692.667 OFFCURVE",
"133.167 676.667 OFFCURVE",
"133.5 658 CURVE SMOOTH",
"133.833 639.333 OFFCURVE",
"134 623.333 OFFCURVE",
"134 610 CURVE SMOOTH",
"134 588.667 OFFCURVE",
"133.833 572.833 OFFCURVE",
"133.5 562.5 CURVE SMOOTH",
"133.167 552.167 OFFCURVE",
"133 543.667 OFFCURVE",
"133 537 CURVE SMOOTH",
"133 527.667 OFFCURVE",
"133 512.667 OFFCURVE",
"129 506 CURVE",
"119.667 496 OFFCURVE",
"108.333 491 OFFCURVE",
"95 491 CURVE",
"95 482 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
39 5 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
63 5 106 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
61 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
106 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
73 25 66 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
94 25 66 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
69 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
74 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
51 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
86 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
86 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
97 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
97 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
73 28 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
94 28 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
106 28 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 647;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = acute;
lastChange = "2020-12-31 21:30:56 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{0, 482}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"146 667 LINE",
"146 672 LINE",
"138 683 OFFCURVE",
"129 696 OFFCURVE",
"100 696 CURVE",
"-4 520 LINE",
"6 514 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = dieresis;
lastChange = "2020-12-31 21:40:31 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{0, 482}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"99 554 OFFCURVE",
"120 575 OFFCURVE",
"120 600 CURVE SMOOTH",
"120 625 OFFCURVE",
"99 646 OFFCURVE",
"74 646 CURVE SMOOTH",
"49 646 OFFCURVE",
"28 625 OFFCURVE",
"28 600 CURVE SMOOTH",
"28 575 OFFCURVE",
"49 554 OFFCURVE",
"74 554 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-68 554 OFFCURVE",
"-47 575 OFFCURVE",
"-47 600 CURVE SMOOTH",
"-47 625 OFFCURVE",
"-68 646 OFFCURVE",
"-93 646 CURVE SMOOTH",
"-118 646 OFFCURVE",
"-139 625 OFFCURVE",
"-139 600 CURVE SMOOTH",
"-139 575 OFFCURVE",
"-118 554 OFFCURVE",
"-93 554 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = notequal;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"187 61 LINE",
"281 170 LINE",
"606 170 LINE",
"606 224 LINE",
"326 224 LINE",
"408 322 LINE",
"606 322 LINE",
"606 375 LINE",
"453 375 LINE",
"542 485 LINE",
"473 485 LINE",
"383 375 LINE",
"61 375 LINE",
"61 322 LINE",
"337 322 LINE",
"253 224 LINE",
"61 224 LINE",
"61 170 LINE",
"209 170 LINE",
"116 61 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
9 4 12 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
5 3 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
10 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = AE;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"164 0 LINE",
"164 10 LINE",
"129.438 15.317 OFFCURVE",
"90 23.008 OFFCURVE",
"90 58 CURVE SMOOTH",
"90 66 OFFCURVE",
"93.167 78 OFFCURVE",
"99.5 94 CURVE SMOOTH",
"105.833 110 OFFCURVE",
"118.667 133.333 OFFCURVE",
"138 164 CURVE SMOOTH",
"148.667 181.333 OFFCURVE",
"160.833 201.333 OFFCURVE",
"174.5 224 CURVE SMOOTH",
"188.167 246.667 OFFCURVE",
"201.667 267.667 OFFCURVE",
"215 287 CURVE",
"483 287 LINE",
"483 236.333 OFFCURVE",
"482.333 178.667 OFFCURVE",
"481 156 CURVE",
"481 118.544 OFFCURVE",
"480.84 58.408 OFFCURVE",
"468 43 CURVE SMOOTH",
"448 19 OFFCURVE",
"424.333 15.333 OFFCURVE",
"391 10 CURVE",
"391 0 LINE",
"967 0 LINE",
"1007 199 LINE",
"996 202 LINE",
"941.333 88.667 OFFCURVE",
"882 31.667 OFFCURVE",
"798 21 CURVE SMOOTH",
"759.333 15.667 OFFCURVE",
"721.667 15 OFFCURVE",
"699 15 CURVE SMOOTH",
"647 15 OFFCURVE",
"615.333 23.667 OFFCURVE",
"604 41 CURVE SMOOTH",
"593.333 57 OFFCURVE",
"593.333 101.333 OFFCURVE",
"592 144 CURVE SMOOTH",
"591.333 166 OFFCURVE",
"591 196.333 OFFCURVE",
"591 235 CURVE SMOOTH",
"591 273.667 OFFCURVE",
"591 314.667 OFFCURVE",
"591 358 CURVE",
"600.333 358 OFFCURVE",
"608 358 OFFCURVE",
"614 358 CURVE SMOOTH",
"620 358 OFFCURVE",
"625.667 358 OFFCURVE",
"631 358 CURVE SMOOTH",
"641.667 358 OFFCURVE",
"652 357.333 OFFCURVE",
"672 356 CURVE SMOOTH",
"710.667 354 OFFCURVE",
"741 343 OFFCURVE",
"763 323 CURVE SMOOTH",
"787 300.333 OFFCURVE",
"808.333 247.667 OFFCURVE",
"819 205 CURVE",
"831 205 LINE",
"831 520 LINE",
"819 520 LINE",
"802.531 443.143 OFFCURVE",
"785.178 400.475 OFFCURVE",
"706 382 CURVE SMOOTH",
"680.905 376.623 OFFCURVE",
"633.54 374 OFFCURVE",
"611 374 CURVE SMOOTH",
"602.333 374 OFFCURVE",
"595.667 374 OFFCURVE",
"591 374 CURVE",
"591 701 LINE",
"605.667 703.667 OFFCURVE",
"634 706 OFFCURVE",
"662 706 CURVE SMOOTH",
"706 706 OFFCURVE",
"742.333 703.833 OFFCURVE",
"771 699.5 CURVE SMOOTH",
"799.667 695.167 OFFCURVE",
"819.667 690.333 OFFCURVE",
"831 685 CURVE SMOOTH",
"877.667 662.333 OFFCURVE",
"911.667 617 OFFCURVE",
"965 549 CURVE",
"975 554 LINE",
"926 720 LINE",
"382 720 LINE",
"382 710 LINE",
"415.333 706 OFFCURVE",
"440.333 701 OFFCURVE",
"463 689 CURVE",
"416.667 620.094 OFFCURVE",
"330.121 492.062 OFFCURVE",
"273 407.5 CURVE SMOOTH",
"205 306.833 OFFCURVE",
"140.667 211.333 OFFCURVE",
"98 150 CURVE SMOOTH",
"74 116 OFFCURVE",
"54.167 90.333 OFFCURVE",
"38.5 73 CURVE SMOOTH",
"22.833 55.667 OFFCURVE",
"12.333 44.667 OFFCURVE",
"7 40 CURVE",
"3.667 37.333 OFFCURVE",
"-3.167 32.333 OFFCURVE",
"-13.5 25 CURVE SMOOTH",
"-23.833 17.667 OFFCURVE",
"-38 13 OFFCURVE",
"-56 11 CURVE",
"-56 0 LINE"
);
},
{
closed = 1;
nodes = (
"269.548 368.485 OFFCURVE",
"336.432 468.648 OFFCURVE",
"377 529.5 CURVE SMOOTH",
"423.667 599.5 OFFCURVE",
"463.333 657 OFFCURVE",
"478 677 CURVE",
"483 677 LINE",
"483 308 LINE",
"230 308 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
14 7 85 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
85 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
85 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
106 88 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
71 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
97 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
97 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
100 1 84 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
100 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
106 71 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1016;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = Oslash;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"196 52 LINE",
"256 13.333 OFFCURVE",
"326 -5 OFFCURVE",
"402 -5 CURVE SMOOTH",
"504.667 -5 OFFCURVE",
"598.833 32.333 OFFCURVE",
"667.5 99 CURVE SMOOTH",
"736.167 165.667 OFFCURVE",
"779 258.333 OFFCURVE",
"779 365 CURVE SMOOTH",
"779 485 OFFCURVE",
"727 596 OFFCURVE",
"631 664 CURVE",
"686 738 LINE",
"667 751 LINE",
"614 675 LINE",
"559.333 709.667 OFFCURVE",
"493.667 730 OFFCURVE",
"415 730 CURVE SMOOTH",
"311 730 OFFCURVE",
"213.5 694.833 OFFCURVE",
"143.5 631.5 CURVE SMOOTH",
"73.5 568.167 OFFCURVE",
"29 475.667 OFFCURVE",
"29 361 CURVE SMOOTH",
"29 231.667 OFFCURVE",
"88 128.333 OFFCURVE",
"180 63 CURVE",
"116 -21 LINE",
"135 -34 LINE"
);
},
{
closed = 1;
nodes = (
"328.667 10 OFFCURVE",
"271.667 40.667 OFFCURVE",
"229 98 CURVE",
"590 606 LINE",
"634 538 OFFCURVE",
"655 448 OFFCURVE",
"655 364 CURVE SMOOTH",
"655 280 OFFCURVE",
"634.333 191.833 OFFCURVE",
"593 124.5 CURVE SMOOTH",
"551.667 57.167 OFFCURVE",
"490 10 OFFCURVE",
"406 10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"173.333 178.333 OFFCURVE",
"153 266 OFFCURVE",
"153 358 CURVE SMOOTH",
"153 444.667 OFFCURVE",
"171.833 533.333 OFFCURVE",
"212.5 600 CURVE SMOOTH",
"253.167 666.667 OFFCURVE",
"316.333 713 OFFCURVE",
"403 713 CURVE SMOOTH",
"477.667 713 OFFCURVE",
"537 678 OFFCURVE",
"577 622 CURVE",
"216 113 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
29 14 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
32 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 32 22 32 38 32 54 32 70 32 86 32 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 32 117 32 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 40 122 40 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 40 25 40 41 40 57 40 73 40 89 40 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
49 14 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
29 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
49 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 808;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = infinity;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"215.667 121 OFFCURVE",
"259 150.333 OFFCURVE",
"305 209 CURVE SMOOTH",
"324 233 LINE",
"352 201 LINE SMOOTH",
"398 147.667 OFFCURVE",
"439.333 121 OFFCURVE",
"476 121 CURVE SMOOTH",
"554.606 121 OFFCURVE",
"606 192.854 OFFCURVE",
"606 285 CURVE SMOOTH",
"606 322.333 OFFCURVE",
"594.667 353.333 OFFCURVE",
"572 378 CURVE",
"550 404 OFFCURVE",
"523 417 OFFCURVE",
"491 417 CURVE SMOOTH",
"447 417 OFFCURVE",
"406.333 392 OFFCURVE",
"369 342 CURVE SMOOTH",
"342 306 LINE",
"317 336 LINE SMOOTH",
"272.333 390 OFFCURVE",
"229.333 417 OFFCURVE",
"188 417 CURVE SMOOTH",
"117.333 417 OFFCURVE",
"61 346.333 OFFCURVE",
"61 261 CURVE SMOOTH",
"61 183.344 OFFCURVE",
"107.934 121 OFFCURVE",
"175 121 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"133 163 OFFCURVE",
"98 202.667 OFFCURVE",
"98 256 CURVE SMOOTH",
"98 313.333 OFFCURVE",
"130.333 358 OFFCURVE",
"173 358 CURVE SMOOTH",
"205 358 OFFCURVE",
"242.333 332 OFFCURVE",
"285 280 CURVE SMOOTH",
"301 261 LINE",
"276 231 LINE SMOOTH",
"236.667 185.667 OFFCURVE",
"203.667 163 OFFCURVE",
"177 163 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"464.667 183 OFFCURVE",
"430.333 205.667 OFFCURVE",
"389 251 CURVE SMOOTH",
"365 277 LINE",
"385 302 LINE SMOOTH",
"426.333 352 OFFCURVE",
"461.333 377 OFFCURVE",
"490 377 CURVE SMOOTH",
"531.333 377 OFFCURVE",
"566 336 OFFCURVE",
"566 284 CURVE SMOOTH",
"566 224 OFFCURVE",
"534.667 183 OFFCURVE",
"492 183 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
218 47 234 47 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 47 25 47 41 47 57 47 73 47 89 47 105 47 121 47 137 47 153 47 169 47 185 47 201 47 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
6 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 35 229 35 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
32 3 26 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
12 3 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
38 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
50 3 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = plusminus;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"360 106 LINE",
"360 352 LINE",
"606 352 LINE",
"606 405 LINE",
"360 405 LINE",
"360 651 LINE",
"307 651 LINE",
"307 405 LINE",
"61 405 LINE",
"61 352 LINE",
"307 352 LINE",
"307 106 LINE"
);
},
{
closed = 1;
nodes = (
"606 0 LINE",
"606 53 LINE",
"61 53 LINE",
"61 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
2 5 3 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
14 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 3 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
12 3 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = lessequal;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"606 167 LINE",
"175 379 LINE",
"606 596 LINE",
"606 651 LINE",
"61 379 LINE",
"606 106 LINE"
);
},
{
closed = 1;
nodes = (
"606 0 LINE",
"606 53 LINE",
"61 53 LINE",
"61 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
1 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
2 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
4 8 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
6 3 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = greaterequal;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"606 379 LINE",
"61 651 LINE",
"61 590 LINE",
"492 379 LINE",
"61 162 LINE",
"61 106 LINE"
);
},
{
closed = 1;
nodes = (
"606 0 LINE",
"606 53 LINE",
"61 53 LINE",
"61 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
8 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
0 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
1 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
4 8 2 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
6 3 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = yen;
lastChange = "2021-01-02 00:26:26 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{276.846, 543.245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"353 0 LINE",
"353 7 LINE",
"331 11 OFFCURVE",
"304 15 OFFCURVE",
"290 37 CURVE SMOOTH",
"282 48 OFFCURVE",
"281 79 OFFCURVE",
"281 108 CURVE SMOOTH",
"281 258 LINE",
"295 279 OFFCURVE",
"373 398 OFFCURVE",
"396 434 CURVE SMOOTH",
"430 488 OFFCURVE",
"454 522 OFFCURVE",
"509 530 CURVE",
"509 537 LINE",
"337 537 LINE",
"337 530 LINE",
"367 526 OFFCURVE",
"400 522 OFFCURVE",
"400 492 CURVE SMOOTH",
"400 474 OFFCURVE",
"382 441 OFFCURVE",
"373 428 CURVE",
"356 397 OFFCURVE",
"296 304 OFFCURVE",
"273 270 CURVE",
"270 275 OFFCURVE",
"180 423 OFFCURVE",
"176 429 CURVE SMOOTH",
"160 456 OFFCURVE",
"143 486 OFFCURVE",
"143 498 CURVE SMOOTH",
"143 523 OFFCURVE",
"178 528 OFFCURVE",
"207 530 CURVE",
"207 537 LINE",
"-19 537 LINE",
"-19 530 LINE",
"22 528 OFFCURVE",
"49 480 OFFCURVE",
"81 431 CURVE SMOOTH",
"94 411 OFFCURVE",
"129 354 OFFCURVE",
"149 322 CURVE SMOOTH",
"165 296 OFFCURVE",
"194 247 OFFCURVE",
"200 239 CURVE",
"200 184 OFFCURVE",
"198 147 OFFCURVE",
"198 119 CURVE SMOOTH",
"198 94 OFFCURVE",
"198 48 OFFCURVE",
"188 38 CURVE",
"166 13 OFFCURVE",
"149 10 OFFCURVE",
"123 7 CURVE",
"123 0 LINE"
);
},
{
closed = 1;
nodes = (
"465 210 LINE",
"465 249 LINE",
"55 249 LINE",
"55 210 LINE"
);
},
{
closed = 1;
nodes = (
"465 96 LINE",
"465 135 LINE",
"55 135 LINE",
"55 96 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
75 6 41 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
75 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
16 41 75 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
75 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
58 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
41 4 47 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
16 58 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
45 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
70 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 484;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = mu;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"58.333 -246 OFFCURVE",
"76 -228.667 OFFCURVE",
"76 -194 CURVE SMOOTH",
"76 -176.301 OFFCURVE",
"61.907 -145.163 OFFCURVE",
"59 -119 CURVE",
"63.164 -77.36 OFFCURVE",
"80.256 63.279 OFFCURVE",
"119 159 CURVE",
"128 159 LINE",
"125.333 144.333 OFFCURVE",
"124 132 OFFCURVE",
"124 120 CURVE SMOOTH",
"124 38.667 OFFCURVE",
"160 -4 OFFCURVE",
"216 -4 CURVE SMOOTH",
"298.667 -4 OFFCURVE",
"369.333 56.333 OFFCURVE",
"408 151 CURVE",
"411 151 LINE",
"408.333 140.333 OFFCURVE",
"406 119 OFFCURVE",
"406 107 CURVE SMOOTH",
"406 42.687 OFFCURVE",
"422.688 -3 OFFCURVE",
"481 -3 CURVE SMOOTH",
"509 -3 OFFCURVE",
"536 4.333 OFFCURVE",
"560 35 CURVE SMOOTH",
"585.333 67 OFFCURVE",
"598 112 OFFCURVE",
"598 184 CURVE",
"588 184 LINE",
"573.333 105.333 OFFCURVE",
"542 76 OFFCURVE",
"490 76 CURVE SMOOTH",
"459.333 76 OFFCURVE",
"426 101.333 OFFCURVE",
"426 164 CURVE SMOOTH",
"426 172.367 OFFCURVE",
"439.684 201.272 OFFCURVE",
"451.5 228.5 CURVE SMOOTH",
"466.833 263.833 OFFCURVE",
"487 313 OFFCURVE",
"507 373 CURVE SMOOTH",
"520.062 416.541 OFFCURVE",
"541.434 482 OFFCURVE",
"484 482 CURVE SMOOTH",
"435.225 482 OFFCURVE",
"426.184 427.524 OFFCURVE",
"416 380 CURVE SMOOTH",
"411.166 359.055 OFFCURVE",
"394.609 267.827 OFFCURVE",
"392 260 CURVE",
"372.458 193 OFFCURVE",
"306.552 79 OFFCURVE",
"234 79 CURVE SMOOTH",
"187.333 79 OFFCURVE",
"150 108 OFFCURVE",
"150 160 CURVE SMOOTH",
"150 174 OFFCURVE",
"153.333 190.333 OFFCURVE",
"160 209 CURVE SMOOTH",
"168.667 235.667 OFFCURVE",
"178.333 260.5 OFFCURVE",
"189 283.5 CURVE SMOOTH",
"199.667 306.5 OFFCURVE",
"209.667 333.333 OFFCURVE",
"219 364 CURVE SMOOTH",
"235.549 413.648 OFFCURVE",
"254.364 483 OFFCURVE",
"200 483 CURVE SMOOTH",
"148.354 483 OFFCURVE",
"139.85 419.533 OFFCURVE",
"130 367 CURVE",
"126.422 340.759 OFFCURVE",
"111.178 212.533 OFFCURVE",
"108 203 CURVE",
"105.275 186.651 OFFCURVE",
"55.484 35.196 OFFCURVE",
"43 -6 CURVE SMOOTH",
"16.333 -99.333 OFFCURVE",
"1 -161.667 OFFCURVE",
"1 -203 CURVE SMOOTH",
"1 -233.667 OFFCURVE",
"19.667 -246 OFFCURVE",
"41 -246 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 93 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 3 values pushed */
35 83 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
35 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
93 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
6 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 35 229 35 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
90 93 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
17 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
66 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
60 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
86 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
86 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
98 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
98 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 4 118 4 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
90 66 45 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 630;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = partialdiff;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"367.667 -12 OFFCURVE",
"449.333 24.333 OFFCURVE",
"514 97 CURVE SMOOTH",
"580 171 OFFCURVE",
"613 263.333 OFFCURVE",
"613 374 CURVE SMOOTH",
"613 432 OFFCURVE",
"602.333 491 OFFCURVE",
"581 551 CURVE SMOOTH",
"560.333 608.333 OFFCURVE",
"532.667 655 OFFCURVE",
"498 691 CURVE SMOOTH",
"434 755.667 OFFCURVE",
"347 788 OFFCURVE",
"237 788 CURVE SMOOTH",
"223 788 LINE",
"223 758 LINE",
"235 758 LINE SMOOTH",
"301 758 OFFCURVE",
"360 729 OFFCURVE",
"412 671 CURVE SMOOTH",
"443.333 637 OFFCURVE",
"468.333 585 OFFCURVE",
"487 515 CURVE",
"454.333 535 OFFCURVE",
"418.333 545 OFFCURVE",
"379 545 CURVE SMOOTH",
"199 545 OFFCURVE",
"42 388.333 OFFCURVE",
"42 207 CURVE SMOOTH",
"42 68.426 OFFCURVE",
"130.423 -12 OFFCURVE",
"269 -12 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"193.667 15 OFFCURVE",
"147 80 OFFCURVE",
"147 188 CURVE SMOOTH",
"147 271.333 OFFCURVE",
"171.333 346.333 OFFCURVE",
"220 413 CURVE SMOOTH",
"269.333 481 OFFCURVE",
"323.333 515 OFFCURVE",
"382 515 CURVE SMOOTH",
"458 515 OFFCURVE",
"503 457 OFFCURVE",
"503 357 CURVE SMOOTH",
"503 264.333 OFFCURVE",
"480 184 OFFCURVE",
"434 116 CURVE SMOOTH",
"388.667 48.667 OFFCURVE",
"334.333 15 OFFCURVE",
"271 15 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
0 5 14 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
37 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 37 122 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 37 25 37 41 37 57 37 73 37 89 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 30 22 30 38 30 54 30 70 30 86 30 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 30 117 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
21 2 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
2 2 34 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 2 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 651;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = summation;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"583 -8 LINE",
"545 -8 LINE",
"544 -18 LINE",
"538 -56.667 OFFCURVE",
"527 -80.333 OFFCURVE",
"511 -89 CURVE SMOOTH",
"494.333 -98.333 OFFCURVE",
"457 -103 OFFCURVE",
"399 -103 CURVE SMOOTH",
"104 -103 LINE",
"405 370 LINE",
"179 720 LINE",
"346 720 LINE SMOOTH",
"425.333 720 OFFCURVE",
"472.333 716 OFFCURVE",
"487 708 CURVE SMOOTH",
"502.333 700 OFFCURVE",
"514.333 672.667 OFFCURVE",
"523 626 CURVE",
"524 617 LINE",
"563 617 LINE",
"547 758 LINE",
"55 758 LINE",
"55 724 LINE",
"308 337 LINE",
"30 -103 LINE",
"30 -179 LINE",
"241 -179 LINE SMOOTH",
"250.333 -179 OFFCURVE",
"276.333 -180 OFFCURVE",
"319 -182 CURVE SMOOTH",
"361.667 -184.667 OFFCURVE",
"400.333 -186 OFFCURVE",
"431 -186 CURVE SMOOTH",
"444.333 -186 OFFCURVE",
"462.167 -186.5 OFFCURVE",
"484.5 -187.5 CURVE SMOOTH",
"506.833 -188.5 OFFCURVE",
"534 -189.667 OFFCURVE",
"566 -191 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
16 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
31 4 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
28 3 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 636;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = product;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"318 -179 LINE",
"318 -148 LINE",
"311 -148 LINE SMOOTH",
"243 -148 OFFCURVE",
"228 -130 OFFCURVE",
"228 -50 CURVE SMOOTH",
"228 720 LINE",
"572 720 LINE",
"572 -50 LINE SMOOTH",
"572 -130 OFFCURVE",
"557 -148 OFFCURVE",
"489 -148 CURVE SMOOTH",
"481 -148 LINE",
"481 -179 LINE",
"762 -179 LINE",
"762 -148 LINE",
"754 -148 LINE SMOOTH",
"686 -148 OFFCURVE",
"671 -130 OFFCURVE",
"671 -50 CURVE SMOOTH",
"671 629 LINE SMOOTH",
"671 709 OFFCURVE",
"686 727 OFFCURVE",
"754 727 CURVE SMOOTH",
"762 727 LINE",
"762 758 LINE",
"38 758 LINE",
"38 727 LINE",
"46 727 LINE SMOOTH",
"114 727 OFFCURVE",
"129 709 OFFCURVE",
"129 629 CURVE SMOOTH",
"129 -50 LINE SMOOTH",
"129 -130 OFFCURVE",
"114 -148 OFFCURVE",
"46 -148 CURVE SMOOTH",
"38 -148 LINE",
"38 -179 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 4 values pushed */
14 7 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
6 2 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
19 2 18 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 799;
}
);
note = product;
unicode = 220F;
},
{
glyphname = pi;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"136.667 -3 OFFCURVE",
"152.333 1.333 OFFCURVE",
"167 20 CURVE SMOOTH",
"193.621 55.494 OFFCURVE",
"211.243 114.537 OFFCURVE",
"236 185 CURVE SMOOTH",
"254.815 243.795 OFFCURVE",
"288.414 360.793 OFFCURVE",
"297 398 CURVE",
"434 390 LINE",
"414.287 321.003 OFFCURVE",
"376 176.855 OFFCURVE",
"376 111 CURVE SMOOTH",
"376 54.907 OFFCURVE",
"395.566 -2 OFFCURVE",
"467 -2 CURVE SMOOTH",
"497.667 -2 OFFCURVE",
"522.333 6.333 OFFCURVE",
"545 37 CURVE SMOOTH",
"562.333 59.667 OFFCURVE",
"579.667 96.333 OFFCURVE",
"589 171 CURVE",
"577 171 LINE",
"565.592 104.834 OFFCURVE",
"534.081 77 OFFCURVE",
"498 77 CURVE SMOOTH",
"468.667 77 OFFCURVE",
"446 102 OFFCURVE",
"446 166 CURVE SMOOTH",
"446 225.665 OFFCURVE",
"479.104 345.312 OFFCURVE",
"493 387 CURVE",
"499.667 386.333 OFFCURVE",
"506 386 OFFCURVE",
"512 386 CURVE SMOOTH",
"518 386 OFFCURVE",
"523.667 386 OFFCURVE",
"529 386 CURVE SMOOTH",
"564.333 386 OFFCURVE",
"585.333 387.333 OFFCURVE",
"592 390 CURVE",
"598 392.667 OFFCURVE",
"607 403.833 OFFCURVE",
"619 423.5 CURVE SMOOTH",
"631 443.167 OFFCURVE",
"642.667 467 OFFCURVE",
"654 495 CURVE",
"646 499 LINE",
"631.333 483 OFFCURVE",
"628 477.667 OFFCURVE",
"608 471 CURVE SMOOTH",
"589.333 464.333 OFFCURVE",
"550.667 465 OFFCURVE",
"524 465 CURVE SMOOTH",
"457.444 465 OFFCURVE",
"330.115 472 OFFCURVE",
"281 472 CURVE SMOOTH",
"209.078 472 OFFCURVE",
"143.339 463.862 OFFCURVE",
"101 403 CURVE SMOOTH",
"77 369.667 OFFCURVE",
"71 332 OFFCURVE",
"71 300 CURVE SMOOTH",
"71 286.667 OFFCURVE",
"72.167 274.833 OFFCURVE",
"74.5 264.5 CURVE SMOOTH",
"76.833 254.167 OFFCURVE",
"78.667 245.333 OFFCURVE",
"80 238 CURVE",
"89 238 LINE",
"92.143 310.293 OFFCURVE",
"133.457 391.123 OFFCURVE",
"231 396 CURVE",
"245.667 397.333 OFFCURVE",
"256 398 OFFCURVE",
"262 398 CURVE SMOOTH",
"268.667 398 OFFCURVE",
"273.667 398 OFFCURVE",
"277 398 CURVE",
"247.037 262.014 OFFCURVE",
"206.433 172.163 OFFCURVE",
"152 112 CURVE",
"120.302 80.302 OFFCURVE",
"81 83.07 OFFCURVE",
"81 35 CURVE SMOOTH",
"81 12.333 OFFCURVE",
"96.667 -3 OFFCURVE",
"122 -3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
85 5 65 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
85 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
106 65 122 65 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 65 25 65 41 65 57 65 73 65 89 65 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
70 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
70 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
29 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 29 121 29 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 29 24 29 40 29 56 29 72 29 88 29 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
82 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 82 23 82 39 82 55 82 71 82 87 82 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 82 118 82 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
94 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
90 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
90 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
94 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
92 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 680;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = integral;
lastChange = "2021-01-02 00:12:14 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"189.667 -179 OFFCURVE",
"235.667 -145.333 OFFCURVE",
"271 -78 CURVE SMOOTH",
"299.667 -26 OFFCURVE",
"311 79 OFFCURVE",
"311 237 CURVE SMOOTH",
"311 592 LINE SMOOTH",
"311 643.333 OFFCURVE",
"316.667 683 OFFCURVE",
"328 711 CURVE SMOOTH",
"339.333 737 OFFCURVE",
"356.333 750 OFFCURVE",
"379 750 CURVE SMOOTH",
"392.333 750 OFFCURVE",
"403.667 745.667 OFFCURVE",
"413 737 CURVE",
"395 727.667 OFFCURVE",
"386 712.333 OFFCURVE",
"386 691 CURVE SMOOTH",
"386 654.333 OFFCURVE",
"403.667 636 OFFCURVE",
"439 636 CURVE SMOOTH",
"468.333 636 OFFCURVE",
"492 664.333 OFFCURVE",
"492 699 CURVE SMOOTH",
"492 745.667 OFFCURVE",
"451.667 781 OFFCURVE",
"401 781 CURVE SMOOTH",
"349 781 OFFCURVE",
"307 753 OFFCURVE",
"275 697 CURVE SMOOTH",
"240.333 638.333 OFFCURVE",
"221 528 OFFCURVE",
"227 366 CURVE SMOOTH",
"227 48 LINE SMOOTH",
"228 -26 OFFCURVE",
"221.667 -77.667 OFFCURVE",
"211 -107 CURVE SMOOTH",
"200.333 -137 OFFCURVE",
"182 -152 OFFCURVE",
"156 -152 CURVE SMOOTH",
"144 -152 OFFCURVE",
"133 -147 OFFCURVE",
"123 -137 CURVE",
"141.667 -124.333 OFFCURVE",
"151 -108.667 OFFCURVE",
"151 -90 CURVE SMOOTH",
"151 -56 OFFCURVE",
"133 -39 OFFCURVE",
"97 -39 CURVE SMOOTH",
"66.333 -39 OFFCURVE",
"42 -65.667 OFFCURVE",
"42 -99 CURVE SMOOTH",
"42 -145.667 OFFCURVE",
"79.667 -179 OFFCURVE",
"133 -179 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
15 6 38 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
25 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 25 122 25 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 25 25 25 41 25 57 25 73 25 89 25 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
23 30 25 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
4 4 10 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
33 4 27 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
23 27 33 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 534;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = ordfeminine;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"124.667 390 OFFCURVE",
"147 414 OFFCURVE",
"159 430 CURVE",
"162 430 LINE",
"162 403.333 OFFCURVE",
"182.667 390 OFFCURVE",
"208 390 CURVE SMOOTH",
"238.667 390 OFFCURVE",
"259.333 415.333 OFFCURVE",
"262 446 CURVE",
"255 446 LINE",
"252.333 436.667 OFFCURVE",
"245.667 427 OFFCURVE",
"231 427 CURVE SMOOTH",
"219 427 OFFCURVE",
"208 434.333 OFFCURVE",
"208 461 CURVE SMOOTH",
"208 483 OFFCURVE",
"208.167 502.833 OFFCURVE",
"208.5 520.5 CURVE SMOOTH",
"208.833 538.167 OFFCURVE",
"209 558.667 OFFCURVE",
"209 582 CURVE SMOOTH",
"209 592.667 OFFCURVE",
"208.667 607.667 OFFCURVE",
"206 613 CURVE",
"199.333 623.667 OFFCURVE",
"178.667 637 OFFCURVE",
"160 637 CURVE SMOOTH",
"141.333 637 OFFCURVE",
"99 620 OFFCURVE",
"63 600 CURVE",
"49.667 593.333 OFFCURVE",
"30 582.333 OFFCURVE",
"30 565 CURVE SMOOTH",
"30 553 OFFCURVE",
"39.667 543 OFFCURVE",
"53 543 CURVE SMOOTH",
"67.667 543 OFFCURVE",
"80 553.333 OFFCURVE",
"80 564 CURVE SMOOTH",
"80 587 LINE SMOOTH",
"80 595 OFFCURVE",
"100.667 609 OFFCURVE",
"122 609 CURVE SMOOTH",
"136.667 609 OFFCURVE",
"146.667 606 OFFCURVE",
"152 600 CURVE SMOOTH",
"157.333 594 OFFCURVE",
"160 590.333 OFFCURVE",
"160 589 CURVE SMOOTH",
"160 537 LINE",
"153.333 533.667 OFFCURVE",
"143 528.5 OFFCURVE",
"129 521.5 CURVE SMOOTH",
"115 514.5 OFFCURVE",
"97.333 505 OFFCURVE",
"76 493 CURVE SMOOTH",
"53.333 479.667 OFFCURVE",
"35 461.333 OFFCURVE",
"35 440 CURVE SMOOTH",
"35 404 OFFCURVE",
"63.333 390 OFFCURVE",
"86 390 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"94.333 426 OFFCURVE",
"82 439.667 OFFCURVE",
"82 457 CURVE SMOOTH",
"82 487.169 OFFCURVE",
"124.19 506.095 OFFCURVE",
"160 524 CURVE",
"160 451 LINE SMOOTH",
"160 446.333 OFFCURVE",
"158.333 442.333 OFFCURVE",
"155 439 CURVE SMOOTH",
"144.333 428.333 OFFCURVE",
"129 426 OFFCURVE",
"113 426 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
28 5 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
7 5 55 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
49 55 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
4 3 52 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 248;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"219.243 390 OFFCURVE",
"276 447.363 OFFCURVE",
"276 516 CURVE SMOOTH",
"276 591.363 OFFCURVE",
"212.696 637 OFFCURVE",
"152 637 CURVE SMOOTH",
"78.082 637 OFFCURVE",
"24 578.857 OFFCURVE",
"24 516 CURVE SMOOTH",
"24 435.951 OFFCURVE",
"88.319 390 OFFCURVE",
"151 390 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"98.543 403 OFFCURVE",
"78 454.669 OFFCURVE",
"78 513 CURVE SMOOTH",
"78 564.529 OFFCURVE",
"104.871 624 OFFCURVE",
"149 624 CURVE SMOOTH",
"201.796 624 OFFCURVE",
"221 564.899 OFFCURVE",
"221 517 CURVE SMOOTH",
"221 469.45 OFFCURVE",
"201.029 403 OFFCURVE",
"152 403 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
20 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 20 122 20 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 20 25 20 41 20 57 20 73 20 89 20 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
30 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 30 22 30 38 30 54 30 70 30 86 30 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 30 117 30 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 280;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = Omegagreek;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"351 0 LINE",
"351 72 LINE",
"244.333 150.667 OFFCURVE",
"191 263.667 OFFCURVE",
"191 411 CURVE SMOOTH",
"191 511 OFFCURVE",
"214.333 592.333 OFFCURVE",
"261 655 CURVE SMOOTH",
"308.333 718.333 OFFCURVE",
"369 750 OFFCURVE",
"443 750 CURVE SMOOTH",
"589.667 750 OFFCURVE",
"695 609.667 OFFCURVE",
"695 411 CURVE SMOOTH",
"695 265 OFFCURVE",
"642 152 OFFCURVE",
"536 72 CURVE",
"536 0 LINE",
"830 0 LINE",
"845 140 LINE",
"807 140 LINE",
"805 130 LINE SMOOTH",
"801 106.667 OFFCURVE",
"789.667 91 OFFCURVE",
"771 83 CURVE SMOOTH",
"752.333 75.667 OFFCURVE",
"716.667 72 OFFCURVE",
"664 72 CURVE SMOOTH",
"579 72 LINE",
"727 163.333 OFFCURVE",
"801 275 OFFCURVE",
"801 407 CURVE SMOOTH",
"801 500.333 OFFCURVE",
"772 583.333 OFFCURVE",
"714 656 CURVE SMOOTH",
"647.333 738.667 OFFCURVE",
"557 780 OFFCURVE",
"443 780 CURVE SMOOTH",
"329 780 OFFCURVE",
"238.667 738.667 OFFCURVE",
"172 656 CURVE SMOOTH",
"114 583.333 OFFCURVE",
"85 500.333 OFFCURVE",
"85 407 CURVE SMOOTH",
"85 273.667 OFFCURVE",
"159.333 162 OFFCURVE",
"308 72 CURVE",
"222 72 LINE SMOOTH",
"170 72 OFFCURVE",
"134 75.667 OFFCURVE",
"114 83 CURVE",
"95.333 91 OFFCURVE",
"84.333 106.667 OFFCURVE",
"81 130 CURVE",
"80 140 LINE",
"42 140 LINE",
"57 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
0 17 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
12 17 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 24 117 24 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
31 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 31 122 31 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 31 25 31 41 31 57 31 73 31 89 31 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
6 2 28 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
18 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 886;
}
);
note = Omegagreek;
unicode = 03A9;
},
{
glyphname = ae;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"202.873 -1 OFFCURVE",
"262.509 54.68 OFFCURVE",
"305 117 CURVE",
"338.8 46.583 OFFCURVE",
"409.398 -1 OFFCURVE",
"496 -1 CURVE SMOOTH",
"599.172 -1 OFFCURVE",
"670.745 80.097 OFFCURVE",
"684 153 CURVE",
"676 155 LINE",
"660 105.667 OFFCURVE",
"605.667 66 OFFCURVE",
"539 66 CURVE SMOOTH",
"422.829 66 OFFCURVE",
"358 153.956 OFFCURVE",
"358 276 CURVE SMOOTH",
"358 284 OFFCURVE",
"358.167 291.667 OFFCURVE",
"358.5 299 CURVE SMOOTH",
"358.833 306.333 OFFCURVE",
"359 312.667 OFFCURVE",
"359 318 CURVE",
"674 318 LINE",
"670 424.667 OFFCURVE",
"598.667 483 OFFCURVE",
"484 483 CURVE SMOOTH",
"433.333 483 OFFCURVE",
"389.667 464 OFFCURVE",
"355 432 CURVE",
"343 462.667 OFFCURVE",
"306.667 483 OFFCURVE",
"272 483 CURVE SMOOTH",
"234.838 483 OFFCURVE",
"149.832 442.519 OFFCURVE",
"90 408 CURVE",
"63.323 391.327 OFFCURVE",
"31 375.174 OFFCURVE",
"31 343 CURVE SMOOTH",
"31 323 OFFCURVE",
"48.667 305 OFFCURVE",
"70 305 CURVE SMOOTH",
"92.667 305 OFFCURVE",
"116 322.333 OFFCURVE",
"116 341 CURVE SMOOTH",
"116 386 LINE SMOOTH",
"116 407.119 OFFCURVE",
"161.618 437 OFFCURVE",
"200 437 CURVE SMOOTH",
"245.644 437 OFFCURVE",
"278 409.312 OFFCURVE",
"278 391 CURVE SMOOTH",
"278 287 LINE",
"250.027 270.216 OFFCURVE",
"163.911 226.898 OFFCURVE",
"115 195 CURVE SMOOTH",
"72.333 167 OFFCURVE",
"38 131.667 OFFCURVE",
"38 93 CURVE SMOOTH",
"38 27.614 OFFCURVE",
"81.887 -1 OFFCURVE",
"129 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"142.333 59 OFFCURVE",
"116 93.333 OFFCURVE",
"116 128 CURVE SMOOTH",
"116 196.486 OFFCURVE",
"216.601 226.656 OFFCURVE",
"278 271 CURVE",
"278 103 LINE",
"255.333 69.667 OFFCURVE",
"223.667 59 OFFCURVE",
"181 59 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"360 382.263 OFFCURVE",
"412.615 466 OFFCURVE",
"485 466 CURVE SMOOTH",
"542.333 466 OFFCURVE",
"576 425.333 OFFCURVE",
"576 376 CURVE SMOOTH",
"576 357.333 OFFCURVE",
"571.333 350.667 OFFCURVE",
"562 340 CURVE",
"548.667 334.667 OFFCURVE",
"531 334 OFFCURVE",
"511 334 CURVE SMOOTH",
"360 334 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
99 5 58 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
99 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
9 5 104 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
13 7 78 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
19 104 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 13 values pushed */
6 99 22 99 38 99 54 99 70 99 86 99 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 99 117 99 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
99 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
104 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
68 104 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
85 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
85 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
106 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
63 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
73 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 4 118 4 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
12 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
19 22 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
44 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 44 121 44 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 44 24 44 40 44 56 44 72 44 88 44 104 44 120 44 136 44 152 44 168 44 184 44 200 44 216 44 232 44 248 44 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 44 24 44 40 44 56 44 72 44 88 44 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
68 63 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
96 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
104 63 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 687;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = oslash;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"119 40 LINE",
"163 9.333 OFFCURVE",
"212.667 -3 OFFCURVE",
"258 -3 CURVE SMOOTH",
"384.916 -3 OFFCURVE",
"492 108.553 OFFCURVE",
"492 245 CURVE SMOOTH",
"492 331.667 OFFCURVE",
"455.667 394.333 OFFCURVE",
"405 433 CURVE",
"464 514 LINE",
"449 524 LINE",
"392 442 LINE",
"352 468.667 OFFCURVE",
"304 483 OFFCURVE",
"260 483 CURVE SMOOTH",
"120.557 483 OFFCURVE",
"19 371.962 OFFCURVE",
"19 245 CURVE SMOOTH",
"19 153 OFFCURVE",
"56.333 90.333 OFFCURVE",
"107 49 CURVE",
"40 -40 LINE",
"55 -51 LINE"
);
},
{
closed = 1;
nodes = (
"208.333 11 OFFCURVE",
"172 36.333 OFFCURVE",
"148 75 CURVE",
"369 388 LINE",
"390.333 344 OFFCURVE",
"400 291.333 OFFCURVE",
"400 246 CURVE SMOOTH",
"400 146.608 OFFCURVE",
"358.938 11 OFFCURVE",
"259 11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"120.667 132 OFFCURVE",
"111 181.667 OFFCURVE",
"111 239 CURVE SMOOTH",
"111 347.651 OFFCURVE",
"164.213 467 OFFCURVE",
"253 467 CURVE SMOOTH",
"303.667 467 OFFCURVE",
"337.333 440.333 OFFCURVE",
"360 403 CURVE",
"140 90 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
39 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 39 122 39 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 39 25 39 41 39 57 39 73 39 89 39 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
31 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 31 22 31 38 31 54 31 70 31 86 31 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 31 117 31 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
29 14 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
48 14 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
29 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
48 19 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 511;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = questiondown;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"273 -3 LINE",
"273 151 LINE",
"250.333 148.333 OFFCURVE",
"226.333 147 OFFCURVE",
"217 147 CURVE SMOOTH",
"149.003 147 OFFCURVE",
"92 166.572 OFFCURVE",
"92 248 CURVE SMOOTH",
"92 310.283 OFFCURVE",
"116.457 337.637 OFFCURVE",
"171 354 CURVE SMOOTH",
"187 359.333 OFFCURVE",
"203.5 363.5 OFFCURVE",
"220.5 366.5 CURVE SMOOTH",
"237.5 369.5 OFFCURVE",
"254.667 372.667 OFFCURVE",
"272 376 CURVE",
"272 551 LINE",
"254 551 LINE",
"254 470 LINE",
"174 454 OFFCURVE",
"131.667 442.333 OFFCURVE",
"105 417 CURVE SMOOTH",
"79.796 394.316 OFFCURVE",
"72 312.227 OFFCURVE",
"72 271 CURVE SMOOTH",
"72 209.579 OFFCURVE",
"79.226 129.176 OFFCURVE",
"126 85 CURVE SMOOTH",
"160.667 51.667 OFFCURVE",
"196 44 OFFCURVE",
"256 44 CURVE",
"256 -3 LINE"
);
},
{
closed = 1;
nodes = (
"284.667 608 OFFCURVE",
"310 634.333 OFFCURVE",
"310 669 CURVE SMOOTH",
"310 703.667 OFFCURVE",
"284.667 728 OFFCURVE",
"250 728 CURVE SMOOTH",
"215.333 728 OFFCURVE",
"191 705.667 OFFCURVE",
"191 671 CURVE SMOOTH",
"191 636.333 OFFCURVE",
"215.333 608 OFFCURVE",
"250 608 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
21 40 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
106 6 122 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 6 25 6 41 6 57 6 73 6 89 6 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
6 21 22 21 38 21 54 21 70 21 86 21 102 21 118 21 134 21 150 21 166 21 182 21 198 21 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 21 229 21 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
16 4 48 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
9 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 9 121 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 9 24 9 40 9 56 9 72 9 88 9 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 383;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = exclamdown;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"177.088 0 OFFCURVE",
"210 95.812 OFFCURVE",
"210 150 CURVE",
"206.871 157.823 OFFCURVE",
"191.676 198.409 OFFCURVE",
"182 240.5 CURVE SMOOTH",
"168.667 298.5 OFFCURVE",
"155 387.667 OFFCURVE",
"151 521 CURVE",
"139 521 LINE",
"135 390.333 OFFCURVE",
"123 301.5 OFFCURVE",
"111 243.5 CURVE SMOOTH",
"102.236 201.14 OFFCURVE",
"88.36 158.72 OFFCURVE",
"84 150 CURVE",
"84 96.427 OFFCURVE",
"116.901 0 OFFCURVE",
"146 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"180.667 608 OFFCURVE",
"206 634.333 OFFCURVE",
"206 669 CURVE SMOOTH",
"206 703.667 OFFCURVE",
"180.667 728 OFFCURVE",
"146 728 CURVE SMOOTH",
"111.333 728 OFFCURVE",
"87 705.667 OFFCURVE",
"87 671 CURVE SMOOTH",
"87 636.333 OFFCURVE",
"111.333 608 OFFCURVE",
"146 608 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 13 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 0 117 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
28 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
9 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 9 121 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 9 24 9 40 9 56 9 72 9 88 9 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 303;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = logicalnot;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"570 55 LINE",
"570 300 LINE",
"123 300 LINE",
"123 261 LINE",
"527 261 LINE",
"527 55 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
1 5 4 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
2 3 3 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = radical;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"505 -180 LINE",
"845 803 LINE",
"797 803 LINE",
"485 -98 LINE",
"231 365 LINE",
"61 266 LINE",
"83 226 LINE",
"188 284 LINE",
"442 -180 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
6 2 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 894;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = florin;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"80.407 -200 OFFCURVE",
"149.987 -80.742 OFFCURVE",
"179 15 CURVE SMOOTH",
"200.333 85.667 OFFCURVE",
"213 137.5 OFFCURVE",
"225 191.5 CURVE SMOOTH",
"234.031 232.141 OFFCURVE",
"252.104 321.431 OFFCURVE",
"266 379 CURVE",
"402 379 LINE",
"413 413 LINE",
"273 413 LINE",
"280.893 449.833 OFFCURVE",
"292.771 511.391 OFFCURVE",
"309.5 556 CURVE SMOOTH",
"328.68 607.148 OFFCURVE",
"359.296 659 OFFCURVE",
"403 659 CURVE SMOOTH",
"444.333 659 OFFCURVE",
"457.333 627.667 OFFCURVE",
"472 581 CURVE",
"482.667 577 OFFCURVE",
"488.333 574 OFFCURVE",
"507 574 CURVE SMOOTH",
"527 574 OFFCURVE",
"537 592 OFFCURVE",
"537 612 CURVE SMOOTH",
"537 654.667 OFFCURVE",
"496 678 OFFCURVE",
"424 678 CURVE SMOOTH",
"294.562 678 OFFCURVE",
"218.368 562.579 OFFCURVE",
"190 413 CURVE",
"94 413 LINE",
"85 382 LINE",
"182 382 LINE",
"176.667 346 OFFCURVE",
"167 296.333 OFFCURVE",
"155 239 CURVE SMOOTH",
"144.986 191.157 OFFCURVE",
"125.901 105.096 OFFCURVE",
"114 51 CURVE SMOOTH",
"90.873 -53.071 OFFCURVE",
"60.484 -178 OFFCURVE",
"3 -178 CURVE SMOOTH",
"-17 -178 OFFCURVE",
"-30 -160.667 OFFCURVE",
"-38 -138 CURVE SMOOTH",
"-44.667 -118 OFFCURVE",
"-58 -111 OFFCURVE",
"-74 -111 CURVE SMOOTH",
"-91.333 -111 OFFCURVE",
"-106 -124.667 OFFCURVE",
"-106 -142 CURVE SMOOTH",
"-106 -180.368 OFFCURVE",
"-62.654 -200 OFFCURVE",
"-24 -200 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
21 1 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
48 2 45 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 538;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = approxequal;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"503.333 87 OFFCURVE",
"536.667 102.667 OFFCURVE",
"564 134 CURVE SMOOTH",
"592 166 OFFCURVE",
"606 204 OFFCURVE",
"606 248 CURVE SMOOTH",
"606 258 LINE",
"568 258 LINE",
"568 252 LINE SMOOTH",
"568 227.333 OFFCURVE",
"558.667 203.667 OFFCURVE",
"540 181 CURVE SMOOTH",
"521.333 159 OFFCURVE",
"501.667 148 OFFCURVE",
"481 148 CURVE SMOOTH",
"457 148 OFFCURVE",
"416.667 165.333 OFFCURVE",
"360 200 CURVE SMOOTH",
"323 223 LINE SMOOTH",
"267.667 256.333 OFFCURVE",
"225.667 273 OFFCURVE",
"197 273 CURVE SMOOTH",
"159.667 273 OFFCURVE",
"127.333 257 OFFCURVE",
"100 225 CURVE SMOOTH",
"74 194.333 OFFCURVE",
"61 156.333 OFFCURVE",
"61 111 CURVE SMOOTH",
"61 102 LINE",
"99 102 LINE",
"99 112 LINE SMOOTH",
"99 136.667 OFFCURVE",
"108.333 159.333 OFFCURVE",
"127 180 CURVE SMOOTH",
"146.333 201.333 OFFCURVE",
"166.667 212 OFFCURVE",
"188 212 CURVE SMOOTH",
"212.667 212 OFFCURVE",
"251.667 194.667 OFFCURVE",
"305 160 CURVE SMOOTH",
"343 136 LINE SMOOTH",
"393.667 103.333 OFFCURVE",
"434 87 OFFCURVE",
"464 87 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"503.333 273 OFFCURVE",
"536.667 288.667 OFFCURVE",
"564 320 CURVE SMOOTH",
"592 352 OFFCURVE",
"606 390 OFFCURVE",
"606 434 CURVE SMOOTH",
"606 443 LINE",
"568 443 LINE",
"568 438 LINE SMOOTH",
"568 388.667 OFFCURVE",
"522.333 333 OFFCURVE",
"481 333 CURVE SMOOTH",
"457.667 333 OFFCURVE",
"417.333 350.667 OFFCURVE",
"360 386 CURVE SMOOTH",
"323 408 LINE SMOOTH",
"267.667 441.333 OFFCURVE",
"225.667 458 OFFCURVE",
"197 458 CURVE SMOOTH",
"159.667 458 OFFCURVE",
"127.333 442.333 OFFCURVE",
"100 411 CURVE SMOOTH",
"74 380.333 OFFCURVE",
"61 342 OFFCURVE",
"61 296 CURVE SMOOTH",
"61 288 LINE",
"99 288 LINE",
"99 297 LINE SMOOTH",
"99 322.333 OFFCURVE",
"108.333 345.333 OFFCURVE",
"127 366 CURVE SMOOTH",
"146.333 387.333 OFFCURVE",
"166.667 398 OFFCURVE",
"188 398 CURVE SMOOTH",
"212.667 398 OFFCURVE",
"251.667 380.667 OFFCURVE",
"305 346 CURVE SMOOTH",
"343 321 LINE SMOOTH",
"394.333 289 OFFCURVE",
"434.667 273 OFFCURVE",
"464 273 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 29 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
15 16 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
61 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = Delta;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"750 0 LINE",
"750 83 LINE",
"410 780 LINE",
"384 780 LINE",
"53 83 LINE",
"53 0 LINE"
);
},
{
closed = 1;
nodes = (
"364 647 LINE",
"639 83 LINE",
"97 83 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
6 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 803;
}
);
note = Delta;
unicode = 2206;
},
{
glyphname = guillemotleft;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"347 99 LINE",
"260 256 LINE",
"346 412 LINE",
"340 417 LINE",
"173 258 LINE",
"173 253 LINE",
"340 94 LINE"
);
},
{
closed = 1;
nodes = (
"227 106 LINE",
"140 256 LINE",
"226 405 LINE",
"220 410 LINE",
"53 258 LINE",
"53 253 LINE",
"220 101 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 393;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"221 253 LINE",
"221 258 LINE",
"54 417 LINE",
"48 412 LINE",
"134 256 LINE",
"47 99 LINE",
"54 94 LINE"
);
},
{
closed = 1;
nodes = (
"341 253 LINE",
"341 258 LINE",
"174 410 LINE",
"168 405 LINE",
"254 256 LINE",
"167 106 LINE",
"174 101 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 393;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = ellipsis;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"640.333 -1 OFFCURVE",
"665 21.667 OFFCURVE",
"665 55 CURVE SMOOTH",
"665 88.333 OFFCURVE",
"640.333 113 OFFCURVE",
"607 113 CURVE SMOOTH",
"573.667 113 OFFCURVE",
"549 88.333 OFFCURVE",
"549 55 CURVE SMOOTH",
"549 21.667 OFFCURVE",
"573.667 -1 OFFCURVE",
"607 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"180.333 -1 OFFCURVE",
"205 21.667 OFFCURVE",
"205 55 CURVE SMOOTH",
"205 88.333 OFFCURVE",
"180.333 113 OFFCURVE",
"147 113 CURVE SMOOTH",
"113.667 113 OFFCURVE",
"89 88.333 OFFCURVE",
"89 55 CURVE SMOOTH",
"89 21.667 OFFCURVE",
"113.667 -1 OFFCURVE",
"147 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"410.333 -1 OFFCURVE",
"435 21.667 OFFCURVE",
"435 55 CURVE SMOOTH",
"435 88.333 OFFCURVE",
"410.333 113 OFFCURVE",
"377 113 CURVE SMOOTH",
"343.667 113 OFFCURVE",
"319 88.333 OFFCURVE",
"319 55 CURVE SMOOTH",
"319 21.667 OFFCURVE",
"343.667 -1 OFFCURVE",
"377 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
24 7 30 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 7 values pushed */
47 18 63 18 79 18 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
111 18 127 18 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
191 18 207 18 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
255 18 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
12 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
111 6 127 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
255 6 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
191 6 207 6 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 7 values pushed */
47 6 63 6 79 6 3 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
0 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
33 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
3 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 3 23 3 39 3 55 3 71 3 87 3 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 3 118 3 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 755;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = nonbreakingspace;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 210;
}
);
note = nonbreakingspace;
unicode = 00A0;
},
{
glyphname = Agrave;
lastChange = "2020-12-31 21:48:21 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 344, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
65 7 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
66 7 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
71 7 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 704;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Atilde;
lastChange = "2020-12-31 21:48:33 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 344, 247}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
53 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 3 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
78 20 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
79 20 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
84 20 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 704;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = Otilde;
lastChange = "2020-12-31 21:48:47 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 413, 246}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
61 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 40 122 40 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 40 25 40 41 40 57 40 73 40 89 40 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
50 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 50 22 50 38 50 54 50 70 50 86 50 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 50 117 50 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 3 14 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
55 4 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 808;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = OE;
lastChange = "2020-12-31 21:50:30 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"229.496 25.465 OFFCURVE",
"153 184.318 OFFCURVE",
"153 357 CURVE SMOOTH",
"153 526.588 OFFCURVE",
"224.742 691.174 OFFCURVE",
"383 707 CURVE",
"383 685 OFFCURVE",
"383 659.667 OFFCURVE",
"383 631 CURVE SMOOTH",
"383 603 OFFCURVE",
"383.167 573.5 OFFCURVE",
"383.5 542.5 CURVE SMOOTH",
"383.833 511.5 OFFCURVE",
"384 480.667 OFFCURVE",
"384 450 CURVE SMOOTH",
"384 419.333 OFFCURVE",
"384 390.333 OFFCURVE",
"384 363 CURVE SMOOTH",
"384 333 OFFCURVE",
"384 301 OFFCURVE",
"384 267 CURVE SMOOTH",
"384 233 OFFCURVE",
"384 200 OFFCURVE",
"384 168 CURVE SMOOTH",
"384 136 OFFCURVE",
"383.833 106.333 OFFCURVE",
"383.5 79 CURVE SMOOTH",
"383.167 51.667 OFFCURVE",
"383 29.333 OFFCURVE",
"383 12 CURVE"
);
},
{
closed = 1;
nodes = (
"495 18 LINE",
"494 33 OFFCURVE",
"494 60.333 OFFCURVE",
"494 85 CURVE SMOOTH",
"494 110.333 OFFCURVE",
"494 138 OFFCURVE",
"494 168 CURVE SMOOTH",
"494 198.667 OFFCURVE",
"494 230.667 OFFCURVE",
"494 264 CURVE SMOOTH",
"494 297.333 OFFCURVE",
"494 329.333 OFFCURVE",
"494 356 CURVE",
"776 356 LINE SMOOTH",
"825 356 OFFCURVE",
"831.921 274.318 OFFCURVE",
"845 222 CURVE",
"857 222 LINE",
"857 507 LINE",
"845 507 LINE",
"834.17 442.019 OFFCURVE",
"834 376 OFFCURVE",
"776 376 CURVE SMOOTH",
"494 376 LINE",
"494 405.333 OFFCURVE",
"494 436 OFFCURVE",
"494 468 CURVE SMOOTH",
"494 500.667 OFFCURVE",
"494 531.667 OFFCURVE",
"494 561 CURVE SMOOTH",
"494 619.667 OFFCURVE",
"495 680 OFFCURVE",
"496 705 CURVE",
"513 705 LINE",
"601.952 705 OFFCURVE",
"733.694 702.531 OFFCURVE",
"764 686 CURVE",
"810.667 663.333 OFFCURVE",
"858.333 625 OFFCURVE",
"913 557 CURVE",
"923 562 LINE",
"858 720 LINE",
"545 720 LINE SMOOTH",
"530.333 720 OFFCURVE",
"512.5 720.5 OFFCURVE",
"491.5 721.5 CURVE SMOOTH",
"470.5 722.5 OFFCURVE",
"446.333 723 OFFCURVE",
"419 723 CURVE SMOOTH",
"307 723 OFFCURVE",
"210.5 687 OFFCURVE",
"140.5 623 CURVE SMOOTH",
"70.5 559 OFFCURVE",
"29 468 OFFCURVE",
"29 360 CURVE SMOOTH",
"29 257.333 OFFCURVE",
"70.333 166.167 OFFCURVE",
"137 101.5 CURVE SMOOTH",
"203.667 36.833 OFFCURVE",
"295.667 -1 OFFCURVE",
"397 -1 CURVE SMOOTH",
"417.087 -1 OFFCURVE",
"519.646 0 OFFCURVE",
"533 0 CURVE SMOOTH",
"909 0 LINE",
"957 184 LINE",
"946 187 LINE",
"885.39 82.751 OFFCURVE",
"828.953 32.119 OFFCURVE",
"740 21 CURVE SMOOTH",
"701.333 15.667 OFFCURVE",
"653.667 15 OFFCURVE",
"631 15 CURVE SMOOTH",
"624.333 15 OFFCURVE",
"615.667 15 OFFCURVE",
"605 15 CURVE SMOOTH",
"585.797 15 OFFCURVE",
"532.066 17 OFFCURVE",
"516 17 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
94 7 59 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
94 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
117 7 82 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
117 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
34 7 71 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
16 59 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
40 59 28 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
117 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
117 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
74 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
117 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
76 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
117 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
79 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
79 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
82 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
86 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
82 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
89 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
89 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 13 values pushed */
6 94 22 94 38 94 54 94 70 94 86 94 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 94 117 94 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
82 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
99 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
101 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
101 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
82 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
104 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
106 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
117 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
109 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
109 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
117 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
111 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
117 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
113 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
117 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
115 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
119 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
64 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
69 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
16 64 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
21 64 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
34 64 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
40 64 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
79 64 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
109 64 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 980;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = oe;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"326 -3 OFFCURVE",
"387 33 OFFCURVE",
"431 101 CURVE",
"467 37 OFFCURVE",
"527.333 -1 OFFCURVE",
"606 -1 CURVE SMOOTH",
"705.948 -1 OFFCURVE",
"775.838 79.61 OFFCURVE",
"789 152 CURVE",
"780 154 LINE",
"765.333 104.667 OFFCURVE",
"712 66 OFFCURVE",
"648 66 CURVE SMOOTH",
"530.073 66 OFFCURVE",
"469 161.685 OFFCURVE",
"469 278 CURVE SMOOTH",
"469 285.333 OFFCURVE",
"469.333 292.5 OFFCURVE",
"470 299.5 CURVE SMOOTH",
"470.667 306.5 OFFCURVE",
"471 312.667 OFFCURVE",
"471 318 CURVE",
"782 318 LINE",
"774.172 427.59 OFFCURVE",
"697.405 483 OFFCURVE",
"593 483 CURVE SMOOTH",
"523.837 483 OFFCURVE",
"466.553 438.542 OFFCURVE",
"434 387 CURVE",
"391.333 453.667 OFFCURVE",
"320.333 483 OFFCURVE",
"251 483 CURVE SMOOTH",
"114.582 483 OFFCURVE",
"19 371.435 OFFCURVE",
"19 245 CURVE SMOOTH",
"19 84.922 OFFCURVE",
"134.048 -3 OFFCURVE",
"250 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"148.971 11 OFFCURVE",
"112 119.669 OFFCURVE",
"112 239 CURVE SMOOTH",
"112 346.905 OFFCURVE",
"157.414 467 OFFCURVE",
"245 467 CURVE SMOOTH",
"348.393 467 OFFCURVE",
"386 348.11 OFFCURVE",
"386 246 CURVE SMOOTH",
"386 144.501 OFFCURVE",
"348.277 11 OFFCURVE",
"250 11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"473 376.468 OFFCURVE",
"528.117 466 OFFCURVE",
"594 466 CURVE SMOOTH",
"650 466 OFFCURVE",
"684 425.333 OFFCURVE",
"684 376 CURVE SMOOTH",
"684 357.333 OFFCURVE",
"681.333 350.667 OFFCURVE",
"672 340 CURVE",
"660 334.667 OFFCURVE",
"639.667 334 OFFCURVE",
"621 334 CURVE SMOOTH",
"596.448 334 OFFCURVE",
"535.688 332 OFFCURVE",
"512 332 CURVE SMOOTH",
"500.667 332 OFFCURVE",
"487.667 332 OFFCURVE",
"473 332 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
77 6 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
77 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
9 5 67 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
13 7 47 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
106 67 122 67 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 67 25 67 41 67 57 67 73 67 89 67 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
23 67 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
39 67 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 13 values pushed */
6 77 22 77 38 77 54 77 70 77 86 77 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 77 117 77 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
36 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
42 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
4 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 4 23 4 39 4 55 4 71 4 87 4 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 4 118 4 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
12 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
23 18 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
39 36 18 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 792;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = endash;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"421 237 LINE",
"421 283 LINE",
"39 283 LINE",
"39 237 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 460;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"798 237 LINE",
"798 283 LINE",
"92 283 LINE",
"92 237 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 890;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = quotedblleft;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"230.667 530 OFFCURVE",
"258 547.667 OFFCURVE",
"258 581 CURVE SMOOTH",
"258 601 OFFCURVE",
"243.667 623 OFFCURVE",
"217 623 CURVE SMOOTH",
"206.333 623 OFFCURVE",
"195 620.333 OFFCURVE",
"183 611 CURVE",
"179 617 OFFCURVE",
"177 626.667 OFFCURVE",
"177 640 CURVE SMOOTH",
"177 682.667 OFFCURVE",
"201.333 700.667 OFFCURVE",
"248 710 CURVE",
"248 720 LINE",
"182.947 720 OFFCURVE",
"126 677.712 OFFCURVE",
"126 611 CURVE SMOOTH",
"126 567 OFFCURVE",
"154.667 530 OFFCURVE",
"200 530 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"88.667 530 OFFCURVE",
"116 547.667 OFFCURVE",
"116 581 CURVE SMOOTH",
"116 601 OFFCURVE",
"101.667 623 OFFCURVE",
"75 623 CURVE SMOOTH",
"64.333 623 OFFCURVE",
"53 620.333 OFFCURVE",
"41 611 CURVE",
"37 618.333 OFFCURVE",
"35 628 OFFCURVE",
"35 640 CURVE SMOOTH",
"35 682.667 OFFCURVE",
"59.333 700.667 OFFCURVE",
"106 710 CURVE",
"106 720 LINE",
"38.694 720 OFFCURVE",
"-14 677.712 OFFCURVE",
"-14 611 CURVE SMOOTH",
"-14 567 OFFCURVE",
"12.667 530 OFFCURVE",
"58 530 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
17 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 17 122 17 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 17 25 17 41 17 57 17 73 17 89 17 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
31 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 31 22 31 38 31 54 31 70 31 86 31 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 31 117 31 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
35 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
217 20 233 20 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
8 20 24 20 40 20 56 20 72 20 88 20 104 20 120 20 136 20 152 20 168 20 184 20 200 20 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
3 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 267;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"226.108 533 OFFCURVE",
"283 577.212 OFFCURVE",
"283 642 CURVE SMOOTH",
"283 686 OFFCURVE",
"254.333 723 OFFCURVE",
"209 723 CURVE SMOOTH",
"178.333 723 OFFCURVE",
"151 705.333 OFFCURVE",
"151 672 CURVE SMOOTH",
"151 652 OFFCURVE",
"165.333 630 OFFCURVE",
"192 630 CURVE SMOOTH",
"202.667 630 OFFCURVE",
"214 632.667 OFFCURVE",
"226 642 CURVE",
"230 635.333 OFFCURVE",
"232 625.667 OFFCURVE",
"232 613 CURVE SMOOTH",
"232 570.333 OFFCURVE",
"207.667 552.333 OFFCURVE",
"161 543 CURVE",
"161 533 LINE"
);
},
{
closed = 1;
nodes = (
"84.108 533 OFFCURVE",
"141 577.212 OFFCURVE",
"141 642 CURVE SMOOTH",
"141 686 OFFCURVE",
"112.333 723 OFFCURVE",
"67 723 CURVE SMOOTH",
"36.333 723 OFFCURVE",
"9 705.333 OFFCURVE",
"9 672 CURVE SMOOTH",
"9 652 OFFCURVE",
"23.333 630 OFFCURVE",
"50 630 CURVE SMOOTH",
"60.667 630 OFFCURVE",
"72 632.667 OFFCURVE",
"84 642 CURVE",
"88 636 OFFCURVE",
"90 626.333 OFFCURVE",
"90 613 CURVE SMOOTH",
"90 570.333 OFFCURVE",
"65.667 552.333 OFFCURVE",
"19 543 CURVE",
"19 533 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 14 122 14 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
23 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 23 22 23 38 23 54 23 70 23 86 23 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 23 117 23 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
9 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 9 121 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 9 24 9 40 9 56 9 72 9 88 9 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 267;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"88.667 530 OFFCURVE",
"118 547.667 OFFCURVE",
"118 581 CURVE SMOOTH",
"118 601 OFFCURVE",
"103.667 623 OFFCURVE",
"77 623 CURVE SMOOTH",
"66.333 623 OFFCURVE",
"50 620.333 OFFCURVE",
"38 611 CURVE",
"35.333 617.667 OFFCURVE",
"32 628 OFFCURVE",
"32 640 CURVE SMOOTH",
"32 682.667 OFFCURVE",
"59.333 700.667 OFFCURVE",
"106 710 CURVE",
"106 720 LINE",
"38.631 720 OFFCURVE",
"-17 677.728 OFFCURVE",
"-17 611 CURVE SMOOTH",
"-17 567 OFFCURVE",
"12.667 530 OFFCURVE",
"58 530 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
9 5 18 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 9 22 9 38 9 54 9 70 9 86 9 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 9 117 9 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
217 21 233 21 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
8 21 24 21 40 21 56 21 72 21 88 21 104 21 120 21 136 21 152 21 168 21 184 21 200 21 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 126;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"85.171 533 OFFCURVE",
"145 577.194 OFFCURVE",
"145 642 CURVE SMOOTH",
"145 686 OFFCURVE",
"113.333 723 OFFCURVE",
"68 723 CURVE SMOOTH",
"37.333 723 OFFCURVE",
"8 705.333 OFFCURVE",
"8 672 CURVE SMOOTH",
"8 652 OFFCURVE",
"22.333 630 OFFCURVE",
"49 630 CURVE SMOOTH",
"59.667 630 OFFCURVE",
"76 632.667 OFFCURVE",
"88 642 CURVE",
"90.667 635.333 OFFCURVE",
"94 625 OFFCURVE",
"94 613 CURVE SMOOTH",
"94 570.333 OFFCURVE",
"66.667 552.333 OFFCURVE",
"20 543 CURVE",
"20 533 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 5 15 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 5 values pushed */
106 15 122 15 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 15 25 15 41 15 57 15 73 15 89 15 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[11100]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 126;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = divide;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"575 241 LINE",
"575 281 LINE",
"125 281 LINE",
"125 241 LINE"
);
},
{
closed = 1;
nodes = (
"381.667 59 OFFCURVE",
"403 79.333 OFFCURVE",
"403 110 CURVE SMOOTH",
"403 142 OFFCURVE",
"381.667 167 OFFCURVE",
"351 167 CURVE SMOOTH",
"319 167 OFFCURVE",
"297 142.667 OFFCURVE",
"297 112 CURVE SMOOTH",
"297 81.333 OFFCURVE",
"319 59 OFFCURVE",
"351 59 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"381.667 354 OFFCURVE",
"403 379 OFFCURVE",
"403 411 CURVE SMOOTH",
"403 441.667 OFFCURVE",
"381.667 462 OFFCURVE",
"351 462 CURVE SMOOTH",
"319 462 OFFCURVE",
"297 439.667 OFFCURVE",
"297 409 CURVE SMOOTH",
"297 378.333 OFFCURVE",
"319 354 OFFCURVE",
"351 354 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 13 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 0 117 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
19 4 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
13 3 12 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = lozenge;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"605 379 LINE",
"333 758 LINE",
"61 379 LINE",
"333 0 LINE"
);
},
{
closed = 1;
nodes = (
"125 379 LINE",
"333 667 LINE",
"541 379 LINE",
"333 90 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
5 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
7 3 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 667;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = ydieresis;
lastChange = "2020-12-31 21:54:09 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 237, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
77 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
77 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
77 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
71 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 71 23 71 39 71 55 71 71 71 87 71 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 71 118 71 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
68 77 71 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 416;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = Ydieresis;
lastChange = "2020-12-31 21:53:59 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 371, 246}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
91 7 70 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
91 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
42 70 91 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
82 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
82 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 649;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = fraction;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"301 624 LINE",
"277 640 LINE",
"-147 22 LINE",
"-123 7 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 110;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = Euro;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"542 0 OFFCURVE",
"611.667 24.333 OFFCURVE",
"667 73 CURVE",
"667 152 LINE",
"609 86.667 OFFCURVE",
"539.333 54 OFFCURVE",
"458 54 CURVE SMOOTH",
"384 54 OFFCURVE",
"320.333 80 OFFCURVE",
"267 132 CURVE SMOOTH",
"234.333 163.333 OFFCURVE",
"212 200 OFFCURVE",
"200 242 CURVE",
"560 242 LINE",
"583 295 LINE",
"190 295 LINE",
"189.333 299.667 OFFCURVE",
"189 304 OFFCURVE",
"189 308 CURVE SMOOTH",
"189 312.667 OFFCURVE",
"189 317.333 OFFCURVE",
"189 322 CURVE SMOOTH",
"189 326.667 OFFCURVE",
"189 331 OFFCURVE",
"189 335 CURVE SMOOTH",
"189 339.667 OFFCURVE",
"189.333 344.333 OFFCURVE",
"190 349 CURVE",
"606 349 LINE",
"628 403 LINE",
"200 403 LINE",
"213.333 445 OFFCURVE",
"235.667 481.667 OFFCURVE",
"267 513 CURVE SMOOTH",
"320.333 565 OFFCURVE",
"384 591 OFFCURVE",
"458 591 CURVE SMOOTH",
"538.667 591 OFFCURVE",
"608.333 559 OFFCURVE",
"667 495 CURVE",
"690 549 LINE",
"627.333 613 OFFCURVE",
"550 645 OFFCURVE",
"458 645 CURVE SMOOTH",
"366.667 645 OFFCURVE",
"290 614 OFFCURVE",
"228 552 CURVE SMOOTH",
"185.333 508.667 OFFCURVE",
"157.667 459 OFFCURVE",
"145 403 CURVE",
"72 403 LINE",
"49 349 LINE",
"137 349 LINE",
"136.333 344.333 OFFCURVE",
"136 339.667 OFFCURVE",
"136 335 CURVE SMOOTH",
"136 331 OFFCURVE",
"136 326.667 OFFCURVE",
"136 322 CURVE SMOOTH",
"136 317.333 OFFCURVE",
"136 312.667 OFFCURVE",
"136 308 CURVE SMOOTH",
"136 304 OFFCURVE",
"136.333 299.667 OFFCURVE",
"137 295 CURVE",
"72 295 LINE",
"49 242 LINE",
"145 242 LINE",
"157.667 186 OFFCURVE",
"185.333 136.333 OFFCURVE",
"228 93 CURVE SMOOTH",
"290 31 OFFCURVE",
"366.667 0 OFFCURVE",
"458 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
30 3 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
10 3 7 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
21 3 18 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
3 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 3 23 3 39 3 55 3 71 3 87 3 103 3 119 3 135 3 151 3 167 3 183 3 199 3 215 3 231 3 247 3 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 3 23 3 39 3 55 3 71 3 87 3 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 3 118 3 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 744;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = guilsinglleft;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"234 99 LINE",
"139 256 LINE",
"233 412 LINE",
"227 417 LINE",
"47 258 LINE",
"47 253 LINE",
"227 94 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 284;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"237 253 LINE",
"237 258 LINE",
"57 417 LINE",
"51 412 LINE",
"145 256 LINE",
"50 99 LINE",
"57 94 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 284;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = fl;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"245 0 LINE",
"245 10 LINE",
"215.519 15.896 OFFCURVE",
"173.485 10.576 OFFCURVE",
"168 38 CURVE",
"168 431 LINE",
"353 431 LINE",
"353 43 LINE SMOOTH",
"353 32.333 OFFCURVE",
"348 24.833 OFFCURVE",
"338 20.5 CURVE SMOOTH",
"328 16.167 OFFCURVE",
"307.667 13 OFFCURVE",
"277 11 CURVE",
"277 0 LINE",
"510 0 LINE",
"510 11 LINE",
"470.398 15.169 OFFCURVE",
"436 8.762 OFFCURVE",
"436 38 CURVE SMOOTH",
"436 730 LINE",
"430 730 LINE",
"405 695 LINE",
"382.333 711 OFFCURVE",
"347.667 725 OFFCURVE",
"297 725 CURVE SMOOTH",
"214.38 725 OFFCURVE",
"132.055 674.136 OFFCURVE",
"100 594 CURVE SMOOTH",
"88 564.667 OFFCURVE",
"86 529 OFFCURVE",
"86 473 CURVE",
"26 473 LINE",
"10 429 LINE",
"85 429 LINE",
"85 42 LINE SMOOTH",
"85 21.56 OFFCURVE",
"38.508 12.459 OFFCURVE",
"9 10 CURVE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"169 485 OFFCURVE",
"169 494.667 OFFCURVE",
"169 502 CURVE SMOOTH",
"169 514.642 OFFCURVE",
"171.905 554.091 OFFCURVE",
"173 576 CURVE SMOOTH",
"179.673 680.543 OFFCURVE",
"240.289 706 OFFCURVE",
"279 706 CURVE",
"315 691.333 OFFCURVE",
"335.333 668.667 OFFCURVE",
"354 638 CURVE",
"354 473 LINE",
"169 473 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
38 5 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
7 5 39 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
46 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
30 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
22 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 520;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = periodcentered;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"168.667 201 OFFCURVE",
"192 223.333 OFFCURVE",
"192 258 CURVE SMOOTH",
"192 292.667 OFFCURVE",
"168.667 321 OFFCURVE",
"134 321 CURVE SMOOTH",
"99.333 321 OFFCURVE",
"74 294.667 OFFCURVE",
"74 260 CURVE SMOOTH",
"74 225.333 OFFCURVE",
"99.333 201 OFFCURVE",
"134 201 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 13 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 0 117 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 263;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = quotesinglbase;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"74.435 -83 OFFCURVE",
"135 -40.645 OFFCURVE",
"135 24 CURVE SMOOTH",
"135 68 OFFCURVE",
"103.333 105 OFFCURVE",
"58 105 CURVE SMOOTH",
"27.333 105 OFFCURVE",
"0 87.333 OFFCURVE",
"0 54 CURVE SMOOTH",
"0 34 OFFCURVE",
"12.333 12 OFFCURVE",
"39 12 CURVE SMOOTH",
"49.667 12 OFFCURVE",
"66 14.667 OFFCURVE",
"78 24 CURVE",
"80.667 17.333 OFFCURVE",
"84 6.333 OFFCURVE",
"84 -3 CURVE SMOOTH",
"84 -45.667 OFFCURVE",
"56.667 -63.667 OFFCURVE",
"10 -73 CURVE",
"10 -83 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
3 19 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 106;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"215.373 -83 OFFCURVE",
"273 -40.629 OFFCURVE",
"273 24 CURVE SMOOTH",
"273 68 OFFCURVE",
"244.333 105 OFFCURVE",
"199 105 CURVE SMOOTH",
"168.333 105 OFFCURVE",
"141 87.333 OFFCURVE",
"141 54 CURVE SMOOTH",
"141 34 OFFCURVE",
"155.333 12 OFFCURVE",
"182 12 CURVE SMOOTH",
"192.667 12 OFFCURVE",
"204 14.667 OFFCURVE",
"216 24 CURVE",
"220 17.333 OFFCURVE",
"222 8.333 OFFCURVE",
"222 -3 CURVE SMOOTH",
"222 -45.667 OFFCURVE",
"197.667 -63.667 OFFCURVE",
"151 -73 CURVE",
"151 -83 LINE"
);
},
{
closed = 1;
nodes = (
"73.373 -83 OFFCURVE",
"131 -40.629 OFFCURVE",
"131 24 CURVE SMOOTH",
"131 68 OFFCURVE",
"102.333 105 OFFCURVE",
"57 105 CURVE SMOOTH",
"26.333 105 OFFCURVE",
"0 87.333 OFFCURVE",
"0 54 CURVE SMOOTH",
"0 34 OFFCURVE",
"13.333 12 OFFCURVE",
"40 12 CURVE SMOOTH",
"50.667 12 OFFCURVE",
"62 14.667 OFFCURVE",
"74 24 CURVE",
"78 18 OFFCURVE",
"80 9 OFFCURVE",
"80 -3 CURVE SMOOTH",
"80 -45.667 OFFCURVE",
"55.667 -63.667 OFFCURVE",
"9 -73 CURVE",
"9 -83 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
14 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 14 122 14 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 14 25 14 41 14 57 14 73 14 89 14 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
23 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 23 22 23 38 23 54 23 70 23 86 23 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 23 117 23 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 3 values pushed */
3 18 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
9 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 247;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = perthousand;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"550 624 LINE",
"526 640 LINE",
"101 22 LINE",
"125 7 LINE"
);
},
{
closed = 1;
nodes = (
"549.363 -2 OFFCURVE",
"607 52.496 OFFCURVE",
"607 132 CURVE SMOOTH",
"607 211.607 OFFCURVE",
"548.099 264 OFFCURVE",
"481 264 CURVE SMOOTH",
"406.981 264 OFFCURVE",
"349 204.949 OFFCURVE",
"349 134 CURVE SMOOTH",
"349 43.073 OFFCURVE",
"414.239 -2 OFFCURVE",
"480 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"424.061 23 OFFCURVE",
"384 73.564 OFFCURVE",
"384 129 CURVE SMOOTH",
"384 185.509 OFFCURVE",
"423.46 237 OFFCURVE",
"479 237 CURVE SMOOTH",
"535.652 237 OFFCURVE",
"573 185.509 OFFCURVE",
"573 129 CURVE SMOOTH",
"573 73.15 OFFCURVE",
"536.304 23 OFFCURVE",
"480 23 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"249.931 390 OFFCURVE",
"308 448.545 OFFCURVE",
"308 526 CURVE SMOOTH",
"308 605.607 OFFCURVE",
"249.099 658 OFFCURVE",
"182 658 CURVE SMOOTH",
"107.981 658 OFFCURVE",
"50 598.949 OFFCURVE",
"50 528 CURVE SMOOTH",
"50 439.316 OFFCURVE",
"115.899 390 OFFCURVE",
"181 390 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"125.061 417 OFFCURVE",
"85 467.564 OFFCURVE",
"85 523 CURVE SMOOTH",
"85 579.509 OFFCURVE",
"124.46 631 OFFCURVE",
"180 631 CURVE SMOOTH",
"236.652 631 OFFCURVE",
"274 579.509 OFFCURVE",
"274 523 CURVE SMOOTH",
"274 467.15 OFFCURVE",
"237.304 417 OFFCURVE",
"181 417 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"850.363 -2 OFFCURVE",
"908 52.496 OFFCURVE",
"908 132 CURVE SMOOTH",
"908 211.607 OFFCURVE",
"849.099 264 OFFCURVE",
"782 264 CURVE SMOOTH",
"707.981 264 OFFCURVE",
"650 204.949 OFFCURVE",
"650 134 CURVE SMOOTH",
"650 43.073 OFFCURVE",
"715.239 -2 OFFCURVE",
"781 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"725.061 23 OFFCURVE",
"685 73.564 OFFCURVE",
"685 129 CURVE SMOOTH",
"685 185.509 OFFCURVE",
"724.46 237 OFFCURVE",
"780 237 CURVE SMOOTH",
"836.652 237 OFFCURVE",
"874 185.509 OFFCURVE",
"874 129 CURVE SMOOTH",
"874 73.15 OFFCURVE",
"837.304 23 OFFCURVE",
"781 23 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
54 10 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 44 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
74 34 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
74 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
24 64 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
114 94 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
114 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
84 104 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
84 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 27 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 0 229 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
6 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 54 229 54 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
218 64 234 64 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 64 25 64 41 64 57 64 73 64 89 64 105 64 121 64 137 64 153 64 169 64 185 64 201 64 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
6 74 22 74 38 74 54 74 70 74 86 74 102 74 118 74 134 74 150 74 166 74 182 74 198 74 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 74 229 74 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
218 94 234 94 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 94 25 94 41 94 57 94 73 94 89 94 105 94 121 94 137 94 153 94 169 94 185 94 201 94 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
218 104 234 104 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 104 25 104 41 104 57 104 73 104 89 104 105 104 121 104 137 104 153 104 169 104 185 104 201 104 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
125 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
99 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
99 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
5 2 59 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
29 2 79 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
49 2 15 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
69 2 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 103 69 119 69 135 69 151 69 167 69 183 69 199 69 215 69 231 69 247 69 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
89 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
109 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
79 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
119 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 950;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = Acircumflex;
lastChange = "2020-12-31 21:53:47 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 342, 242}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
65 7 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
66 7 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
71 7 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 704;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Ecircumflex;
lastChange = "2020-12-31 21:53:39 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 326, 242}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
21 7 90 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 21 22 21 38 21 54 21 70 21 86 21 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 21 117 21 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
103 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
103 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 711;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Aacute;
lastChange = "2020-12-31 21:53:51 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 348, 244}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
40 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
40 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
65 7 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
66 7 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
71 7 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 704;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Edieresis;
lastChange = "2020-12-31 21:53:35 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 332, 244}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
38 7 107 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 38 22 38 38 38 54 38 70 38 86 38 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 38 117 38 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
74 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
76 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
76 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
79 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
79 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
107 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
104 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
107 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
111 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
111 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
120 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
120 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
87 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
96 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
96 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 711;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Egrave;
lastChange = "2020-12-31 21:53:31 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 328, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
21 7 90 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 21 22 21 38 21 54 21 70 21 86 21 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 21 117 21 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
94 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
103 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
103 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 711;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Iacute;
lastChange = "2020-12-31 21:53:13 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 206, 244}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
19 7 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Icircumflex;
lastChange = "2020-12-31 21:53:16 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 200, 242}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
19 7 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idieresis;
lastChange = "2020-12-31 21:53:20 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 206, 244}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
36 7 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
55 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Igrave;
lastChange = "2020-12-31 21:57:15 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, 202, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
19 7 40 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Oacute;
lastChange = "2020-12-31 21:53:01 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 417, 243}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 27 122 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 37 22 37 38 37 54 37 70 37 86 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 37 117 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 808;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
lastChange = "2020-12-31 21:52:58 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 411, 241}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 27 122 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 37 22 37 38 37 54 37 70 37 86 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 37 117 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 808;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = apple;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"291 -20 OFFCURVE",
"313 -14.333 OFFCURVE",
"341 -3 CURVE",
"367 6.333 OFFCURVE",
"391 11 OFFCURVE",
"413 11 CURVE SMOOTH",
"434.333 11 OFFCURVE",
"459.333 6.667 OFFCURVE",
"488 -2 CURVE",
"517.333 -12.667 OFFCURVE",
"541 -18 OFFCURVE",
"559 -18 CURVE SMOOTH",
"602.333 -18 OFFCURVE",
"645.333 13.667 OFFCURVE",
"688 77 CURVE SMOOTH",
"716 119.667 OFFCURVE",
"735.667 162 OFFCURVE",
"749 202 CURVE",
"719 211.333 OFFCURVE",
"692.667 232.333 OFFCURVE",
"670 265 CURVE SMOOTH",
"646.667 298.333 OFFCURVE",
"635 335.667 OFFCURVE",
"635 377 CURVE SMOOTH",
"635 415 OFFCURVE",
"646 449.333 OFFCURVE",
"668 480 CURVE SMOOTH",
"680 497.333 OFFCURVE",
"699 517.333 OFFCURVE",
"725 540 CURVE",
"707.667 561.333 OFFCURVE",
"690.333 576.667 OFFCURVE",
"673 590 CURVE",
"641.667 611.333 OFFCURVE",
"606 622 OFFCURVE",
"566 622 CURVE SMOOTH",
"542 622 OFFCURVE",
"513 616.333 OFFCURVE",
"479 605 CURVE SMOOTH",
"445 593.667 OFFCURVE",
"421.333 588 OFFCURVE",
"408 588 CURVE SMOOTH",
"397.333 588 OFFCURVE",
"374.333 593 OFFCURVE",
"339 603 CURVE SMOOTH",
"304.333 613 OFFCURVE",
"274.667 618 OFFCURVE",
"250 618 CURVE SMOOTH",
"192.667 618 OFFCURVE",
"145 594 OFFCURVE",
"107 546 CURVE SMOOTH",
"69.667 497.333 OFFCURVE",
"51 435 OFFCURVE",
"51 359 CURVE SMOOTH",
"51 276.333 OFFCURVE",
"75.667 192.333 OFFCURVE",
"125 107 CURVE SMOOTH",
"174.333 22.333 OFFCURVE",
"224.333 -20 OFFCURVE",
"275 -20 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"415.333 610 OFFCURVE",
"432.333 612.667 OFFCURVE",
"445 616 CURVE",
"462.333 622 OFFCURVE",
"480.667 634 OFFCURVE",
"500 652 CURVE",
"541.333 694.667 OFFCURVE",
"561 747.333 OFFCURVE",
"561 790 CURVE SMOOTH",
"561 795.333 OFFCURVE",
"560.667 801.667 OFFCURVE",
"558 811 CURVE",
"440.667 784.333 OFFCURVE",
"395.333 706.667 OFFCURVE",
"394 608 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 790;
}
);
note = apple;
unicode = F8FF;
},
{
glyphname = Ograve;
lastChange = "2020-12-31 21:52:54 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 413, 244}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
27 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 27 122 27 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 27 25 27 41 27 57 27 73 27 89 27 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
37 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 37 22 37 38 37 54 37 70 37 86 37 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 37 117 37 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
22 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 808;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Uacute;
lastChange = "2020-12-31 21:52:35 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 445, 247}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
38 7 70 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
90 18 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
218 18 234 18 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
87 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
80 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
33 2 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 834;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ucircumflex;
lastChange = "2020-12-31 21:52:38 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 439, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
38 7 70 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
90 18 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
218 18 234 18 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
87 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
80 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
33 2 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 834;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Ugrave;
lastChange = "2020-12-31 21:52:41 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 441, 248}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
38 7 70 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
90 18 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
218 18 234 18 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
47 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
70 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
87 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
80 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
33 2 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
7 33 23 33 39 33 55 33 71 33 87 33 103 33 119 33 135 33 151 33 167 33 183 33 199 33 215 33 231 33 247 33 16 
DELTAP3[ ]	/* DeltaExceptionP3 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 834;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = dotlessi;
lastChange = "2020-12-31 21:35:51 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{110, 481}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"233 0 LINE",
"233 10 LINE",
"206.178 15.364 OFFCURVE",
"174.247 9.763 OFFCURVE",
"169 36 CURVE",
"169 483 LINE",
"163 483 LINE",
"28 439 LINE",
"28 432 LINE",
"45.333 425.333 OFFCURVE",
"64 416.667 OFFCURVE",
"76 410 CURVE",
"86.667 403.333 OFFCURVE",
"86 399.667 OFFCURVE",
"86 389 CURVE SMOOTH",
"86 42 LINE SMOOTH",
"86 16.974 OFFCURVE",
"47.53 12.461 OFFCURVE",
"18 10 CURVE",
"18 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 5 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 254;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = circumflex;
lastChange = "2020-12-31 21:31:30 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{6, 484}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"10 632 LINE",
"101 521 LINE",
"113 528 LINE",
"18 698 LINE",
"3 698 LINE",
"-92 528 LINE",
"-80 521 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = tilde;
lastChange = "2020-12-31 21:32:04 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{4, 479}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-122 535 LINE",
"-104 582 OFFCURVE",
"-92 581 OFFCURVE",
"-40 581 CURVE",
"51 562 LINE",
"121 562 OFFCURVE",
"149 607 OFFCURVE",
"164 665 CURVE",
"150 665 LINE",
"141 620 OFFCURVE",
"113 614 OFFCURVE",
"64 614 CURVE",
"-25 633 LINE",
"-88 633 OFFCURVE",
"-120 592 OFFCURVE",
"-135 535 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"391 576 LINE",
"391 621 LINE",
"110 621 LINE",
"110 576 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = macron;
unicode = 00AF;
},
{
glyphname = breve;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"282.667 534 OFFCURVE",
"312.667 550.667 OFFCURVE",
"330 572 CURVE SMOOTH",
"352.667 598.667 OFFCURVE",
"358 638.333 OFFCURVE",
"358 673 CURVE SMOOTH",
"358 684 LINE",
"345 684 LINE",
"341 617.333 OFFCURVE",
"304 585 OFFCURVE",
"248 585 CURVE SMOOTH",
"193.333 585 OFFCURVE",
"155 617.333 OFFCURVE",
"151 684 CURVE",
"138 684 LINE",
"138 673 LINE SMOOTH",
"138 638.333 OFFCURVE",
"143.333 598.667 OFFCURVE",
"166 572 CURVE SMOOTH",
"183.333 550.667 OFFCURVE",
"213.333 534 OFFCURVE",
"248 534 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
2 7 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
5 3 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = dotaccent;
lastChange = "2020-12-31 21:36:19 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{-1, 478}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"28 552 OFFCURVE",
"51 575 OFFCURVE",
"51 603 CURVE SMOOTH",
"51 631 OFFCURVE",
"28 653 OFFCURVE",
"0 653 CURVE SMOOTH",
"-28 653 OFFCURVE",
"-51 631 OFFCURVE",
"-51 603 CURVE SMOOTH",
"-51 576 OFFCURVE",
"-27 552 OFFCURVE",
"0 552 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 13 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 0 117 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = ring;
lastChange = "2020-12-31 21:41:01 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{-2, 484}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"43 520 OFFCURVE",
"74 551 OFFCURVE",
"74 592 CURVE SMOOTH",
"74 635 OFFCURVE",
"43 664 OFFCURVE",
"0 664 CURVE SMOOTH",
"-41 664 OFFCURVE",
"-74 633 OFFCURVE",
"-74 592 CURVE SMOOTH",
"-74 549 OFFCURVE",
"-44 520 OFFCURVE",
"0 520 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-29 540 OFFCURVE",
"-47 563 OFFCURVE",
"-47 592 CURVE SMOOTH",
"-47 623 OFFCURVE",
"-28 644 OFFCURVE",
"0 644 CURVE SMOOTH",
"29 644 OFFCURVE",
"47 621 OFFCURVE",
"47 592 CURVE SMOOTH",
"47 563 OFFCURVE",
"29 540 OFFCURVE",
"0 540 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
218 12 234 12 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
6 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 18 229 18 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = cedilla;
lastChange = "2020-12-31 21:39:01 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{1, -3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-11 -222 OFFCURVE",
"50 -189 OFFCURVE",
"50 -132 CURVE SMOOTH",
"50 -106 OFFCURVE",
"34 -64 OFFCURVE",
"-24 -41 CURVE",
"21 6 LINE",
"1 6 LINE",
"-79 -75 LINE",
"-31 -91 OFFCURVE",
"-6 -120 OFFCURVE",
"-6 -155 CURVE SMOOTH",
"-6 -191 OFFCURVE",
"-26 -210 OFFCURVE",
"-50 -210 CURVE SMOOTH",
"-65 -210 OFFCURVE",
"-72 -200 OFFCURVE",
"-72 -179 CURVE SMOOTH",
"-72 -176 OFFCURVE",
"-72 -173 OFFCURVE",
"-71 -170 CURVE SMOOTH",
"-71 -167 OFFCURVE",
"-71 -163 OFFCURVE",
"-71 -159 CURVE",
"-77 -152 OFFCURVE",
"-87 -148 OFFCURVE",
"-100 -148 CURVE SMOOTH",
"-123 -148 OFFCURVE",
"-131 -164 OFFCURVE",
"-131 -177 CURVE SMOOTH",
"-131 -209 OFFCURVE",
"-100 -222 OFFCURVE",
"-55 -222 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 5 11 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 5 values pushed */
106 11 122 11 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
6 11 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 27 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
8 27 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = hungarumlaut;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"400 667 LINE",
"400 672 LINE",
"392 682.667 OFFCURVE",
"385.333 696 OFFCURVE",
"356 696 CURVE",
"253 524 LINE",
"264 518 LINE"
);
},
{
closed = 1;
nodes = (
"281 667 LINE",
"281 672 LINE",
"273 682.667 OFFCURVE",
"266.333 696 OFFCURVE",
"237 696 CURVE",
"150 522 LINE",
"161 516 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = ogonek;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"298.399 -217 OFFCURVE",
"334.956 -176.132 OFFCURVE",
"347 -140 CURVE",
"339 -136 LINE",
"324.333 -158.667 OFFCURVE",
"312.667 -173 OFFCURVE",
"278 -173 CURVE SMOOTH",
"239.333 -173 OFFCURVE",
"224 -143.333 OFFCURVE",
"224 -114 CURVE SMOOTH",
"224 -68.059 OFFCURVE",
"258.073 -18.951 OFFCURVE",
"291 3 CURVE",
"291 5 LINE",
"276 5 LINE",
"229.886 -23.822 OFFCURVE",
"167 -80.508 OFFCURVE",
"167 -140 CURVE SMOOTH",
"167 -184 OFFCURVE",
"203.333 -217 OFFCURVE",
"250 -217 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 5 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 7 22 7 38 7 54 7 70 7 86 7 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 7 117 7 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
4 3 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = caron;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"258 516 LINE",
"353 686 LINE",
"341 693 LINE",
"250 582 LINE",
"160 693 LINE",
"148 686 LINE",
"243 516 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = Lslash;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"676 0 LINE",
"713 206 LINE",
"703 209 LINE",
"668.987 123.968 OFFCURVE",
"635.213 57.834 OFFCURVE",
"534 30 CURVE SMOOTH",
"494.906 18.502 OFFCURVE",
"411.496 15 OFFCURVE",
"388 15 CURVE SMOOTH",
"343.926 15 OFFCURVE",
"277.823 27.221 OFFCURVE",
"266 42 CURVE",
"254 60.667 OFFCURVE",
"254.333 103.333 OFFCURVE",
"253 146 CURVE SMOOTH",
"253 168.667 OFFCURVE",
"252.833 189 OFFCURVE",
"252.5 207 CURVE SMOOTH",
"252.167 225 OFFCURVE",
"252 242.667 OFFCURVE",
"252 260 CURVE SMOOTH",
"252 277.333 OFFCURVE",
"252 295 OFFCURVE",
"252 313 CURVE SMOOTH",
"252 331 OFFCURVE",
"252 351 OFFCURVE",
"252 373 CURVE",
"425 423 LINE",
"417 450 LINE",
"252 399 LINE",
"252 420.333 OFFCURVE",
"252 439.667 OFFCURVE",
"252 457 CURVE SMOOTH",
"252 484.328 OFFCURVE",
"254.05 591.611 OFFCURVE",
"255 622 CURVE SMOOTH",
"257.455 688.291 OFFCURVE",
"312.884 702.751 OFFCURVE",
"360 710 CURVE",
"360 720 LINE",
"41 720 LINE",
"41 710 LINE",
"75.667 706 OFFCURVE",
"109.333 694.667 OFFCURVE",
"128 672 CURVE SMOOTH",
"139.17 658.968 OFFCURVE",
"143 620.972 OFFCURVE",
"143 592 CURVE SMOOTH",
"143 580.667 OFFCURVE",
"143 569 OFFCURVE",
"143 557 CURVE SMOOTH",
"143 365 LINE",
"16 326 LINE",
"24 300 LINE",
"143 339 LINE",
"143 321.667 OFFCURVE",
"143 304 OFFCURVE",
"143 286 CURVE SMOOTH",
"143 254.829 OFFCURVE",
"141 178.658 OFFCURVE",
"141 156 CURVE SMOOTH",
"141 119.909 OFFCURVE",
"135.189 63.827 OFFCURVE",
"122 48 CURVE SMOOTH",
"103.333 26.667 OFFCURVE",
"67.333 15.333 OFFCURVE",
"34 10 CURVE",
"34 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
19 7 58 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 19 22 19 38 19 54 19 70 19 86 19 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 19 117 19 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
62 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
71 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
29 71 41 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
56 71 41 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 708;
}
);
note = Lslash;
unicode = 0141;
},
{
glyphname = lslash;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"245 0 LINE",
"245 11 LINE",
"200.201 12.792 OFFCURVE",
"171 11.118 OFFCURVE",
"171 39 CURVE SMOOTH",
"171 427 LINE",
"269 463 LINE",
"260 487 LINE",
"171 452 LINE",
"171 723 LINE",
"164 723 LINE",
"21 676 LINE",
"21 670 LINE",
"29 666.667 OFFCURVE",
"39 661.5 OFFCURVE",
"51 654.5 CURVE SMOOTH",
"63 647.5 OFFCURVE",
"72 642.333 OFFCURVE",
"78 639 CURVE",
"87.333 632.333 OFFCURVE",
"88 628.667 OFFCURVE",
"88 618 CURVE SMOOTH",
"88 423 LINE",
"-9 387 LINE",
"0 364 LINE",
"88 399 LINE",
"88 43 LINE SMOOTH",
"88 32.333 OFFCURVE",
"83 24.833 OFFCURVE",
"73 20.5 CURVE SMOOTH",
"63 16.167 OFFCURVE",
"42.667 13 OFFCURVE",
"12 11 CURVE",
"12 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
3 5 12 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
3 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
2 21 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
6 21 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
16 21 3 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 256;
}
);
note = lslash;
unicode = 0142;
},
{
glyphname = Scaron;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"445.258 -7 OFFCURVE",
"558 63.98 OFFCURVE",
"558 197 CURVE SMOOTH",
"558 291.667 OFFCURVE",
"505.667 354.667 OFFCURVE",
"415 388 CURVE SMOOTH",
"374.766 402.823 OFFCURVE",
"311.282 422.287 OFFCURVE",
"272 438 CURVE SMOOTH",
"204 463.333 OFFCURVE",
"157 503.333 OFFCURVE",
"157 574 CURVE SMOOTH",
"157 664.037 OFFCURVE",
"220.816 715 OFFCURVE",
"307 715 CURVE SMOOTH",
"407.148 715 OFFCURVE",
"476.825 625.232 OFFCURVE",
"510 534 CURVE",
"521 534 LINE",
"521 719 LINE",
"510 719 LINE",
"499.333 703 OFFCURVE",
"484 683 OFFCURVE",
"480 683 CURVE SMOOTH",
"478.243 683 OFFCURVE",
"457.334 698.292 OFFCURVE",
"437.5 707 CURVE SMOOTH",
"410.167 719 OFFCURVE",
"368 731 OFFCURVE",
"308 731 CURVE SMOOTH",
"175.916 731 OFFCURVE",
"68 661.393 OFFCURVE",
"68 522 CURVE SMOOTH",
"68 438.938 OFFCURVE",
"128.973 368.318 OFFCURVE",
"200 341 CURVE SMOOTH",
"218.421 333.792 OFFCURVE",
"328.443 295.959 OFFCURVE",
"347 289 CURVE SMOOTH",
"412.891 264.291 OFFCURVE",
"462 230.664 OFFCURVE",
"462 157 CURVE SMOOTH",
"462 65 OFFCURVE",
"394.667 7 OFFCURVE",
"296 7 CURVE SMOOTH",
"244.134 7 OFFCURVE",
"191.424 32.503 OFFCURVE",
"161.5 60 CURVE SMOOTH",
"127.422 91.315 OFFCURVE",
"89.058 151.827 OFFCURVE",
"73 200 CURVE",
"63 200 LINE",
"66 1 LINE",
"75 1 LINE",
"85.667 15.667 OFFCURVE",
"102 36 OFFCURVE",
"106 36 CURVE SMOOTH",
"110.52 36 OFFCURVE",
"131.647 22.131 OFFCURVE",
"155 13.5 CURVE SMOOTH",
"185.667 2.167 OFFCURVE",
"231.667 -7 OFFCURVE",
"297 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"328 764 LINE",
"434 927 LINE",
"421 934 LINE",
"321 830 LINE",
"220 934 LINE",
"207 927 LINE",
"313 764 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
84 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
85 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
18 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 18 22 18 38 18 54 18 70 18 86 18 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 18 117 18 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
58 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 58 122 58 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 58 25 58 41 58 57 58 73 58 89 58 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
68 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
79 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
79 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 605;
}
);
note = Scaron;
unicode = 0160;
},
{
glyphname = scaron;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"283.379 -2 OFFCURVE",
"369 42.436 OFFCURVE",
"369 146 CURVE SMOOTH",
"369 214 OFFCURVE",
"321 263.333 OFFCURVE",
"261 278 CURVE SMOOTH",
"248.333 281.333 OFFCURVE",
"233.333 284.833 OFFCURVE",
"216 288.5 CURVE SMOOTH",
"198.667 292.167 OFFCURVE",
"182.667 295.667 OFFCURVE",
"168 299 CURVE SMOOTH",
"125.333 309.667 OFFCURVE",
"94 326.667 OFFCURVE",
"94 376 CURVE SMOOTH",
"94 434.131 OFFCURVE",
"136.535 469 OFFCURVE",
"185 469 CURVE SMOOTH",
"261.685 469 OFFCURVE",
"294.841 410.627 OFFCURVE",
"332 331 CURVE",
"340 333 LINE",
"328 457 LINE",
"289.333 471.667 OFFCURVE",
"249 483 OFFCURVE",
"193 483 CURVE SMOOTH",
"106.749 483 OFFCURVE",
"32 429.776 OFFCURVE",
"32 347 CURVE SMOOTH",
"32 287 OFFCURVE",
"66.333 242.333 OFFCURVE",
"117 225 CURVE SMOOTH",
"143.667 215.667 OFFCURVE",
"178 207.667 OFFCURVE",
"214 201 CURVE SMOOTH",
"259.333 191.667 OFFCURVE",
"287 163.333 OFFCURVE",
"287 122 CURVE SMOOTH",
"287 46 OFFCURVE",
"246 10 OFFCURVE",
"182 10 CURVE SMOOTH",
"98.992 10 OFFCURVE",
"58.703 89.892 OFFCURVE",
"35 161 CURVE",
"27 161 LINE",
"27 29 LINE",
"71 9 OFFCURVE",
"123.333 -2 OFFCURVE",
"182 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"203 516 LINE",
"298 686 LINE",
"286 693 LINE",
"195 582 LINE",
"105 693 LINE",
"93 686 LINE",
"188 516 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
45 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 45 122 45 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 45 25 45 41 45 57 45 73 45 89 45 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
1 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
16 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 16 22 16 38 16 54 16 70 16 86 16 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 16 117 16 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
58 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 382;
}
);
note = scaron;
unicode = 0161;
},
{
glyphname = Yacute;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"473 0 LINE",
"473 10 LINE",
"443.667 15.333 OFFCURVE",
"408 20.667 OFFCURVE",
"388 50 CURVE SMOOTH",
"377.333 64.667 OFFCURVE",
"377 106.333 OFFCURVE",
"377 145 CURVE SMOOTH",
"377 346 LINE",
"395.857 374.285 OFFCURVE",
"500.448 533.626 OFFCURVE",
"531 582 CURVE SMOOTH",
"576.893 653.39 OFFCURVE",
"608.417 699.488 OFFCURVE",
"682 710 CURVE",
"682 720 LINE",
"451 720 LINE",
"451 710 LINE",
"491.396 704.229 OFFCURVE",
"536 699.211 OFFCURVE",
"536 659 CURVE SMOOTH",
"536 634.962 OFFCURVE",
"511.549 591.479 OFFCURVE",
"500 573 CURVE",
"476.954 532.029 OFFCURVE",
"396.895 407.155 OFFCURVE",
"366 362 CURVE",
"362.387 368.097 OFFCURVE",
"240.708 567.296 OFFCURVE",
"236 575 CURVE SMOOTH",
"214.667 611 OFFCURVE",
"191 650.667 OFFCURVE",
"191 668 CURVE SMOOTH",
"191 701.024 OFFCURVE",
"238.91 707.394 OFFCURVE",
"278 710 CURVE",
"278 720 LINE",
"-25 720 LINE",
"-25 710 LINE",
"29.537 707.273 OFFCURVE",
"65.161 643.386 OFFCURVE",
"108 578 CURVE SMOOTH",
"121.383 557.925 OFFCURVE",
"172.752 474.725 OFFCURVE",
"197 435.5 CURVE SMOOTH",
"214.784 406.731 OFFCURVE",
"260.141 331.789 OFFCURVE",
"268 320 CURVE",
"268 246.667 OFFCURVE",
"267.333 197.333 OFFCURVE",
"266 160 CURVE",
"266 125.787 OFFCURVE",
"264.767 63.767 OFFCURVE",
"252 51 CURVE",
"222.667 17.667 OFFCURVE",
"199.667 14 OFFCURVE",
"165 10 CURVE",
"165 0 LINE"
);
},
{
closed = 1;
nodes = (
"476 903 LINE",
"476 908 LINE",
"469.333 918.667 OFFCURVE",
"454.333 934 OFFCURVE",
"425 934 CURVE",
"289 767 LINE",
"300 760 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
74 7 53 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
74 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
25 53 74 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
25 65 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 649;
}
);
note = Yacute;
unicode = 00DD;
},
{
glyphname = yacute;
lastChange = "2020-12-31 21:18:03 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"133.667 -240 OFFCURVE",
"166 -218.667 OFFCURVE",
"182 -168 CURVE SMOOTH",
"218 -54 OFFCURVE",
"300 201 OFFCURVE",
"308 228 CURVE SMOOTH",
"333 310 OFFCURVE",
"370.295 433.251 OFFCURVE",
"379 442.5 CURVE SMOOTH",
"394.647 459.125 OFFCURVE",
"420.184 460.099 OFFCURVE",
"443 462 CURVE",
"443 473 LINE",
"289 473 LINE",
"289 462 LINE",
"316.848 458.906 OFFCURVE",
"345 457.233 OFFCURVE",
"345 433 CURVE SMOOTH",
"345 408.08 OFFCURVE",
"313 306 OFFCURVE",
"302 270 CURVE SMOOTH",
"291 235 OFFCURVE",
"256 126 OFFCURVE",
"247 100 CURVE",
"230.578 143.793 OFFCURVE",
"194.219 244.597 OFFCURVE",
"176.5 293.5 CURVE SMOOTH",
"161.956 333.642 OFFCURVE",
"132 415.35 OFFCURVE",
"132 430 CURVE SMOOTH",
"132 455.333 OFFCURVE",
"156 458 OFFCURVE",
"184 462 CURVE",
"184 473 LINE",
"-34 473 LINE",
"-34 462 LINE",
"-11.333 460.667 OFFCURVE",
"4.167 458 OFFCURVE",
"12.5 454 CURVE SMOOTH",
"20.833 450 OFFCURVE",
"30 446 OFFCURVE",
"34 438 CURVE SMOOTH",
"46 412 OFFCURVE",
"56 381 OFFCURVE",
"68 348 CURVE SMOOTH",
"88 294 OFFCURVE",
"120.049 203.203 OFFCURVE",
"140 150 CURVE SMOOTH",
"156.788 105.232 OFFCURVE",
"195.269 -6.538 OFFCURVE",
"206 -28 CURVE",
"202.116 -47.421 OFFCURVE",
"174.314 -141.049 OFFCURVE",
"156 -186 CURVE",
"154 -186 LINE",
"135.333 -168.667 OFFCURVE",
"119.667 -149 OFFCURVE",
"93 -149 CURVE SMOOTH",
"66.333 -149 OFFCURVE",
"49 -168.333 OFFCURVE",
"49 -195 CURVE SMOOTH",
"49 -221.667 OFFCURVE",
"76.333 -240 OFFCURVE",
"103 -240 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"336 667 LINE",
"336 672 LINE",
"328 682.667 OFFCURVE",
"319.333 696 OFFCURVE",
"290 696 CURVE",
"186 520 LINE",
"196 514 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
60 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
22 60 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
54 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 54 23 54 39 54 55 54 71 54 87 54 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 54 118 54 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
51 60 54 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 416;
}
);
note = yacute;
unicode = 00FD;
},
{
glyphname = gid236;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 0;
}
);
note = gid236;
},
{
glyphname = Thorn;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"363 0 LINE",
"363 10 LINE",
"308.333 12.667 OFFCURVE",
"275.667 33.667 OFFCURVE",
"265 51 CURVE",
"254.139 67.291 OFFCURVE",
"252 115.689 OFFCURVE",
"252 141 CURVE SMOOTH",
"252 151.667 OFFCURVE",
"252 160 OFFCURVE",
"252 166 CURVE",
"268 166 OFFCURVE",
"286 166 OFFCURVE",
"306 166 CURVE SMOOTH",
"356.437 166 OFFCURVE",
"442.241 173.586 OFFCURVE",
"491 191 CURVE SMOOTH",
"568.354 219.649 OFFCURVE",
"633 287.99 OFFCURVE",
"633 383 CURVE SMOOTH",
"633 554.038 OFFCURVE",
"481.365 590 OFFCURVE",
"318 590 CURVE SMOOTH",
"309.333 590 OFFCURVE",
"300.167 589.833 OFFCURVE",
"290.5 589.5 CURVE SMOOTH",
"280.833 589.167 OFFCURVE",
"268 589 OFFCURVE",
"252 589 CURVE",
"252 617 OFFCURVE",
"253.333 637.5 OFFCURVE",
"256 650.5 CURVE SMOOTH",
"258.667 663.5 OFFCURVE",
"262.333 672.667 OFFCURVE",
"267 678 CURVE",
"284.333 699.333 OFFCURVE",
"316 706 OFFCURVE",
"352 710 CURVE",
"352 720 LINE",
"37 720 LINE",
"37 710 LINE",
"73 704.667 OFFCURVE",
"106 700.333 OFFCURVE",
"126 679 CURVE SMOOTH",
"142.103 662.897 OFFCURVE",
"143 596.302 OFFCURVE",
"143 558 CURVE SMOOTH",
"143 363 LINE SMOOTH",
"143 345 OFFCURVE",
"143 325.667 OFFCURVE",
"143 305 CURVE SMOOTH",
"143 269.869 OFFCURVE",
"141 181.48 OFFCURVE",
"141 156 CURVE SMOOTH",
"141 121.138 OFFCURVE",
"137.405 60.886 OFFCURVE",
"125 46 CURVE SMOOTH",
"107.667 24.667 OFFCURVE",
"74.333 15.333 OFFCURVE",
"41 10 CURVE",
"41 0 LINE"
);
},
{
closed = 1;
nodes = (
"252 196.667 OFFCURVE",
"252 216.667 OFFCURVE",
"252 240 CURVE SMOOTH",
"252 264 OFFCURVE",
"252 289.333 OFFCURVE",
"252 316 CURVE SMOOTH",
"252 343.333 OFFCURVE",
"252 370.667 OFFCURVE",
"252 398 CURVE SMOOTH",
"252 426 OFFCURVE",
"252 451.667 OFFCURVE",
"252 475 CURVE SMOOTH",
"252 498.333 OFFCURVE",
"252.167 518.667 OFFCURVE",
"252.5 536 CURVE SMOOTH",
"252.833 553.333 OFFCURVE",
"253 565 OFFCURVE",
"253 571 CURVE",
"262.333 572.333 OFFCURVE",
"279 574 OFFCURVE",
"307 574 CURVE SMOOTH",
"345.667 574 OFFCURVE",
"386 569.667 OFFCURVE",
"418 555 CURVE SMOOTH",
"482 524.333 OFFCURVE",
"522 461.333 OFFCURVE",
"522 384 CURVE SMOOTH",
"522 300 OFFCURVE",
"478.333 225.333 OFFCURVE",
"393 196 CURVE SMOOTH",
"351.667 181.333 OFFCURVE",
"306.667 180 OFFCURVE",
"252 180 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
90 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
8 7 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
90 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
63 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 63 122 63 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 63 25 63 41 63 57 63 73 63 89 63 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
77 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
15 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
69 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 69 23 69 39 69 55 69 71 69 87 69 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 69 118 69 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
83 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 83 121 83 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 83 24 83 40 83 56 83 72 83 88 83 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 656;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = thorn;
lastChange = "2021-01-02 00:20:13 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"238 -230 LINE",
"238 -219 LINE",
"207.169 -216.431 OFFCURVE",
"154 -213 OFFCURVE",
"154 -192 CURVE SMOOTH",
"154 13 LINE",
"179.333 7 OFFCURVE",
"203.333 4 OFFCURVE",
"226 4 CURVE SMOOTH",
"394.737 4 OFFCURVE",
"506 109.734 OFFCURVE",
"506 264 CURVE SMOOTH",
"506 374.874 OFFCURVE",
"441.749 483 OFFCURVE",
"322 483 CURVE SMOOTH",
"248.697 483 OFFCURVE",
"187.969 427.696 OFFCURVE",
"155 370 CURVE",
"153 370 LINE",
"153 726 LINE",
"148 726 LINE",
"9 665 LINE",
"9 659 LINE",
"72 626 LINE",
"72 -185 LINE SMOOTH",
"72 -206.311 OFFCURVE",
"20.17 -216.183 OFFCURVE",
"-8 -219 CURVE",
"-8 -230 LINE"
);
},
{
closed = 1;
nodes = (
"183.483 23 OFFCURVE",
"155 84 OFFCURVE",
"155 150 CURVE SMOOTH",
"155 342 LINE SMOOTH",
"155 367.463 OFFCURVE",
"203.63 418 OFFCURVE",
"266 418 CURVE SMOOTH",
"366.635 418 OFFCURVE",
"416 337.136 OFFCURVE",
"416 235 CURVE SMOOTH",
"416 121.565 OFFCURVE",
"349.804 23 OFFCURVE",
"266 23 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
36 5 17 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
11 17 36 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
43 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 43 122 43 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 43 25 43 41 43 57 43 73 43 89 43 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
12 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
23 10 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
11 23 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
15 23 12 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
59 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 59 121 59 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 33 values pushed */
8 59 24 59 40 59 56 59 72 59 88 59 104 59 120 59 136 59 152 59 168 59 184 59 200 59 216 59 232 59 248 59 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 59 24 59 40 59 56 59 72 59 88 59 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 526;
}
);
note = thorn;
unicode = 00FE;
},
{
glyphname = gid239;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 0;
}
);
note = gid239;
},
{
glyphname = Zcaron;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"623 0 LINE",
"695 225 LINE",
"684 229 LINE",
"617.333 114.333 OFFCURVE",
"532 34 OFFCURVE",
"424 22 CURVE SMOOTH",
"385.333 18 OFFCURVE",
"347.667 17 OFFCURVE",
"325 17 CURVE SMOOTH",
"298.333 17 OFFCURVE",
"270.667 17 OFFCURVE",
"242 17 CURVE SMOOTH",
"213.333 17 OFFCURVE",
"184 17.333 OFFCURVE",
"154 18 CURVE",
"659 712 LINE",
"656 718 LINE",
"631.333 718 OFFCURVE",
"601.333 718 OFFCURVE",
"566 718 CURVE SMOOTH",
"531.333 718 OFFCURVE",
"494.333 718 OFFCURVE",
"455 718 CURVE SMOOTH",
"415.667 718 OFFCURVE",
"376 718 OFFCURVE",
"336 718 CURVE SMOOTH",
"250.988 718 OFFCURVE",
"123.394 718.4 OFFCURVE",
"87 721 CURVE",
"14 508 LINE",
"25 504 LINE",
"52.672 549.281 OFFCURVE",
"118.228 623.857 OFFCURVE",
"152 652 CURVE SMOOTH",
"185.333 678.667 OFFCURVE",
"225.333 697.333 OFFCURVE",
"276 700 CURVE SMOOTH",
"301.333 701.333 OFFCURVE",
"348 702 OFFCURVE",
"396 702 CURVE SMOOTH",
"420 702 OFFCURVE",
"443.333 702 OFFCURVE",
"466 702 CURVE SMOOTH",
"489.333 702 OFFCURVE",
"508 702 OFFCURVE",
"522 702 CURVE",
"16 7 LINE",
"20 0 LINE"
);
},
{
closed = 1;
nodes = (
"360 764 LINE",
"466 927 LINE",
"453 934 LINE",
"353 830 LINE",
"252 934 LINE",
"239 927 LINE",
"345 764 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
49 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
18 49 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
47 49 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 694;
}
);
note = Zcaron;
unicode = 017D;
},
{
glyphname = zcaron;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"424 -3 LINE",
"437 149 LINE",
"427 150 LINE",
"402.362 73.007 OFFCURVE",
"374.611 19 OFFCURVE",
"274 19 CURVE SMOOTH",
"123 19 LINE",
"405 463 LINE",
"404 472 LINE",
"376 472 OFFCURVE",
"350.5 471.833 OFFCURVE",
"327.5 471.5 CURVE SMOOTH",
"304.5 471.167 OFFCURVE",
"281.667 471 OFFCURVE",
"259 471 CURVE SMOOTH",
"236.333 471 OFFCURVE",
"212.667 471 OFFCURVE",
"188 471 CURVE SMOOTH",
"163.333 471 OFFCURVE",
"135 471 OFFCURVE",
"103 471 CURVE SMOOTH",
"66.716 471 OFFCURVE",
"50.112 476.776 OFFCURVE",
"44 489 CURVE",
"35 488 LINE",
"17 350 LINE",
"27 348 LINE",
"54.898 428.904 OFFCURVE",
"70.763 453 OFFCURVE",
"165 453 CURVE SMOOTH",
"300 453 LINE",
"21 8 LINE",
"24 1 LINE",
"55.333 1 OFFCURVE",
"83 1 OFFCURVE",
"107 1 CURVE SMOOTH",
"131.667 1 OFFCURVE",
"155.833 1.167 OFFCURVE",
"179.5 1.5 CURVE SMOOTH",
"203.167 1.833 OFFCURVE",
"227.667 2 OFFCURVE",
"253 2 CURVE SMOOTH",
"278.333 2 OFFCURVE",
"307.333 2 OFFCURVE",
"340 2 CURVE SMOOTH",
"348 2 OFFCURVE",
"356 2 OFFCURVE",
"364 2 CURVE SMOOTH",
"376.57 2 OFFCURVE",
"412.157 1.264 OFFCURVE",
"415 -3 CURVE"
);
},
{
closed = 1;
nodes = (
"224 516 LINE",
"319 686 LINE",
"307 693 LINE",
"216 582 LINE",
"126 693 LINE",
"114 686 LINE",
"209 516 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
39 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
41 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
44 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
48 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
52 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
14 52 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
37 52 1 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 433;
}
);
note = zcaron;
unicode = 017E;
},
{
glyphname = onehalf;
lastChange = "2020-12-31 20:30:39 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"405 -173 LINE",
"446 -62 LINE",
"435 -58 LINE",
"421.848 -87.593 OFFCURVE",
"409.541 -110 OFFCURVE",
"358 -110 CURVE SMOOTH",
"211 -110 LINE",
"211 -109 LINE",
"291.52 -46.374 OFFCURVE",
"378 5.515 OFFCURVE",
"378 101 CURVE SMOOTH",
"378 155.667 OFFCURVE",
"335.667 193 OFFCURVE",
"277 193 CURVE SMOOTH",
"197.201 193 OFFCURVE",
"141.923 132.115 OFFCURVE",
"107 71 CURVE",
"117 66 LINE",
"143.667 104.667 OFFCURVE",
"181 135 OFFCURVE",
"233 135 CURVE SMOOTH",
"285 135 OFFCURVE",
"311 97.667 OFFCURVE",
"311 55 CURVE SMOOTH",
"311 -18.529 OFFCURVE",
"193.227 -108.036 OFFCURVE",
"122 -164 CURVE",
"123 -173 LINE"
);
},
{
closed = 1;
nodes = (
"468 247 LINE",
"468 274 LINE",
"36 274 LINE",
"36 247 LINE"
);
},
{
closed = 1;
nodes = (
"293 689 LINE",
"151 689 LINE",
"151 678 LINE",
"179.527 678 OFFCURVE",
"222 668.72 OFFCURVE",
"222 646 CURVE SMOOTH",
"222 376 LINE SMOOTH",
"222 353.329 OFFCURVE",
"181.906 343 OFFCURVE",
"154 343 CURVE",
"154 332 LINE",
"364 332 LINE",
"364 343 LINE",
"337.25 343 OFFCURVE",
"293 350.269 OFFCURVE",
"293 375 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
69 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
11 5 24 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
60 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 60 122 60 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 60 25 60 41 60 57 60 73 60 89 60 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
39 3 66 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
48 3 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
0 2 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2020-12-31 20:30:55 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"336 -192 LINE",
"336 -76 LINE",
"430 -76 LINE",
"430 -29 LINE",
"334 -29 LINE",
"334 207 LINE",
"321 207 LINE",
"104 -27 LINE",
"74 -69 LINE",
"76 -76 LINE",
"270 -76 LINE",
"270 -192 LINE"
);
},
{
closed = 1;
nodes = (
"270 128 LINE",
"270 -29 LINE",
"122 -29 LINE"
);
},
{
closed = 1;
nodes = (
"468 247 LINE",
"468 274 LINE",
"36 274 LINE",
"36 247 LINE"
);
},
{
closed = 1;
nodes = (
"293 689 LINE",
"151 689 LINE",
"151 678 LINE",
"179.527 678 OFFCURVE",
"222 668.72 OFFCURVE",
"222 646 CURVE SMOOTH",
"222 376 LINE SMOOTH",
"222 353.329 OFFCURVE",
"181.906 343 OFFCURVE",
"154 343 CURVE",
"154 332 LINE",
"364 332 LINE",
"364 343 LINE",
"337.25 343 OFFCURVE",
"293 350.269 OFFCURVE",
"293 375 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
11 5 24 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
11 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
44 24 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
34 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
46 24 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
33 3 32 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
0 2 1 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
44 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
45 41 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
46 41 17 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = onesuperior;
lastChange = "2020-12-31 20:31:07 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"133 689 LINE",
"-9 689 LINE",
"-9 678 LINE",
"20 678 OFFCURVE",
"62 669 OFFCURVE",
"62 646 CURVE SMOOTH",
"62 376 LINE SMOOTH",
"62 353 OFFCURVE",
"22 343 OFFCURVE",
"-6 343 CURVE",
"-6 332 LINE",
"204 332 LINE",
"204 343 LINE",
"177 343 OFFCURVE",
"133 350 OFFCURVE",
"133 375 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
10 5 30 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 201;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = threequarters;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"336 -192 LINE",
"336 -76 LINE",
"430 -76 LINE",
"430 -29 LINE",
"334 -29 LINE",
"334 207 LINE",
"321 207 LINE",
"104 -27 LINE",
"74 -69 LINE",
"76 -76 LINE",
"270 -76 LINE",
"270 -192 LINE"
);
},
{
closed = 1;
nodes = (
"270 128 LINE",
"270 -29 LINE",
"122 -29 LINE"
);
},
{
closed = 1;
nodes = (
"468 247 LINE",
"468 274 LINE",
"36 274 LINE",
"36 247 LINE"
);
},
{
closed = 1;
nodes = (
"316.279 321 OFFCURVE",
"399 363.895 OFFCURVE",
"399 443 CURVE SMOOTH",
"399 493.641 OFFCURVE",
"344.913 528.696 OFFCURVE",
"296 545 CURVE",
"342.667 573 OFFCURVE",
"372 588.667 OFFCURVE",
"372 622 CURVE SMOOTH",
"372 670.573 OFFCURVE",
"321.779 706 OFFCURVE",
"266 706 CURVE SMOOTH",
"209.309 706 OFFCURVE",
"151.536 667.932 OFFCURVE",
"149 602 CURVE",
"158 601 LINE",
"171.333 643.667 OFFCURVE",
"208.333 658 OFFCURVE",
"243 658 CURVE SMOOTH",
"280.333 658 OFFCURVE",
"307 635.667 OFFCURVE",
"307 605 CURVE SMOOTH",
"307 562.333 OFFCURVE",
"282 540.333 OFFCURVE",
"230 507 CURVE",
"231 500 LINE",
"297.667 490.667 OFFCURVE",
"333 460 OFFCURVE",
"333 412 CURVE SMOOTH",
"333 365.49 OFFCURVE",
"285.274 337 OFFCURVE",
"259 337 CURVE SMOOTH",
"206.679 337 OFFCURVE",
"194.034 373.939 OFFCURVE",
"174 410 CURVE",
"153.333 410 OFFCURVE",
"140 406.333 OFFCURVE",
"134 399 CURVE SMOOTH",
"128 391.667 OFFCURVE",
"125 384.333 OFFCURVE",
"125 377 CURVE SMOOTH",
"125 343.667 OFFCURVE",
"169.667 321 OFFCURVE",
"231 321 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
59 5 69 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
5 69 59 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
25 69 59 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
106 25 122 25 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 25 25 25 41 25 57 25 73 25 89 25 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
8 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
67 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
67 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
68 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
66 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
13 3 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
58 3 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
37 4 53 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
54 2 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
64 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
69 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = threesuperior;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"169.946 293 OFFCURVE",
"235 335.633 OFFCURVE",
"235 408 CURVE SMOOTH",
"235 456.042 OFFCURVE",
"190.199 491.293 OFFCURVE",
"154 508 CURVE",
"183.333 533.333 OFFCURVE",
"199 551.333 OFFCURVE",
"211 570 CURVE SMOOTH",
"213.667 574 OFFCURVE",
"215 583.333 OFFCURVE",
"215 586 CURVE SMOOTH",
"215 631.333 OFFCURVE",
"172 659 OFFCURVE",
"124 659 CURVE SMOOTH",
"71.729 659 OFFCURVE",
"27 624.121 OFFCURVE",
"27 566 CURVE",
"35 566 LINE",
"47 604.667 OFFCURVE",
"78.667 618 OFFCURVE",
"108 618 CURVE SMOOTH",
"140 618 OFFCURVE",
"166 600.333 OFFCURVE",
"166 571 CURVE SMOOTH",
"166 525.667 OFFCURVE",
"139 505.667 OFFCURVE",
"99 479 CURVE",
"102 472 LINE",
"151.333 461.333 OFFCURVE",
"186 425.667 OFFCURVE",
"186 379 CURVE SMOOTH",
"186 331.713 OFFCURVE",
"144.833 308 OFFCURVE",
"121 308 CURVE SMOOTH",
"74.098 308 OFFCURVE",
"60.888 340.298 OFFCURVE",
"49 372 CURVE",
"21 372 OFFCURVE",
"11 358.333 OFFCURVE",
"11 345 CURVE SMOOTH",
"11 314.333 OFFCURVE",
"48.333 293 OFFCURVE",
"99 293 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 5 33 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 5 values pushed */
106 33 122 33 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 33 25 33 41 33 57 33 73 33 89 33 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
49 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
14 3 23 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 242;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = twosuperior;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"237 394 LINE",
"274 468 LINE",
"265 472 LINE",
"255.667 456 OFFCURVE",
"247 437 OFFCURVE",
"207 437 CURVE SMOOTH",
"111 437 LINE",
"111 439 LINE",
"162.247 473.941 OFFCURVE",
"194.145 502.003 OFFCURVE",
"224 540 CURVE",
"230.667 549.333 OFFCURVE",
"233 566.333 OFFCURVE",
"233 573 CURVE SMOOTH",
"233 628.37 OFFCURVE",
"188.931 659 OFFCURVE",
"135 659 CURVE SMOOTH",
"79 659 OFFCURVE",
"32.333 623.333 OFFCURVE",
"31 558 CURVE",
"39 558 LINE",
"52.333 599.333 OFFCURVE",
"83.333 617 OFFCURVE",
"118 617 CURVE SMOOTH",
"156.667 617 OFFCURVE",
"182 592.667 OFFCURVE",
"182 558 CURVE SMOOTH",
"182 487.937 OFFCURVE",
"85.8 434.305 OFFCURVE",
"30 402 CURVE",
"32 394 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
14 5 29 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
106 29 122 29 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 29 25 29 41 29 57 29 73 29 89 29 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
5 3 35 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
19 3 26 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 267;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = brokenbar;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"142 389 LINE",
"142 784 LINE",
"101 784 LINE",
"101 389 LINE"
);
},
{
closed = 1;
nodes = (
"142 -135 LINE",
"142 259 LINE",
"101 259 LINE",
"101 -135 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */
1 2 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 243;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = multiply;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"351 234 LINE",
"517 66 LINE",
"544 94 LINE",
"376 260 LINE",
"544 426 LINE",
"516 454 LINE",
"350 286 LINE",
"184 454 LINE",
"156 427 LINE",
"324 261 LINE",
"156 94 LINE",
"184 66 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = eth;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"385.198 -3 OFFCURVE",
"482 116.505 OFFCURVE",
"482 277 CURVE SMOOTH",
"482 422.342 OFFCURVE",
"400.213 551.981 OFFCURVE",
"286 639 CURVE",
"379 701 LINE",
"362 721 LINE",
"265 653 LINE",
"205 690.333 OFFCURVE",
"148 716.333 OFFCURVE",
"88 727 CURVE",
"84 713 LINE",
"130.667 694.333 OFFCURVE",
"179 666.667 OFFCURVE",
"223 624 CURVE",
"109 551 LINE",
"124 530 LINE",
"239 609 LINE",
"276.666 574.024 OFFCURVE",
"329.897 498.378 OFFCURVE",
"345 443 CURVE",
"322.333 449.667 OFFCURVE",
"291.333 459 OFFCURVE",
"242 459 CURVE SMOOTH",
"111.339 459 OFFCURVE",
"19 361.235 OFFCURVE",
"19 239 CURVE SMOOTH",
"19 104.534 OFFCURVE",
"113.423 -3 OFFCURVE",
"251 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"166.333 11 OFFCURVE",
"111 84.667 OFFCURVE",
"111 210 CURVE SMOOTH",
"111 320.873 OFFCURVE",
"156.94 438 OFFCURVE",
"266 438 CURVE SMOOTH",
"293.133 438 OFFCURVE",
"339.725 424.093 OFFCURVE",
"351 410 CURVE SMOOTH",
"379.227 374.075 OFFCURVE",
"392 290.372 OFFCURVE",
"392 233 CURVE SMOOTH",
"392 90.333 OFFCURVE",
"341 11 OFFCURVE",
"249 11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
62 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
62 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 31 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 2 values pushed */
47 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 47 22 47 38 47 54 47 70 47 86 47 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 47 117 47 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
23 31 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
41 6 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 41 122 41 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 41 25 41 41 41 57 41 73 41 89 41 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
7 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
36 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
26 1 52 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
26 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
5 36 11 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
23 52 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 502;
}
);
note = eth;
unicode = 00F0;
},
{
glyphname = gid251;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 105;
}
);
note = gid251;
},
{
glyphname = gid252;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"351 234 LINE",
"517 66 LINE",
"544 94 LINE",
"376 260 LINE",
"544 426 LINE",
"516 454 LINE",
"350 286 LINE",
"184 454 LINE",
"156 427 LINE",
"324 261 LINE",
"156 94 LINE",
"184 66 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
}
);
note = gid252;
},
{
glyphname = gid253;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 210;
}
);
note = gid253;
},
{
glyphname = gid254;
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 0;
}
);
note = gid254;
},
{
glyphname = featheredleftarrow;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"280 106 LINE",
"274.709 137.749 OFFCURVE",
"210.297 212.509 OFFCURVE",
"173 252 CURVE",
"544 252 LINE",
"714 121 LINE",
"750 121 LINE",
"580 253 LINE",
"610 253 LINE",
"781 121 LINE",
"818 121 LINE",
"647 253 LINE",
"678 253 LINE",
"849 121 LINE",
"886 121 LINE",
"715 253 LINE",
"746 253 LINE",
"917 121 LINE",
"953 121 LINE",
"780 253 LINE",
"807 253 LINE",
"807 271 LINE",
"780 271 LINE",
"953 403 LINE",
"917 403 LINE",
"746 271 LINE",
"715 271 LINE",
"886 403 LINE",
"849 403 LINE",
"678 271 LINE",
"647 271 LINE",
"818 403 LINE",
"781 403 LINE",
"610 271 LINE",
"580 271 LINE",
"750 403 LINE",
"714 403 LINE",
"544 272 LINE",
"173 272 LINE",
"210.109 311.292 OFFCURVE",
"274.807 388.842 OFFCURVE",
"280 420 CURVE",
"274 424 LINE",
"183.934 353.636 OFFCURVE",
"147.286 327.092 OFFCURVE",
"42 265 CURVE",
"42 261 LINE",
"130.761 209.223 OFFCURVE",
"189.416 166.682 OFFCURVE",
"274 102 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
51 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
19 4 45 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
18 4 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
2 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
3 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
4 45 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
8 45 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
12 45 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
18 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
16 45 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
32 45 19 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
48 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
50 37 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
54 37 26 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1000;
}
);
note = featheredleftarrow;
},
{
glyphname = softhyphen;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"294 331 LINE",
"294 399 LINE",
"23 399 LINE",
"23 331 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 318;
}
);
note = softhyphen;
unicode = 00AD;
},
{
glyphname = ffl;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"244 0 LINE",
"244 10 LINE",
"215.58 15.684 OFFCURVE",
"173.523 10.384 OFFCURVE",
"168 38 CURVE",
"168 429 LINE",
"355 429 LINE",
"355 42 LINE SMOOTH",
"355 21.56 OFFCURVE",
"308.508 12.459 OFFCURVE",
"279 10 CURVE",
"279 0 LINE",
"515 0 LINE",
"515 10 LINE",
"485.519 15.896 OFFCURVE",
"443.485 10.576 OFFCURVE",
"438 38 CURVE",
"438 431 LINE",
"625 431 LINE",
"625 43 LINE SMOOTH",
"625 32.333 OFFCURVE",
"620.333 24.833 OFFCURVE",
"611 20.5 CURVE SMOOTH",
"601.667 16.167 OFFCURVE",
"581.667 13 OFFCURVE",
"551 11 CURVE",
"551 0 LINE",
"782 0 LINE",
"782 11 LINE",
"756.667 13.667 OFFCURVE",
"738 16 OFFCURVE",
"726 18 CURVE SMOOTH",
"714 20 OFFCURVE",
"708 26.333 OFFCURVE",
"708 37 CURVE SMOOTH",
"708 730 LINE",
"702 730 LINE",
"677 695 LINE",
"654.333 711 OFFCURVE",
"617.667 725 OFFCURVE",
"567 725 CURVE SMOOTH",
"505.667 725 OFFCURVE",
"456.667 695.667 OFFCURVE",
"422 657 CURVE",
"403.333 697 OFFCURVE",
"367.667 723 OFFCURVE",
"297 723 CURVE SMOOTH",
"213.355 723 OFFCURVE",
"132.02 669.381 OFFCURVE",
"100 592 CURVE SMOOTH",
"88 562.667 OFFCURVE",
"86 528 OFFCURVE",
"86 472 CURVE",
"29 472 LINE",
"13 429 LINE",
"85 429 LINE",
"85 42 LINE SMOOTH",
"85 21.56 OFFCURVE",
"38.508 12.459 OFFCURVE",
"9 10 CURVE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"168 484 OFFCURVE",
"168 493.333 OFFCURVE",
"168 500 CURVE SMOOTH",
"168 512.642 OFFCURVE",
"170.905 552.091 OFFCURVE",
"172 574 CURVE",
"180.794 677.324 OFFCURVE",
"236.417 705 OFFCURVE",
"278 705 CURVE",
"323.974 697.741 OFFCURVE",
"353.04 648.757 OFFCURVE",
"357 625 CURVE",
"357 472 LINE",
"168 472 LINE"
);
},
{
closed = 1;
nodes = (
"438 484 OFFCURVE",
"438 493.667 OFFCURVE",
"438 501 CURVE SMOOTH",
"438 512.122 OFFCURVE",
"440.19 559.791 OFFCURVE",
"441 576 CURVE SMOOTH",
"447.674 680.567 OFFCURVE",
"509.488 706 OFFCURVE",
"549 706 CURVE",
"585 691.333 OFFCURVE",
"607.333 668.667 OFFCURVE",
"626 638 CURVE",
"626 472 LINE",
"438 472 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
42 5 27 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
160 43 176 43 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
255 43 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
79 43 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
128 43 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
0 43 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
58 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
160 59 176 59 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
255 59 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
79 59 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
0 59 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 3 values pushed */
128 59 1 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
5 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
13 43 58 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
65 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
66 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
68 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
72 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
81 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
81 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
82 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
100 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
10 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
24 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
65 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
65 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
81 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
81 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
50 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
13 0 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
26 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
42 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
59 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 792;
}
);
note = ffl;
unicode = FB04;
},
{
glyphname = horizontalbar;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"575 241 LINE",
"575 281 LINE",
"125 281 LINE",
"125 241 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 700;
}
);
note = horizontalbar;
unicode = 2015;
},
{
glyphname = ff;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"244 0 LINE",
"244 10 LINE",
"216.512 12.749 OFFCURVE",
"173.237 17.053 OFFCURVE",
"168 38 CURVE",
"168 429 LINE",
"354 429 LINE",
"354 42 LINE SMOOTH",
"354 21.502 OFFCURVE",
"308.319 12.443 OFFCURVE",
"279 10 CURVE",
"279 0 LINE",
"523 0 LINE",
"523 10 LINE",
"492.898 16.02 OFFCURVE",
"442.47 10.651 OFFCURVE",
"437 38 CURVE",
"437 429 LINE",
"540 429 LINE",
"556 472 LINE",
"438 472 LINE",
"438 484 OFFCURVE",
"438 495 OFFCURVE",
"438 505 CURVE SMOOTH",
"438 515 OFFCURVE",
"438 524.667 OFFCURVE",
"438 534 CURVE SMOOTH",
"438 554 OFFCURVE",
"438.667 574.333 OFFCURVE",
"440 601 CURVE SMOOTH",
"444.467 676.941 OFFCURVE",
"479.975 700 OFFCURVE",
"511 700 CURVE",
"552.602 691.085 OFFCURVE",
"557.695 634 OFFCURVE",
"606 634 CURVE SMOOTH",
"631.333 634 OFFCURVE",
"648 652 OFFCURVE",
"648 676 CURVE SMOOTH",
"648 712.498 OFFCURVE",
"605.541 728 OFFCURVE",
"566 728 CURVE SMOOTH",
"507.333 728 OFFCURVE",
"452.667 705.333 OFFCURVE",
"414 672 CURVE",
"403.333 702.667 OFFCURVE",
"365 723 OFFCURVE",
"297 723 CURVE SMOOTH",
"213.355 723 OFFCURVE",
"132.02 669.381 OFFCURVE",
"100 592 CURVE SMOOTH",
"88 562.667 OFFCURVE",
"86 528 OFFCURVE",
"86 472 CURVE",
"29 472 LINE",
"13 429 LINE",
"85 429 LINE",
"85 42 LINE SMOOTH",
"85 21.56 OFFCURVE",
"38.508 12.459 OFFCURVE",
"9 10 CURVE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"168 484 OFFCURVE",
"168 493.333 OFFCURVE",
"168 500 CURVE SMOOTH",
"168 512.642 OFFCURVE",
"170.905 552.091 OFFCURVE",
"172 574 CURVE SMOOTH",
"178.673 678.543 OFFCURVE",
"239.289 704 OFFCURVE",
"278 704 CURVE",
"335.355 696.519 OFFCURVE",
"326.937 632.482 OFFCURVE",
"375 624 CURVE",
"357.667 592 OFFCURVE",
"356 528 OFFCURVE",
"356 472 CURVE",
"168 472 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
37 5 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
53 5 38 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
8 38 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
22 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
58 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
58 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
60 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
60 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
63 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
63 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
76 38 53 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
79 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
79 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
80 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
82 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
86 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
86 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
19 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
55 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
79 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
79 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
29 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
29 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
45 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
73 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 73 121 73 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 73 24 73 40 73 56 73 72 73 88 73 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
8 5 73 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
19 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
21 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
53 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
76 29 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 539;
}
);
note = ff;
unicode = FB00;
},
{
glyphname = st;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"279.515 -2 OFFCURVE",
"366 43.069 OFFCURVE",
"366 146 CURVE SMOOTH",
"366 214 OFFCURVE",
"319.667 261.333 OFFCURVE",
"261 276 CURVE SMOOTH",
"248.333 279.333 OFFCURVE",
"232.667 283.167 OFFCURVE",
"214 287.5 CURVE SMOOTH",
"195.333 291.833 OFFCURVE",
"179 295.667 OFFCURVE",
"165 299 CURVE SMOOTH",
"125 309.667 OFFCURVE",
"93 326.667 OFFCURVE",
"93 376 CURVE SMOOTH",
"93 437.333 OFFCURVE",
"139 469 OFFCURVE",
"191 469 CURVE SMOOTH",
"213.667 469 OFFCURVE",
"233.667 464.667 OFFCURVE",
"251 456 CURVE",
"269.667 430.667 OFFCURVE",
"298 382.333 OFFCURVE",
"322 333 CURVE",
"330 335 LINE",
"322 463 LINE",
"261 480 LINE",
"244.629 510.013 OFFCURVE",
"235 527.442 OFFCURVE",
"235 577 CURVE SMOOTH",
"235 642.261 OFFCURVE",
"285.639 715 OFFCURVE",
"384 715 CURVE SMOOTH",
"474.828 715 OFFCURVE",
"528 659.939 OFFCURVE",
"528 586 CURVE SMOOTH",
"528 523.46 OFFCURVE",
"480.045 456.042 OFFCURVE",
"388 423 CURVE",
"388 412 LINE",
"456 412 LINE",
"456 380.667 OFFCURVE",
"456 349 OFFCURVE",
"456 317 CURVE SMOOTH",
"456 285.667 OFFCURVE",
"455.833 255.833 OFFCURVE",
"455.5 227.5 CURVE SMOOTH",
"455.167 199.167 OFFCURVE",
"455 173 OFFCURVE",
"455 149 CURVE SMOOTH",
"455 125 OFFCURVE",
"455 105 OFFCURVE",
"455 89 CURVE SMOOTH",
"455 36.624 OFFCURVE",
"509.529 -2 OFFCURVE",
"564 -2 CURVE SMOOTH",
"640.678 -2 OFFCURVE",
"686.973 41.918 OFFCURVE",
"704 93 CURVE",
"697 97 LINE",
"678.333 70.333 OFFCURVE",
"656.667 52 OFFCURVE",
"618 52 CURVE SMOOTH",
"571.333 52 OFFCURVE",
"539 81 OFFCURVE",
"539 149 CURVE SMOOTH",
"539 413 LINE",
"691 413 LINE",
"714 473 LINE",
"537 473 LINE",
"538.333 476.333 OFFCURVE",
"540.667 485.833 OFFCURVE",
"544 501.5 CURVE SMOOTH",
"547.333 517.167 OFFCURVE",
"549 536 OFFCURVE",
"549 558 CURVE SMOOTH",
"549 674.366 OFFCURVE",
"484.539 729 OFFCURVE",
"386 729 CURVE SMOOTH",
"286.513 729 OFFCURVE",
"218 658.734 OFFCURVE",
"218 576 CURVE SMOOTH",
"218 532 OFFCURVE",
"231.333 502.333 OFFCURVE",
"246 481 CURVE",
"234 482.333 OFFCURVE",
"212.667 483 OFFCURVE",
"190 483 CURVE SMOOTH",
"104.261 483 OFFCURVE",
"32 429.547 OFFCURVE",
"32 347 CURVE SMOOTH",
"32 287 OFFCURVE",
"65.667 242.333 OFFCURVE",
"115 225 CURVE SMOOTH",
"141.667 215.667 OFFCURVE",
"179.333 206.667 OFFCURVE",
"214 200 CURVE SMOOTH",
"256.667 190.667 OFFCURVE",
"286 163.333 OFFCURVE",
"286 122 CURVE SMOOTH",
"286 46 OFFCURVE",
"243 10 OFFCURVE",
"179 10 CURVE SMOOTH",
"100.839 10 OFFCURVE",
"58.46 94.553 OFFCURVE",
"35 162 CURVE",
"27 162 LINE",
"27 28 LINE",
"71 9.333 OFFCURVE",
"121.667 -2 OFFCURVE",
"179 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
61 5 25 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
61 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
52 5 34 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
52 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
119 5 94 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
119 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
87 94 119 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
87 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
218 87 234 87 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 87 25 87 41 87 57 87 73 87 89 87 105 87 121 87 137 87 153 87 169 87 185 87 201 87 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
17 43 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 13 values pushed */
6 52 22 52 38 52 54 52 70 52 86 52 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 52 117 52 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
6 61 22 61 38 61 54 61 70 61 86 61 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 61 117 61 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
94 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
96 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
94 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
99 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
99 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
94 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
101 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
101 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
122 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
64 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
72 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
72 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
106 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
106 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
17 47 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
93 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
106 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
115 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 115 23 115 39 115 55 115 71 115 87 115 103 115 119 115 135 115 151 115 167 115 183 115 199 115 215 115 231 115 247 115 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 115 23 115 39 115 55 115 71 115 87 115 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 115 118 115 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
93 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
119 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
120 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 692;
}
);
note = st;
unicode = FB06;
},
{
glyphname = blackdiamond;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"477 262 LINE",
"278 466 LINE",
"80 262 LINE",
"278 57 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 556;
}
);
note = blackdiamond;
unicode = 25C6;
},
{
glyphname = featheredrightarrow;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"760.039 127.286 OFFCURVE",
"813.852 168.189 OFFCURVE",
"840.5 187 CURVE SMOOTH",
"874.5 211 OFFCURVE",
"910 233 OFFCURVE",
"958 261 CURVE",
"958 265 LINE",
"852.714 327.092 OFFCURVE",
"816.066 353.636 OFFCURVE",
"726 424 CURVE",
"720 420 LINE",
"725.193 388.842 OFFCURVE",
"789.891 311.292 OFFCURVE",
"827 272 CURVE",
"456 272 LINE",
"286 403 LINE",
"250 403 LINE",
"420 271 LINE",
"390 271 LINE",
"219 403 LINE",
"182 403 LINE",
"353 271 LINE",
"322 271 LINE",
"151 403 LINE",
"114 403 LINE",
"285 271 LINE",
"254 271 LINE",
"83 403 LINE",
"47 403 LINE",
"220 271 LINE",
"193 271 LINE",
"193 253 LINE",
"220 253 LINE",
"47 121 LINE",
"83 121 LINE",
"254 253 LINE",
"285 253 LINE",
"114 121 LINE",
"151 121 LINE",
"322 253 LINE",
"353 253 LINE",
"182 121 LINE",
"219 121 LINE",
"390 253 LINE",
"420 253 LINE",
"250 121 LINE",
"286 121 LINE",
"456 252 LINE",
"827 252 LINE",
"789.703 212.509 OFFCURVE",
"725.291 137.749 OFFCURVE",
"720 106 CURVE",
"726 102 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
53 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
13 4 45 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
1 45 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
14 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
19 53 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
23 53 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
14 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
27 53 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
13 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
39 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
46 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
47 45 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1000;
}
);
note = featheredrightarrow;
unicode = 27B3;
},
{
glyphname = feathereddownarrow;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"250 -180 LINE",
"300.667 -94.667 OFFCURVE",
"353 -22 OFFCURVE",
"409 50 CURVE",
"405 56 LINE",
"374.023 50.837 OFFCURVE",
"297.049 -13.065 OFFCURVE",
"259 -49 CURVE",
"259 320 LINE",
"390 490 LINE",
"390 526 LINE",
"258 356 LINE",
"258 386 LINE",
"390 557 LINE",
"390 594 LINE",
"258 423 LINE",
"258 454 LINE",
"390 625 LINE",
"390 662 LINE",
"258 491 LINE",
"258 522 LINE",
"390 693 LINE",
"390 729 LINE",
"258 556 LINE",
"258 583 LINE",
"240 583 LINE",
"240 556 LINE",
"108 729 LINE",
"108 693 LINE",
"240 522 LINE",
"240 491 LINE",
"108 662 LINE",
"108 625 LINE",
"240 454 LINE",
"240 423 LINE",
"108 594 LINE",
"108 557 LINE",
"240 386 LINE",
"240 356 LINE",
"108 526 LINE",
"108 490 LINE",
"239 320 LINE",
"239 -49 LINE",
"201.14 -13.244 OFFCURVE",
"120.764 51.039 OFFCURVE",
"91 56 CURVE",
"87 50 LINE",
"110.972 17.69 OFFCURVE",
"149.772 -34.222 OFFCURVE",
"170 -63.5 CURVE SMOOTH",
"195.333 -100.167 OFFCURVE",
"219.333 -137.333 OFFCURVE",
"246 -180 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 7 39 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
40 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 25 values pushed */
15 40 31 40 47 40 63 40 79 40 95 40 111 40 127 40 143 40 159 40 175 40 191 40 12 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
223 40 239 40 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
8 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
14 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
22 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
22 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
24 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
25 39 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
29 39 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
33 39 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
37 39 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
41 39 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
40 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
53 39 7 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
8 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
52 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
21 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
26 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
26 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
6 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
9 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
10 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
13 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
14 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
17 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
18 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
22 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
25 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
29 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
30 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
33 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
34 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
37 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
38 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
41 52 21 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = feathereddownarrow;
},
{
glyphname = ampersand.alt;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"514.182 -2 OFFCURVE",
"668 116.539 OFFCURVE",
"668 286 CURVE SMOOTH",
"668 350 OFFCURVE",
"643.333 402.333 OFFCURVE",
"610 445 CURVE",
"612 447 LINE",
"650.667 432.333 OFFCURVE",
"677.667 427 OFFCURVE",
"727 427 CURVE SMOOTH",
"815.852 427 OFFCURVE",
"883 486.693 OFFCURVE",
"883 579 CURVE SMOOTH",
"883 657.155 OFFCURVE",
"819.142 716 OFFCURVE",
"748 716 CURVE SMOOTH",
"706.387 716 OFFCURVE",
"657 687.284 OFFCURVE",
"657 646 CURVE SMOOTH",
"657 612.667 OFFCURVE",
"677.333 586 OFFCURVE",
"712 586 CURVE SMOOTH",
"744 586 OFFCURVE",
"768 603.333 OFFCURVE",
"768 638 CURVE SMOOTH",
"768 656.667 OFFCURVE",
"752.333 672.333 OFFCURVE",
"735 675 CURVE",
"734 679 LINE",
"740.667 685.667 OFFCURVE",
"746.333 692 OFFCURVE",
"765 692 CURVE SMOOTH",
"813 692 OFFCURVE",
"848 674.333 OFFCURVE",
"848 605 CURVE SMOOTH",
"848 526.084 OFFCURVE",
"774.94 511 OFFCURVE",
"718 511 CURVE SMOOTH",
"709.333 511 OFFCURVE",
"702 511 OFFCURVE",
"696 511 CURVE SMOOTH",
"690.667 511 OFFCURVE",
"685.167 511.167 OFFCURVE",
"679.5 511.5 CURVE SMOOTH",
"673.833 511.833 OFFCURVE",
"667 512 OFFCURVE",
"659 512 CURVE SMOOTH",
"651.667 512 OFFCURVE",
"641.333 512 OFFCURVE",
"628 512 CURVE SMOOTH",
"581.333 512 OFFCURVE",
"531.667 500 OFFCURVE",
"489 476 CURVE SMOOTH",
"435.667 445.333 OFFCURVE",
"412 414.667 OFFCURVE",
"412 372 CURVE SMOOTH",
"412 328 OFFCURVE",
"442.667 290 OFFCURVE",
"488 290 CURVE SMOOTH",
"526.667 290 OFFCURVE",
"558 314.333 OFFCURVE",
"558 353 CURVE SMOOTH",
"558 381 OFFCURVE",
"542 407 OFFCURVE",
"510 407 CURVE SMOOTH",
"483.333 407 OFFCURVE",
"460 393.667 OFFCURVE",
"460 363 CURVE SMOOTH",
"460 344.333 OFFCURVE",
"469 337.667 OFFCURVE",
"489 323 CURVE",
"488 319 LINE",
"481.333 316.333 OFFCURVE",
"476.667 316 OFFCURVE",
"470 316 CURVE SMOOTH",
"443.333 316 OFFCURVE",
"426 339 OFFCURVE",
"426 367 CURVE SMOOTH",
"426 429.562 OFFCURVE",
"479.759 454 OFFCURVE",
"542 454 CURVE SMOOTH",
"607.697 454 OFFCURVE",
"630 402.826 OFFCURVE",
"630 333 CURVE SMOOTH",
"630 250.318 OFFCURVE",
"582.937 163.97 OFFCURVE",
"488 119 CURVE SMOOTH",
"446.667 99 OFFCURVE",
"392.667 90 OFFCURVE",
"334 90 CURVE SMOOTH",
"207.614 90 OFFCURVE",
"78 170.154 OFFCURVE",
"78 297 CURVE SMOOTH",
"78 363.254 OFFCURVE",
"124.757 435 OFFCURVE",
"173 435 CURVE SMOOTH",
"179.667 435 OFFCURVE",
"184.167 434.833 OFFCURVE",
"186.5 434.5 CURVE SMOOTH",
"188.833 434.167 OFFCURVE",
"191.333 433.667 OFFCURVE",
"194 433 CURVE",
"222.378 404.622 OFFCURVE",
"251.319 354 OFFCURVE",
"281 354 CURVE SMOOTH",
"299.667 354 OFFCURVE",
"315 366.667 OFFCURVE",
"315 384 CURVE SMOOTH",
"315 438.951 OFFCURVE",
"241.366 449 OFFCURVE",
"200 449 CURVE",
"182.667 465 OFFCURVE",
"180 493 OFFCURVE",
"180 525 CURVE SMOOTH",
"180 605.208 OFFCURVE",
"239.809 685 OFFCURVE",
"315 685 CURVE SMOOTH",
"356.333 685 OFFCURVE",
"386 671 OFFCURVE",
"386 635 CURVE SMOOTH",
"386 628.333 OFFCURVE",
"383.667 621.667 OFFCURVE",
"379 615 CURVE",
"377 615 LINE",
"369.667 627 OFFCURVE",
"358.333 633 OFFCURVE",
"343 633 CURVE SMOOTH",
"317.667 633 OFFCURVE",
"301 610.667 OFFCURVE",
"301 588 CURVE SMOOTH",
"301 564 OFFCURVE",
"324 544 OFFCURVE",
"348 544 CURVE SMOOTH",
"381.333 544 OFFCURVE",
"408 568.333 OFFCURVE",
"408 603 CURVE SMOOTH",
"408 670.305 OFFCURVE",
"362.988 721 OFFCURVE",
"281 721 CURVE SMOOTH",
"202.256 721 OFFCURVE",
"135 650.9 OFFCURVE",
"135 566 CURVE SMOOTH",
"135 514.79 OFFCURVE",
"158.876 479.796 OFFCURVE",
"182 448 CURVE",
"124.11 448 OFFCURVE",
"20 394.303 OFFCURVE",
"20 270 CURVE SMOOTH",
"20 198 OFFCURVE",
"51.667 129.667 OFFCURVE",
"109 79 CURVE SMOOTH",
"166.333 28.333 OFFCURVE",
"247.667 -2 OFFCURVE",
"345 -2 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
89 5 155 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
89 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
113 5 145 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
113 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
165 76 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
165 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
50 7 44 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
50 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
0 26 3 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 5 values pushed */
218 76 234 76 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 76 25 76 41 76 57 76 73 76 89 76 105 76 121 76 137 76 153 76 169 76 185 76 201 76 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
10 76 165 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
106 10 122 10 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 10 25 10 41 10 57 10 73 10 89 10 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 2 values pushed */
16 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
20 10 16 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 5 values pushed */
218 26 234 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 26 25 26 41 26 57 26 73 26 89 26 105 26 121 26 137 26 153 26 169 26 185 26 201 26 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
106 44 122 44 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 44 25 44 41 44 57 44 73 44 89 44 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
6 89 22 89 38 89 54 89 70 89 86 89 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 89 117 89 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
6 113 22 113 38 113 54 113 70 113 86 113 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 113 117 113 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
124 155 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
135 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
135 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
150 155 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
169 155 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
140 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
140 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
160 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
160 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
33 3 71 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
53 4 47 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
53 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
13 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
20 5 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
23 2 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
33 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
160 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
84 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 84 23 84 39 84 55 84 71 84 87 84 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 84 118 84 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
71 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
110 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
110 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
23 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
118 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
118 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
124 5 13 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
132 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
150 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
150 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
172 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
169 31 172 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 850;
}
);
note = ampersand.alt;
},
{
glyphname = feathereduparrow;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"240 -8 LINE",
"240 -35 LINE",
"258 -35 LINE",
"258 -8 LINE",
"390 -181 LINE",
"390 -145 LINE",
"258 24 LINE",
"258 55 LINE",
"390 -114 LINE",
"390 -77 LINE",
"258 92 LINE",
"258 123 LINE",
"390 -46 LINE",
"390 -9 LINE",
"258 160 LINE",
"258 190 LINE",
"390 20 LINE",
"390 56 LINE",
"259 226 LINE",
"259 597 LINE",
"298.292 559.891 OFFCURVE",
"375.842 495.193 OFFCURVE",
"407 490 CURVE",
"411 496 LINE",
"354.151 569.43 OFFCURVE",
"295.603 652.906 OFFCURVE",
"252 728 CURVE",
"248 728 LINE",
"196 640 OFFCURVE",
"145 569.333 OFFCURVE",
"89 496 CURVE",
"93 490 LINE",
"124.749 495.291 OFFCURVE",
"199.509 559.703 OFFCURVE",
"239 597 CURVE",
"239 226 LINE",
"108 56 LINE",
"108 20 LINE",
"240 190 LINE",
"240 160 LINE",
"108 -9 LINE",
"108 -46 LINE",
"240 123 LINE",
"240 92 LINE",
"108 -77 LINE",
"108 -114 LINE",
"240 55 LINE",
"240 24 LINE",
"108 -145 LINE",
"108 -181 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
49 7 17 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
5 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
6 17 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 25 values pushed */
15 15 31 15 47 15 63 15 79 15 95 15 111 15 127 15 143 15 159 15 175 15 191 15 12 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
223 15 239 15 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
50 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
223 16 239 16 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 25 values pushed */
15 16 31 16 47 16 63 16 79 16 95 16 111 16 127 16 143 16 159 16 175 16 191 16 12 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
19 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
27 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
29 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
15 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
31 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
33 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
33 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
34 17 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
48 7 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
38 17 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
39 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
41 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
41 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
42 17 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
43 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
49 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
45 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
45 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
46 17 49 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
35 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
5 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
15 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
18 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
19 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
22 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
23 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
26 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
27 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
31 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
34 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
38 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
39 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
42 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
43 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
46 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
47 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
50 30 5 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 500;
}
);
note = feathereduparrow;
},
{
glyphname = Q.alt;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"1093.667 -206.667 OFFCURVE",
"1194 -174 OFFCURVE",
"1250 -130 CURVE",
"1244 -120 LINE",
"1226.492 -132.506 OFFCURVE",
"1179.201 -151 OFFCURVE",
"1152 -151 CURVE SMOOTH",
"1068 -151 OFFCURVE",
"989.5 -131.167 OFFCURVE",
"907.5 -102.5 CURVE SMOOTH",
"841.164 -79.309 OFFCURVE",
"718.25 -27.821 OFFCURVE",
"642 0 CURVE",
"608.667 10.667 OFFCURVE",
"575.333 19 OFFCURVE",
"542 27 CURVE",
"542 29 LINE",
"678.627 93.295 OFFCURVE",
"779 213.858 OFFCURVE",
"779 366 CURVE SMOOTH",
"779 462 OFFCURVE",
"744.667 553.333 OFFCURVE",
"682 620 CURVE SMOOTH",
"619.333 686.667 OFFCURVE",
"528.333 730 OFFCURVE",
"415 730 CURVE SMOOTH",
"319 730 OFFCURVE",
"229.667 701 OFFCURVE",
"159 641 CURVE SMOOTH",
"72.333 567 OFFCURVE",
"29 473.667 OFFCURVE",
"29 361 CURVE SMOOTH",
"29 266.333 OFFCURVE",
"61.333 187.333 OFFCURVE",
"116 126 CURVE SMOOTH",
"170.667 64.667 OFFCURVE",
"246.333 20 OFFCURVE",
"333 0 CURVE",
"333.624 -0.218 OFFCURVE",
"457.626 -44.209 OFFCURVE",
"457 -44 CURVE",
"517 -65.333 OFFCURVE",
"561.667 -82.5 OFFCURVE",
"607 -100.5 CURVE SMOOTH",
"642.435 -114.57 OFFCURVE",
"712.758 -142.916 OFFCURVE",
"759 -159 CURVE SMOOTH",
"840.127 -189.422 OFFCURVE",
"901.128 -208 OFFCURVE",
"983 -208 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"327 5 OFFCURVE",
"263.833 47.5 OFFCURVE",
"220.5 113.5 CURVE SMOOTH",
"177.167 179.5 OFFCURVE",
"153 267.333 OFFCURVE",
"153 358 CURVE SMOOTH",
"153 444.667 OFFCURVE",
"171.833 533.333 OFFCURVE",
"212.5 600 CURVE SMOOTH",
"253.167 666.667 OFFCURVE",
"316.333 713 OFFCURVE",
"403 713 CURVE SMOOTH",
"569.389 713 OFFCURVE",
"655 532.733 OFFCURVE",
"655 365 CURVE SMOOTH",
"655 196.863 OFFCURVE",
"581.235 23.204 OFFCURVE",
"407 5 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
30 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
30 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
74 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
15 30 20 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
30 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
63 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 63 22 63 38 63 54 63 70 63 86 63 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 63 117 63 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
28 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
53 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 53 122 53 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 53 25 53 41 53 57 53 73 53 89 53 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
25 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
6 3 50 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 808;
}
);
note = Q.alt;
},
{
glyphname = ampersand.small;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"322.485 -8 OFFCURVE",
"368.569 45.426 OFFCURVE",
"429 126 CURVE",
"459.912 38.885 OFFCURVE",
"497.511 -7 OFFCURVE",
"590 -7 CURVE SMOOTH",
"659.257 -7 OFFCURVE",
"713 44.574 OFFCURVE",
"713 127 CURVE SMOOTH",
"713 136.333 OFFCURVE",
"712.333 144.667 OFFCURVE",
"711 154 CURVE",
"701 154 LINE",
"701 91.333 OFFCURVE",
"667.333 58 OFFCURVE",
"610 58 CURVE SMOOTH",
"574 58 OFFCURVE",
"549.333 76.333 OFFCURVE",
"528 115 CURVE SMOOTH",
"520 130.333 OFFCURVE",
"512.833 144.5 OFFCURVE",
"506.5 157.5 CURVE SMOOTH",
"500.167 170.5 OFFCURVE",
"492 184.667 OFFCURVE",
"482 200 CURVE",
"500 223.333 OFFCURVE",
"516 244.833 OFFCURVE",
"530 264.5 CURVE SMOOTH",
"544 284.167 OFFCURVE",
"556.667 300.667 OFFCURVE",
"568 314 CURVE SMOOTH",
"613.221 364.541 OFFCURVE",
"639.73 377.932 OFFCURVE",
"704 394 CURVE",
"704 404 LINE",
"457 404 LINE",
"457 392 LINE",
"507.667 392 OFFCURVE",
"546 375 OFFCURVE",
"546 339 CURVE SMOOTH",
"546 303.25 OFFCURVE",
"504.63 251.976 OFFCURVE",
"475 210 CURVE",
"447.219 244.727 OFFCURVE",
"423.656 269.981 OFFCURVE",
"371 310 CURVE SMOOTH",
"336.333 336.667 OFFCURVE",
"307.333 353.333 OFFCURVE",
"270 376 CURVE",
"344.905 376 OFFCURVE",
"415 420.26 OFFCURVE",
"415 497 CURVE SMOOTH",
"415 575.996 OFFCURVE",
"344.188 613 OFFCURVE",
"260 613 CURVE SMOOTH",
"179.341 613 OFFCURVE",
"104 553.902 OFFCURVE",
"104 475 CURVE SMOOTH",
"104 415 OFFCURVE",
"131.667 382.667 OFFCURVE",
"173 348 CURVE",
"99.837 311.418 OFFCURVE",
"31 266.231 OFFCURVE",
"31 164 CURVE SMOOTH",
"31 65.925 OFFCURVE",
"108.892 -8 OFFCURVE",
"212 -8 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"175.648 59 OFFCURVE",
"112 115.225 OFFCURVE",
"112 205 CURVE SMOOTH",
"112 273 OFFCURVE",
"135.333 321 OFFCURVE",
"182 341 CURVE",
"213.609 319.927 OFFCURVE",
"252.045 294.968 OFFCURVE",
"280 275 CURVE SMOOTH",
"311.718 253.041 OFFCURVE",
"338.672 230.967 OFFCURVE",
"367 205 CURVE",
"389.667 182.333 OFFCURVE",
"407.333 163.333 OFFCURVE",
"422 134 CURVE",
"383.333 79.333 OFFCURVE",
"335 59 OFFCURVE",
"263 59 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"199.138 417.908 OFFCURVE",
"185 451.523 OFFCURVE",
"185 499 CURVE SMOOTH",
"185 556.333 OFFCURVE",
"212.333 601 OFFCURVE",
"259 601 CURVE SMOOTH",
"316.084 601 OFFCURVE",
"340 547.102 OFFCURVE",
"340 488 CURVE SMOOTH",
"340 435.462 OFFCURVE",
"314.138 384 OFFCURVE",
"261 384 CURVE SMOOTH",
"250 384 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
110 5 63 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
110 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
45 5 83 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
45 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
40 63 45 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 13 values pushed */
6 110 22 110 38 110 54 110 70 110 86 110 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 110 117 110 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
55 63 110 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
55 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
94 5 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 3 values pushed */
58 55 94 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 5 values pushed */
106 83 122 83 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 83 25 83 41 83 57 83 73 83 89 83 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
50 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
68 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
68 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
78 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
78 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 2 values pushed */
7 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 7 23 7 39 7 55 7 71 7 87 7 103 7 119 7 135 7 151 7 167 7 183 7 199 7 215 7 231 7 247 7 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 7 23 7 39 7 55 7 71 7 87 7 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 7 118 7 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 3 values pushed */
32 68 50 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
40 68 50 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
58 68 50 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
73 68 50 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
105 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
105 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 726;
}
);
note = ampersand.small;
},
{
glyphname = Omega;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"351 0 LINE",
"351 72 LINE",
"244.333 150.667 OFFCURVE",
"191 263.667 OFFCURVE",
"191 411 CURVE SMOOTH",
"191 511 OFFCURVE",
"214.333 592.333 OFFCURVE",
"261 655 CURVE SMOOTH",
"308.333 718.333 OFFCURVE",
"369 750 OFFCURVE",
"443 750 CURVE SMOOTH",
"589.667 750 OFFCURVE",
"695 609.667 OFFCURVE",
"695 411 CURVE SMOOTH",
"695 265 OFFCURVE",
"642 152 OFFCURVE",
"536 72 CURVE",
"536 0 LINE",
"830 0 LINE",
"845 140 LINE",
"807 140 LINE",
"805 130 LINE SMOOTH",
"801 106.667 OFFCURVE",
"789.667 91 OFFCURVE",
"771 83 CURVE SMOOTH",
"752.333 75.667 OFFCURVE",
"716.667 72 OFFCURVE",
"664 72 CURVE SMOOTH",
"579 72 LINE",
"727 163.333 OFFCURVE",
"801 275 OFFCURVE",
"801 407 CURVE SMOOTH",
"801 500.333 OFFCURVE",
"772 583.333 OFFCURVE",
"714 656 CURVE SMOOTH",
"647.333 738.667 OFFCURVE",
"557 780 OFFCURVE",
"443 780 CURVE SMOOTH",
"329 780 OFFCURVE",
"238.667 738.667 OFFCURVE",
"172 656 CURVE SMOOTH",
"114 583.333 OFFCURVE",
"85 500.333 OFFCURVE",
"85 407 CURVE SMOOTH",
"85 273.667 OFFCURVE",
"159.333 162 OFFCURVE",
"308 72 CURVE",
"222 72 LINE SMOOTH",
"170 72 OFFCURVE",
"134 75.667 OFFCURVE",
"114 83 CURVE",
"95.333 91 OFFCURVE",
"84.333 106.667 OFFCURVE",
"81 130 CURVE",
"80 140 LINE",
"42 140 LINE",
"57 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
17 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
44 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
2 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
0 17 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
12 17 37 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
10 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
24 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 24 22 24 38 24 54 24 70 24 86 24 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 24 117 24 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
31 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 31 122 31 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 31 25 31 41 31 57 31 73 31 89 31 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
20 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
34 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
6 2 28 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
0 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
18 4 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
36 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
37 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 886;
}
);
note = Omega;
unicode = 2126;
},
{
glyphname = currency;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"188 198 LINE",
"231.333 166.667 OFFCURVE",
"278.667 151 OFFCURVE",
"330 151 CURVE SMOOTH",
"379.333 151 OFFCURVE",
"426.333 166.667 OFFCURVE",
"471 198 CURVE",
"594 76 LINE",
"631 113 LINE",
"508 234 LINE",
"540.667 276.667 OFFCURVE",
"557 324 OFFCURVE",
"557 376 CURVE SMOOTH",
"557 429.333 OFFCURVE",
"541 475.333 OFFCURVE",
"509 514 CURVE",
"632 637 LINE",
"593 674 LINE",
"471 554 LINE",
"426.333 588.667 OFFCURVE",
"379.333 606 OFFCURVE",
"330 606 CURVE SMOOTH",
"280 606 OFFCURVE",
"232.667 588.667 OFFCURVE",
"188 554 CURVE",
"66 674 LINE",
"27 637 LINE",
"150 514 LINE",
"118.667 474.667 OFFCURVE",
"103 428.667 OFFCURVE",
"103 376 CURVE SMOOTH",
"103 324.667 OFFCURVE",
"119 277.333 OFFCURVE",
"151 234 CURVE",
"28 113 LINE",
"65 76 LINE"
);
},
{
closed = 1;
nodes = (
"281.333 205 OFFCURVE",
"240 222 OFFCURVE",
"206 256 CURVE SMOOTH",
"172.667 290.667 OFFCURVE",
"156 331.667 OFFCURVE",
"156 379 CURVE SMOOTH",
"156 426.333 OFFCURVE",
"172.667 467.333 OFFCURVE",
"206 502 CURVE SMOOTH",
"240 536 OFFCURVE",
"281.333 553 OFFCURVE",
"330 553 CURVE SMOOTH",
"424.667 553 OFFCURVE",
"503 475 OFFCURVE",
"503 379 CURVE SMOOTH",
"503 283 OFFCURVE",
"424.667 205 OFFCURVE",
"330 205 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
42 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
43 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
9 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 2 values pushed */
39 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 39 122 39 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 39 25 39 41 39 57 39 73 39 89 39 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
7 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
7 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
39 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
11 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
32 5 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 32 22 32 38 32 54 32 70 32 86 32 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 32 117 32 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
25 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
19 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
28 3 2 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
28 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
16 3 36 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
16 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 659;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = gravecmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-193 520 LINE",
"-294 696 LINE",
"-323.333 696 OFFCURVE",
"-332 682.667 OFFCURVE",
"-340 672 CURVE",
"-340 667 LINE",
"-203 514 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = gravecmb;
unicode = 0300;
},
{
glyphname = acutecmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-152 667 LINE",
"-152 672 LINE",
"-160 682.667 OFFCURVE",
"-168.667 696 OFFCURVE",
"-198 696 CURVE",
"-302 520 LINE",
"-292 514 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = acutecmb;
unicode = 0301;
},
{
glyphname = circumflexcmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-249 632 LINE",
"-158 521 LINE",
"-146 528 LINE",
"-241 698 LINE",
"-256 698 LINE",
"-351 528 LINE",
"-339 521 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = circumflexcmb;
unicode = 0302;
},
{
glyphname = tildecmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-386 535 LINE",
"-367.957 581.396 OFFCURVE",
"-355.856 581 OFFCURVE",
"-304 581 CURVE",
"-213 562 LINE",
"-143.492 562 OFFCURVE",
"-114.505 606.98 OFFCURVE",
"-100 665 CURVE",
"-114 665 LINE",
"-124.667 619.667 OFFCURVE",
"-150.667 614 OFFCURVE",
"-200 614 CURVE",
"-289 633 LINE",
"-351.667 633 OFFCURVE",
"-384.333 592.333 OFFCURVE",
"-399 535 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = tildecmb;
unicode = 0303;
},
{
glyphname = macroncmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-108 576 LINE",
"-108 621 LINE",
"-389 621 LINE",
"-389 576 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
1 3 0 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
1 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = macroncmb;
unicode = 0304;
},
{
glyphname = brevecmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-215.333 534 OFFCURVE",
"-185.333 550.667 OFFCURVE",
"-168 572 CURVE SMOOTH",
"-145.333 598.667 OFFCURVE",
"-140 638.333 OFFCURVE",
"-140 673 CURVE SMOOTH",
"-140 684 LINE",
"-153 684 LINE",
"-157 617.333 OFFCURVE",
"-194 585 OFFCURVE",
"-250 585 CURVE SMOOTH",
"-304.667 585 OFFCURVE",
"-343 617.333 OFFCURVE",
"-347 684 CURVE",
"-360 684 LINE",
"-360 673 LINE SMOOTH",
"-360 638.333 OFFCURVE",
"-354.667 598.667 OFFCURVE",
"-332 572 CURVE SMOOTH",
"-314.667 550.667 OFFCURVE",
"-284.667 534 OFFCURVE",
"-250 534 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
2 7 8 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
2 
SRP0[ ]	/* SetRefPoint0 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
8 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
5 3 16 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = brevecmb;
unicode = 0306;
},
{
glyphname = dotaccentcmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-220 552 OFFCURVE",
"-197 575 OFFCURVE",
"-197 603 CURVE SMOOTH",
"-197 631 OFFCURVE",
"-220 653 OFFCURVE",
"-248 653 CURVE SMOOTH",
"-276 653 OFFCURVE",
"-299 631 OFFCURVE",
"-299 603 CURVE SMOOTH",
"-299 576.333 OFFCURVE",
"-274.667 552 OFFCURVE",
"-248 552 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 7 6 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 13 values pushed */
6 0 22 0 38 0 54 0 70 0 86 0 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 0 117 0 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = dotaccentcmb;
unicode = 0307;
},
{
glyphname = dieresiscmb;
lastChange = "2020-12-31 21:29:42 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{-5, 488}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"113 554 OFFCURVE",
"134 575 OFFCURVE",
"134 600 CURVE SMOOTH",
"134 625 OFFCURVE",
"113 646 OFFCURVE",
"88 646 CURVE SMOOTH",
"63 646 OFFCURVE",
"42 625 OFFCURVE",
"42 600 CURVE SMOOTH",
"42 575 OFFCURVE",
"63 554 OFFCURVE",
"88 554 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-54 554 OFFCURVE",
"-33 575 OFFCURVE",
"-33 600 CURVE SMOOTH",
"-33 625 OFFCURVE",
"-54 646 OFFCURVE",
"-79 646 CURVE SMOOTH",
"-104 646 OFFCURVE",
"-125 625 OFFCURVE",
"-125 600 CURVE SMOOTH",
"-125 575 OFFCURVE",
"-104 554 OFFCURVE",
"-79 554 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 4 values pushed */
3 4 9 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
3 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
9 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
21 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = dieresiscmb;
unicode = 0308;
},
{
glyphname = ringcmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-205.333 520 OFFCURVE",
"-174 550.667 OFFCURVE",
"-174 592 CURVE SMOOTH",
"-174 634.667 OFFCURVE",
"-205.333 664 OFFCURVE",
"-248 664 CURVE SMOOTH",
"-289.333 664 OFFCURVE",
"-322 633.333 OFFCURVE",
"-322 592 CURVE SMOOTH",
"-322 549.333 OFFCURVE",
"-292 520 OFFCURVE",
"-248 520 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-277.333 540 OFFCURVE",
"-295 562.667 OFFCURVE",
"-295 592 CURVE SMOOTH",
"-295 622.667 OFFCURVE",
"-276 644 OFFCURVE",
"-248 644 CURVE SMOOTH",
"-218.667 644 OFFCURVE",
"-201 621.333 OFFCURVE",
"-201 592 CURVE SMOOTH",
"-201 562.667 OFFCURVE",
"-218.667 540 OFFCURVE",
"-248 540 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
24 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
25 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
24 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
6 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
218 12 234 12 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
6 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[11100]	/* MoveDirectRelPt */
NPUSHW[ ]	/* 27 values pushed */
6 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
213 18 229 18 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
21 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = ringcmb;
unicode = 030A;
},
{
glyphname = hungarumlautcmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-98 667 LINE",
"-98 672 LINE",
"-106 682.667 OFFCURVE",
"-112.667 696 OFFCURVE",
"-142 696 CURVE",
"-245 524 LINE",
"-234 518 LINE"
);
},
{
closed = 1;
nodes = (
"-217 667 LINE",
"-217 672 LINE",
"-225 682.667 OFFCURVE",
"-231.667 696 OFFCURVE",
"-261 696 CURVE",
"-348 522 LINE",
"-337 516 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = hungarumlautcmb;
unicode = 030B;
},
{
glyphname = caroncmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-241 516 LINE",
"-146 686 LINE",
"-158 693 LINE",
"-249 582 LINE",
"-339 693 LINE",
"-351 686 LINE",
"-256 516 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
5 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = caroncmb;
unicode = 030C;
},
{
glyphname = cedillacmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-229.164 -222 OFFCURVE",
"-168 -188.893 OFFCURVE",
"-168 -132 CURVE SMOOTH",
"-168 -105.584 OFFCURVE",
"-184.469 -64.012 OFFCURVE",
"-242 -41 CURVE",
"-197 6 LINE",
"-217 6 LINE",
"-297 -75 LINE",
"-249 -91 OFFCURVE",
"-224 -120.333 OFFCURVE",
"-224 -155 CURVE SMOOTH",
"-224 -191 OFFCURVE",
"-244 -210 OFFCURVE",
"-268 -210 CURVE SMOOTH",
"-282.667 -210 OFFCURVE",
"-290 -199.667 OFFCURVE",
"-290 -179 CURVE SMOOTH",
"-290 -176.333 OFFCURVE",
"-289.833 -173.333 OFFCURVE",
"-289.5 -170 CURVE SMOOTH",
"-289.167 -166.667 OFFCURVE",
"-289 -163 OFFCURVE",
"-289 -159 CURVE",
"-295 -151.667 OFFCURVE",
"-304.667 -148 OFFCURVE",
"-318 -148 CURVE SMOOTH",
"-340.667 -148 OFFCURVE",
"-349 -163.667 OFFCURVE",
"-349 -177 CURVE SMOOTH",
"-349 -209 OFFCURVE",
"-318.333 -222 OFFCURVE",
"-273 -222 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
0 5 11 4 
CALL[ ]	/* CallFunction */
NPUSHW[ ]	/* 5 values pushed */
106 11 122 11 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 11 25 11 41 11 57 11 73 11 89 11 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
6 11 0 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
6 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
5 27 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 3 values pushed */
8 27 6 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = cedillacmb;
unicode = 0327;
},
{
glyphname = ogonekcmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-197.012 -217 OFFCURVE",
"-166.145 -176.349 OFFCURVE",
"-151 -140 CURVE",
"-159 -136 LINE",
"-173.667 -158.667 OFFCURVE",
"-185.333 -173 OFFCURVE",
"-220 -173 CURVE SMOOTH",
"-258.667 -173 OFFCURVE",
"-274 -143.333 OFFCURVE",
"-274 -114 CURVE SMOOTH",
"-274 -68.059 OFFCURVE",
"-239.927 -18.951 OFFCURVE",
"-207 3 CURVE",
"-207 5 LINE",
"-222 5 LINE",
"-268.114 -23.822 OFFCURVE",
"-331 -80.508 OFFCURVE",
"-331 -140 CURVE SMOOTH",
"-331 -184 OFFCURVE",
"-294.667 -217 OFFCURVE",
"-248 -217 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
7 5 19 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
NPUSHW[ ]	/* 13 values pushed */
6 7 22 7 38 7 54 7 70 7 86 7 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 7 117 7 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 4 values pushed */
4 3 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = ogonekcmb;
unicode = 0328;
},
{
glyphname = soliduslongoverlaycmb;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"42 747 LINE",
"9 760 LINE",
"-361 -131 LINE",
"-328 -143 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
3 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 0;
}
);
note = soliduslongoverlaycmb;
unicode = 0338;
},
{
glyphname = Eth;
lastChange = "2021-01-02 00:37:55 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"406 0 LINE SMOOTH",
"436.667 0 OFFCURVE",
"468.333 2.167 OFFCURVE",
"501 6.5 CURVE SMOOTH",
"566.333 15.167 OFFCURVE",
"628.333 36 OFFCURVE",
"683 72 CURVE SMOOTH",
"710.333 90 OFFCURVE",
"734.333 112.667 OFFCURVE",
"755 140 CURVE SMOOTH",
"796.333 194.667 OFFCURVE",
"822 270 OFFCURVE",
"822 370 CURVE SMOOTH",
"822 530.72 OFFCURVE",
"737.547 635.766 OFFCURVE",
"618 687 CURVE SMOOTH",
"559.624 712.54 OFFCURVE",
"482 721 OFFCURVE",
"421 721 CURVE SMOOTH",
"45 721 LINE",
"45 710 LINE",
"79.667 706 OFFCURVE",
"107 698 OFFCURVE",
"127 674 CURVE SMOOTH",
"138 661 OFFCURVE",
"143 630 OFFCURVE",
"143 594 CURVE SMOOTH",
"143 423 LINE",
"66 423 LINE",
"66 377 LINE",
"143 377 LINE",
"143 156 LINE SMOOTH",
"143 97 OFFCURVE",
"133 63 OFFCURVE",
"121 51 CURVE SMOOTH",
"105 34 OFFCURVE",
"74.333 14 OFFCURVE",
"41 10 CURVE",
"41 0 LINE"
);
},
{
closed = 1;
nodes = (
"347 15 OFFCURVE",
"301.667 19.333 OFFCURVE",
"275 46 CURVE SMOOTH",
"258.7 62.3 OFFCURVE",
"252 102 OFFCURVE",
"252 155 CURVE SMOOTH",
"252 377 LINE",
"444 377 LINE",
"444 423 LINE",
"252 423 LINE",
"252 602 LINE SMOOTH",
"252 655 OFFCURVE",
"259 687 OFFCURVE",
"264 692 CURVE SMOOTH",
"273 700 OFFCURVE",
"321 705 OFFCURVE",
"356 705 CURVE SMOOTH",
"403 705 OFFCURVE",
"432.333 701.333 OFFCURVE",
"459 696 CURVE SMOOTH",
"598.851 671.795 OFFCURVE",
"699 519.139 OFFCURVE",
"699 368 CURVE SMOOTH",
"699 193.333 OFFCURVE",
"628 68.333 OFFCURVE",
"484 27 CURVE SMOOTH",
"453.333 17.667 OFFCURVE",
"416.333 15 OFFCURVE",
"383 15 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */
92 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
93 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
92 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
34 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 2 values pushed */
69 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
6 69 22 69 38 69 54 69 70 69 86 69 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 69 117 69 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
13 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
26 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
28 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
32 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
34 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
0 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
55 7 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
106 55 122 55 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
9 55 25 55 41 55 57 55 73 55 89 55 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
71 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
71 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
76 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
76 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
69 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
79 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
79 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
13 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
13 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
16 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
18 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
47 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
47 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
29 2 31 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
31 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
29 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
75 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
75 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 852;
}
);
note = Eth;
unicode = 00D0;
},
{
glyphname = ct;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"346.23 -3 OFFCURVE",
"421.278 77.041 OFFCURVE",
"445 166 CURVE",
"435 170 LINE",
"406.065 112.13 OFFCURVE",
"375.283 66 OFFCURVE",
"273 66 CURVE SMOOTH",
"167.342 66 OFFCURVE",
"105 152.682 OFFCURVE",
"105 268 CURVE SMOOTH",
"105 381.429 OFFCURVE",
"171.835 468 OFFCURVE",
"264 468 CURVE",
"272.16 446.241 OFFCURVE",
"297.633 384 OFFCURVE",
"323 384 CURVE SMOOTH",
"349.667 384 OFFCURVE",
"372 405.667 OFFCURVE",
"372 427 CURVE SMOOTH",
"372 441 OFFCURVE",
"364.5 453.667 OFFCURVE",
"349.5 465 CURVE SMOOTH",
"334.5 476.333 OFFCURVE",
"309.667 482.333 OFFCURVE",
"275 483 CURVE",
"260.542 519.145 OFFCURVE",
"253 530.331 OFFCURVE",
"253 577 CURVE SMOOTH",
"253 645.383 OFFCURVE",
"301.012 715 OFFCURVE",
"402 715 CURVE SMOOTH",
"494.52 715 OFFCURVE",
"546 660.042 OFFCURVE",
"546 588 CURVE SMOOTH",
"546 524.237 OFFCURVE",
"507.161 456.954 OFFCURVE",
"415 423 CURVE",
"415 412 LINE",
"476 412 LINE",
"476 380.667 OFFCURVE",
"475.833 349 OFFCURVE",
"475.5 317 CURVE SMOOTH",
"475.167 285 OFFCURVE",
"475 254.333 OFFCURVE",
"475 225 CURVE SMOOTH",
"475 195.667 OFFCURVE",
"474.833 168.667 OFFCURVE",
"474.5 144 CURVE SMOOTH",
"474.167 119.333 OFFCURVE",
"474 99 OFFCURVE",
"474 83 CURVE",
"479.605 35.358 OFFCURVE",
"529.74 -2 OFFCURVE",
"583 -2 CURVE SMOOTH",
"660.485 -2 OFFCURVE",
"706.872 38.616 OFFCURVE",
"724 90 CURVE",
"718 93 LINE",
"699.333 66.333 OFFCURVE",
"675.667 52 OFFCURVE",
"637 52 CURVE SMOOTH",
"590.333 52 OFFCURVE",
"558 81 OFFCURVE",
"558 149 CURVE SMOOTH",
"558 412 LINE",
"712 412 LINE",
"739 473 LINE",
"560 473 LINE",
"560.667 476.333 OFFCURVE",
"562.167 486.167 OFFCURVE",
"564.5 502.5 CURVE SMOOTH",
"566.833 518.833 OFFCURVE",
"568 538 OFFCURVE",
"568 560 CURVE SMOOTH",
"568 674.704 OFFCURVE",
"503.67 729 OFFCURVE",
"404 729 CURVE SMOOTH",
"304.684 729 OFFCURVE",
"237 661.524 OFFCURVE",
"237 576 CURVE SMOOTH",
"237 537.333 OFFCURVE",
"250.333 504.667 OFFCURVE",
"261 482 CURVE",
"111.363 482 OFFCURVE",
"20 368.364 OFFCURVE",
"20 242 CURVE SMOOTH",
"20 104.06 OFFCURVE",
"111.21 -3 OFFCURVE",
"240 -3 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
43 5 22 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
43 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
105 5 81 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
105 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 3 values pushed */
74 81 105 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
74 
MDAP[1]	/* MoveDirectAbsPt */
NPUSHW[ ]	/* 5 values pushed */
218 74 234 74 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 27 values pushed */
9 74 25 74 41 74 57 74 73 74 89 74 105 74 121 74 137 74 153 74 169 74 185 74 201 74 13 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
4 
MDRP[11100]	/* MoveDirectRelPt */
PUSHW[ ]	/* 3 values pushed */
17 22 4 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
NPUSHW[ ]	/* 13 values pushed */
6 43 22 43 38 43 54 43 70 43 86 43 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
101 43 117 43 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
81 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
84 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
84 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
81 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
87 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
87 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
4 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
108 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
48 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
27 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
27 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
92 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
92 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
17 27 9 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
27 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
38 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 13 values pushed */
7 38 23 38 39 38 55 38 71 38 87 38 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 5 values pushed */
102 38 118 38 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
48 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
80 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
92 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
101 3 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 33 values pushed */
7 101 23 101 39 101 55 101 71 101 87 101 103 101 119 101 135 101 151 101 167 101 183 101 199 101 215 101 231 101 247 101 16 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
7 101 23 101 39 101 55 101 71 101 87 101 6 
DELTAP2[ ]	/* DeltaExceptionP2 */
NPUSHW[ ]	/* 5 values pushed */
102 101 118 101 2 
DELTAP2[ ]	/* DeltaExceptionP2 */
PUSHW[ ]	/* 1 value pushed */
80 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
105 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
106 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 717;
}
);
note = ct;
},
{
glyphname = J.alt;
lastChange = "2020-12-28 02:01:01 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"68.911 -182 OFFCURVE",
"121.256 -163.809 OFFCURVE",
"166.5 -123 CURVE SMOOTH",
"183.5 -107.667 OFFCURVE",
"198.667 -88.333 OFFCURVE",
"212 -65 CURVE SMOOTH",
"238.667 -18.333 OFFCURVE",
"257 44.667 OFFCURVE",
"257 134 CURVE SMOOTH",
"257 367 LINE SMOOTH",
"257 387.667 OFFCURVE",
"257 406.667 OFFCURVE",
"257 424 CURVE SMOOTH",
"257 442 OFFCURVE",
"257 459.333 OFFCURVE",
"257 476 CURVE SMOOTH",
"257 492.667 OFFCURVE",
"257.167 509.167 OFFCURVE",
"257.5 525.5 CURVE SMOOTH",
"257.833 541.833 OFFCURVE",
"258 558.333 OFFCURVE",
"258 575 CURVE",
"258.667 590.333 OFFCURVE",
"259.333 606.833 OFFCURVE",
"260 624.5 CURVE SMOOTH",
"260.667 642.167 OFFCURVE",
"263.667 656.333 OFFCURVE",
"269 667 CURVE SMOOTH",
"286.333 699 OFFCURVE",
"323 706 OFFCURVE",
"351 710 CURVE",
"351 720 LINE",
"44 720 LINE",
"44 710 LINE",
"93.333 704.667 OFFCURVE",
"114.333 699.667 OFFCURVE",
"133 677 CURVE SMOOTH",
"144.116 664.031 OFFCURVE",
"148 623.768 OFFCURVE",
"148 594 CURVE SMOOTH",
"148 582 OFFCURVE",
"148 570 OFFCURVE",
"148 558 CURVE SMOOTH",
"148 363 LINE SMOOTH",
"148 351 OFFCURVE",
"148 334.333 OFFCURVE",
"148 313 CURVE SMOOTH",
"148 292.333 OFFCURVE",
"148 269.667 OFFCURVE",
"148 245 CURVE SMOOTH",
"148 220.333 OFFCURVE",
"147.833 194.667 OFFCURVE",
"147.5 168 CURVE SMOOTH",
"147.167 141.333 OFFCURVE",
"147 116 OFFCURVE",
"147 92 CURVE SMOOTH",
"147 44 OFFCURVE",
"146.333 4.667 OFFCURVE",
"145 -14 CURVE SMOOTH",
"142.375 -74.379 OFFCURVE",
"131.752 -152 OFFCURVE",
"84 -152 CURVE SMOOTH",
"77.333 -152 OFFCURVE",
"74 -151.333 OFFCURVE",
"70 -150 CURVE",
"38.646 -114.726 OFFCURVE",
"46.4 -63 OFFCURVE",
"-6 -63 CURVE SMOOTH",
"-42 -63 OFFCURVE",
"-60 -85 OFFCURVE",
"-60 -117 CURVE SMOOTH",
"-60 -159.667 OFFCURVE",
"-15.333 -182 OFFCURVE",
"30 -182 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
54 7 12 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
15 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
17 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
20 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
20 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
12 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
23 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
23 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
49 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
52 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
1 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
1 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 4 values pushed */
36 4 42 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
36 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
42 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
28 2 
MIRP[11100]	/* MoveIndirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 374;
}
);
note = J.alt;
},
{
glyphname = f_f_i;
lastChange = "2021-01-02 00:33:46 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"242 0 LINE",
"242 10 LINE",
"212.768 15.846 OFFCURVE",
"173.47 10.649 OFFCURVE",
"168 38 CURVE",
"168 428 LINE",
"357 428 LINE",
"357 42 LINE SMOOTH",
"357 21.502 OFFCURVE",
"313.527 12.544 OFFCURVE",
"283 10 CURVE",
"283 0 LINE",
"516 0 LINE",
"516 10 LINE",
"487.58 15.684 OFFCURVE",
"445.523 10.384 OFFCURVE",
"440 38 CURVE",
"440 430 LINE",
"610 430 LINE SMOOTH",
"620.667 430 OFFCURVE",
"625 421.667 OFFCURVE",
"625 411 CURVE SMOOTH",
"625 42 LINE SMOOTH",
"625 16.974 OFFCURVE",
"586.53 12.461 OFFCURVE",
"557 10 CURVE",
"557 0 LINE",
"772 0 LINE",
"772 10 LINE",
"745.178 15.364 OFFCURVE",
"713.247 9.763 OFFCURVE",
"708 36 CURVE",
"708 496 LINE",
"700 496 LINE",
"694.667 484 OFFCURVE",
"691 477.333 OFFCURVE",
"675 472 CURVE",
"440 472 LINE",
"440 484 OFFCURVE",
"440 493.333 OFFCURVE",
"440 500 CURVE SMOOTH",
"440 510.785 OFFCURVE",
"442.207 557.131 OFFCURVE",
"443 573 CURVE SMOOTH",
"447.651 659.036 OFFCURVE",
"499.026 709 OFFCURVE",
"547 709 CURVE SMOOTH",
"551 709 OFFCURVE",
"554.333 709 OFFCURVE",
"557 709 CURVE SMOOTH",
"560.333 709 OFFCURVE",
"563.667 708.333 OFFCURVE",
"567 707 CURVE",
"622.176 672.152 OFFCURVE",
"585.951 622 OFFCURVE",
"658 622 CURVE SMOOTH",
"676.667 622 OFFCURVE",
"697 638.333 OFFCURVE",
"697 665 CURVE SMOOTH",
"697 681.667 OFFCURVE",
"687.333 696.333 OFFCURVE",
"668 709 CURVE SMOOTH",
"648.667 721.667 OFFCURVE",
"616.667 728 OFFCURVE",
"572 728 CURVE SMOOTH",
"516 728 OFFCURVE",
"458.667 700.667 OFFCURVE",
"424 650 CURVE",
"399.167 689.023 OFFCURVE",
"377.898 723 OFFCURVE",
"297 723 CURVE SMOOTH",
"213.355 723 OFFCURVE",
"132.02 669.381 OFFCURVE",
"100 592 CURVE SMOOTH",
"88 562.667 OFFCURVE",
"86 528 OFFCURVE",
"86 472 CURVE",
"37 472 LINE",
"13 428 LINE",
"85 428 LINE",
"85 42 LINE SMOOTH",
"85 21.56 OFFCURVE",
"38.508 12.459 OFFCURVE",
"9 10 CURVE",
"9 0 LINE"
);
},
{
closed = 1;
nodes = (
"168 483.333 OFFCURVE",
"168 492.333 OFFCURVE",
"168 499 CURVE SMOOTH",
"168 510.902 OFFCURVE",
"170.892 551.83 OFFCURVE",
"172 574 CURVE SMOOTH",
"178.673 678.543 OFFCURVE",
"239.289 704 OFFCURVE",
"278 704 CURVE",
"327.313 697.276 OFFCURVE",
"354.425 653.027 OFFCURVE",
"358 628 CURVE",
"358 472 LINE",
"168 472 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
72 5 57 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
88 5 73 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
88 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
7 5 92 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
88 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
14 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
18 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
18 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 3 values pushed */
41 73 88 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
57 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
54 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
73 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
100 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
100 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
101 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
103 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
107 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
107 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
119 
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
38 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
46 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
46 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
11 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
11 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
54 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
54 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
100 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
100 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
64 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
64 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
80 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
80 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
32 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 32 121 32 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 32 24 32 40 32 56 32 72 32 88 32 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 3 values pushed */
41 38 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
54 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
56 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
72 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
73 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
88 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
89 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
89 
MDAP[1]	/* MoveDirectAbsPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 793;
}
);
note = ffi;
},
{
glyphname = f_i;
lastChange = "2021-01-02 00:33:33 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"244 0 LINE",
"244 10 LINE",
"215.58 15.684 OFFCURVE",
"173.523 10.384 OFFCURVE",
"168 38 CURVE",
"168 431 LINE",
"337 431 LINE",
"349 428.333 OFFCURVE",
"352 421.667 OFFCURVE",
"352 411 CURVE SMOOTH",
"352 42 LINE SMOOTH",
"352 16.974 OFFCURVE",
"313.53 12.461 OFFCURVE",
"284 10 CURVE",
"284 0 LINE",
"499 0 LINE",
"499 10 LINE",
"472.178 15.364 OFFCURVE",
"440.247 9.763 OFFCURVE",
"435 36 CURVE",
"435 484 LINE",
"429 484 LINE",
"400 473 LINE",
"169 473 LINE",
"169 485 OFFCURVE",
"169 494.667 OFFCURVE",
"169 502 CURVE SMOOTH",
"169 514.897 OFFCURVE",
"171.897 556.948 OFFCURVE",
"173 579 CURVE SMOOTH",
"180.048 689.414 OFFCURVE",
"240.899 710 OFFCURVE",
"298 710 CURVE",
"348.589 678.382 OFFCURVE",
"320.465 622 OFFCURVE",
"386 622 CURVE SMOOTH",
"404.667 622 OFFCURVE",
"425 638.333 OFFCURVE",
"425 665 CURVE SMOOTH",
"425 705 OFFCURVE",
"372.667 728 OFFCURVE",
"298 728 CURVE SMOOTH",
"214 728 OFFCURVE",
"134.667 679.667 OFFCURVE",
"100 597 CURVE SMOOTH",
"88 567.667 OFFCURVE",
"86 529 OFFCURVE",
"86 473 CURVE",
"25 473 LINE",
"9 429 LINE",
"85 429 LINE",
"85 42 LINE SMOOTH",
"85 21.56 OFFCURVE",
"38.508 12.459 OFFCURVE",
"9 10 CURVE",
"9 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
56 5 41 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
56 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 4 values pushed */
7 5 60 4 
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
7 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
56 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
10 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
10 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
56 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
12 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
12 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
56 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
16 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
16 
MDAP[1]	/* MoveDirectAbsPt */
PUSHW[ ]	/* 1 value pushed */
41 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
38 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
32 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
32 14 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
9 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
9 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
38 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
38 12 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
0 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
0 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0 
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
48 
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
48 8 
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 3 values pushed */
8 0 32 
SRP1[ ]	/* SetRefPoint1 */
SRP2[ ]	/* SetRefPoint2 */
IP[ ]	/* InterpolatePts */
PUSHW[ ]	/* 1 value pushed */
32 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
26 4 
MIRP[11100]	/* MoveIndirectRelPt */
NPUSHW[ ]	/* 5 values pushed */
105 26 121 26 2 
DELTAP1[ ]	/* DeltaExceptionP1 */
NPUSHW[ ]	/* 13 values pushed */
8 26 24 26 40 26 56 26 72 26 88 26 6 
DELTAP1[ ]	/* DeltaExceptionP1 */
PUSHW[ ]	/* 1 value pushed */
38 
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 2 values pushed */
40 3 
MIRP[11100]	/* MoveIndirectRelPt */
PUSHW[ ]	/* 1 value pushed */
56 
MDRP[10000]	/* MoveDirectRelPt */
PUSHW[ ]	/* 1 value pushed */
57 
MDRP[10000]	/* MoveDirectRelPt */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 520;
}
);
note = fi;
},
{
glyphname = "ha-ethiopic";
lastChange = "2020-12-27 20:55:33 +0000";
layers = (
{
components = (
{
name = ha.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 523;
}
);
unicode = 1200;
},
{
glyphname = "hu-ethiopic";
lastChange = "2021-01-01 03:53:47 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 540, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 523;
}
);
unicode = 1201;
},
{
glyphname = "hi-ethiopic";
lastChange = "2021-01-06 22:35:23 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 377, -222}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 357, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 523;
}
);
unicode = 1202;
},
{
glyphname = "haa-ethiopic";
lastChange = "2020-12-27 22:18:59 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 357, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 523;
}
);
unicode = 1203;
},
{
glyphname = "hee-ethiopic";
lastChange = "2021-01-01 22:47:37 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 357, -54}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 523;
}
);
unicode = 1204;
},
{
glyphname = "he-ethiopic";
lastChange = "2020-12-28 19:03:24 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 142, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hee = 1;
};
width = 523;
}
);
unicode = 1205;
},
{
glyphname = "ho-ethiopic";
lastChange = "2020-12-31 03:03:01 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 389, 69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 523;
}
);
unicode = 1206;
},
{
glyphname = "hoa-ethiopic";
lastChange = "2021-01-06 19:43:38 +0000";
layers = (
{
components = (
{
name = ha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 356, -30}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 523;
}
);
unicode = 1207;
},
{
glyphname = "la-ethiopic";
lastChange = "2020-12-27 20:55:47 +0000";
layers = (
{
components = (
{
name = la.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 524;
}
);
unicode = 1208;
},
{
glyphname = "lu-ethiopic";
lastChange = "2020-12-28 02:27:21 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 555, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 524;
}
);
unicode = 1209;
},
{
glyphname = "li-ethiopic";
lastChange = "2020-12-28 19:19:58 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 392, 3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 524;
}
);
unicode = 120A;
},
{
glyphname = "laa-ethiopic";
lastChange = "2020-12-27 22:18:54 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 372, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 524;
}
);
unicode = 120B;
},
{
glyphname = "lee-ethiopic";
lastChange = "2021-01-01 21:45:06 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 381, -57}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 524;
}
);
unicode = 120C;
},
{
glyphname = "le-ethiopic";
lastChange = "2020-12-28 00:52:10 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.le.ring;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 524;
}
);
unicode = 120D;
},
{
glyphname = "lo-ethiopic";
lastChange = "2020-12-28 02:25:59 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 497, -223}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 524;
}
);
unicode = 120E;
},
{
glyphname = "lwa-ethiopic";
lastChange = "2021-01-06 19:44:15 +0000";
layers = (
{
components = (
{
name = la.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -32}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 524;
}
);
unicode = 120F;
},
{
glyphname = "hha-ethiopic";
lastChange = "2020-12-27 21:30:53 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 426, 17}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 794;
}
);
unicode = 1210;
},
{
glyphname = "hhu-ethiopic";
lastChange = "2020-12-28 02:27:35 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 426, 17}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 824, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 794;
}
);
unicode = 1211;
},
{
glyphname = "hhi-ethiopic";
lastChange = "2021-01-06 19:59:16 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 426, 17}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 657, -7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 794;
}
);
unicode = 1212;
},
{
glyphname = "hhaa-ethiopic";
lastChange = "2020-12-27 22:18:59 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 426, 17}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 644, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 794;
}
);
unicode = 1213;
},
{
glyphname = "hhee-ethiopic";
lastChange = "2021-01-01 21:45:24 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 426, 17}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 655, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 794;
}
);
unicode = 1214;
},
{
glyphname = "hhe-ethiopic";
lastChange = "2021-01-06 19:01:38 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 405, 125}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 426, 17}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
_smart.neck = 1;
};
width = 794;
}
);
unicode = 1215;
},
{
glyphname = "hho-ethiopic";
lastChange = "2020-12-27 22:28:48 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 426, 17}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 91, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 794;
}
);
unicode = 1216;
},
{
glyphname = "hhwa-ethiopic";
lastChange = "2021-01-06 19:43:20 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 426, 17}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 643, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 794;
}
);
unicode = 1217;
},
{
glyphname = "ma-ethiopic";
lastChange = "2020-12-28 02:28:06 +0000";
layers = (
{
components = (
{
name = ma.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 885;
}
);
unicode = 1218;
},
{
glyphname = "mu-ethiopic";
lastChange = "2020-12-28 02:28:05 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 923, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 885;
}
);
unicode = 1219;
},
{
glyphname = "mi-ethiopic";
lastChange = "2020-12-31 23:22:48 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 674, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 885;
}
);
unicode = 121A;
},
{
glyphname = "maa-ethiopic";
lastChange = "2020-12-31 23:22:55 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 696, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 885;
}
);
unicode = 121B;
},
{
glyphname = "mee-ethiopic";
lastChange = "2020-12-28 02:28:06 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 624, -48}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 885;
}
);
unicode = 121C;
},
{
glyphname = "me-ethiopic";
lastChange = "2020-12-28 02:28:06 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 374, -7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 885;
}
);
unicode = 121D;
},
{
glyphname = "mo-ethiopic";
lastChange = "2020-12-28 02:28:06 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 387, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 885;
}
);
unicode = 121E;
},
{
glyphname = "mwa-ethiopic";
lastChange = "2020-12-31 23:23:05 +0000";
layers = (
{
components = (
{
name = ma.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 705, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 885;
}
);
unicode = 121F;
},
{
glyphname = "sza-ethiopic";
lastChange = "2020-12-27 20:56:08 +0000";
layers = (
{
components = (
{
name = sa.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 739;
}
);
unicode = 1220;
},
{
glyphname = "szu-ethiopic";
lastChange = "2020-12-28 22:53:32 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 711, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 739;
}
);
unicode = 1221;
},
{
glyphname = "szi-ethiopic";
lastChange = "2020-12-28 19:19:58 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 507, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 739;
}
);
unicode = 1222;
},
{
glyphname = "szaa-ethiopic";
lastChange = "2020-12-27 22:18:59 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 487, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 739;
}
);
unicode = 1223;
},
{
glyphname = "szee-ethiopic";
lastChange = "2021-01-01 21:45:45 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 458, -68}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 739;
}
);
unicode = 1224;
},
{
glyphname = "sze-ethiopic";
lastChange = "2021-01-06 19:44:45 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 339, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 739;
}
);
unicode = 1225;
},
{
glyphname = "szo-ethiopic";
lastChange = "2020-12-27 22:22:10 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 224, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 739;
}
);
unicode = 1226;
},
{
glyphname = "szwa-ethiopic";
lastChange = "2021-01-06 19:45:10 +0000";
layers = (
{
components = (
{
name = sa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 465, -30}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 739;
}
);
unicode = 1227;
},
{
glyphname = "ra-ethiopic";
lastChange = "2020-12-27 20:56:16 +0000";
layers = (
{
components = (
{
name = ra.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 482;
}
);
unicode = 1228;
},
{
glyphname = "ru-ethiopic";
lastChange = "2021-01-01 03:53:02 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 262, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 482;
}
);
unicode = 1229;
},
{
glyphname = "ri-ethiopic";
lastChange = "2020-12-28 19:34:17 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 444, -93}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 482;
}
);
unicode = 122A;
},
{
glyphname = "raa-ethiopic";
lastChange = "2021-01-06 21:16:26 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.ra;
transform = "{1, 0, 0, 1, 334, 70}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.ra = 1;
};
width = 482;
}
);
unicode = 122B;
},
{
glyphname = "ree-ethiopic";
lastChange = "2021-01-06 19:13:23 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 356, -42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 482;
}
);
unicode = 122C;
},
{
glyphname = "re-ethiopic";
lastChange = "2020-12-27 23:52:56 +0000";
layers = (
{
components = (
{
name = re.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 450;
}
);
unicode = 122D;
},
{
glyphname = "ro-ethiopic";
lastChange = "2021-01-05 08:50:44 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 359, -207}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 450;
}
);
unicode = 122E;
},
{
glyphname = "rwa-ethiopic";
lastChange = "2021-01-06 21:16:55 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 149, -135}";
},
{
name = _smart.ra;
transform = "{1, 0, 0, 1, 334, 70}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.hat.left = 1;
_smart.ra = 1;
};
width = 482;
}
);
unicode = 122F;
},
{
glyphname = "sa-ethiopic";
lastChange = "2021-01-06 19:02:03 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1230;
},
{
glyphname = "su-ethiopic";
lastChange = "2021-01-06 19:02:03 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 552, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1231;
},
{
glyphname = "si-ethiopic";
lastChange = "2021-01-06 19:02:03 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 387, 3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1232;
},
{
glyphname = "saa-ethiopic";
lastChange = "2021-01-06 19:02:03 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1233;
},
{
glyphname = "see-ethiopic";
lastChange = "2021-01-06 19:02:01 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 385, -59}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1234;
},
{
glyphname = "se-ethiopic";
lastChange = "2021-01-06 19:03:10 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 245, 85}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1235;
},
{
glyphname = "so-ethiopic";
lastChange = "2021-01-11 20:14:29 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 116, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1236;
},
{
glyphname = "swa-ethiopic";
lastChange = "2021-01-06 19:47:27 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1237;
},
{
glyphname = "sha-ethiopic";
lastChange = "2021-01-06 19:02:03 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1238;
},
{
glyphname = "shu-ethiopic";
lastChange = "2021-01-06 19:02:03 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 552, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 1239;
},
{
glyphname = "shi-ethiopic";
lastChange = "2021-01-06 19:02:03 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 387, 3}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 123A;
},
{
glyphname = "shaa-ethiopic";
lastChange = "2021-01-06 19:02:03 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 368, 0}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 123B;
},
{
glyphname = "shee-ethiopic";
lastChange = "2021-01-06 19:02:03 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 385, -59}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 123C;
},
{
glyphname = "she-ethiopic";
lastChange = "2021-01-06 19:03:20 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 245, 85}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he.acute = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 123D;
},
{
glyphname = "sho-ethiopic";
lastChange = "2021-01-11 20:14:31 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 116, 4}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 123E;
},
{
glyphname = "shwa-ethiopic";
lastChange = "2021-01-06 19:47:27 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 268, 13}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 521;
}
);
unicode = 123F;
},
{
glyphname = "qa-ethiopic";
lastChange = "2020-12-31 23:24:02 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1240;
},
{
glyphname = "qu-ethiopic";
lastChange = "2020-12-31 23:23:59 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 545, -339}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1241;
},
{
glyphname = "qi-ethiopic";
lastChange = "2021-01-06 19:46:51 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 369, -235}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1242;
},
{
glyphname = "qaa-ethiopic";
lastChange = "2020-12-28 23:27:52 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 393, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1243;
},
{
glyphname = "qee-ethiopic";
lastChange = "2020-12-28 23:27:52 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 391, -15}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1244;
},
{
glyphname = "qe-ethiopic";
lastChange = "2021-01-06 19:05:14 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 322, 97}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.he.acute = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1245;
},
{
glyphname = "qo-ethiopic";
lastChange = "2020-12-31 23:24:02 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 385, 58}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 761;
}
);
unicode = 1246;
},
{
glyphname = "qoa-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1247;
},
{
glyphname = "qwa-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1248;
},
{
glyphname = "qwi-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 124A;
},
{
glyphname = "qwaa-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 124B;
},
{
glyphname = "qwee-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 124C;
},
{
glyphname = "qwe-ethiopic";
lastChange = "2021-01-01 01:51:18 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 124D;
},
{
glyphname = "qha-ethiopic";
lastChange = "2020-12-31 23:24:02 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1250;
},
{
glyphname = "qhu-ethiopic";
lastChange = "2020-12-31 23:24:02 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 545, -339}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1251;
},
{
glyphname = "qhi-ethiopic";
lastChange = "2021-01-06 19:47:03 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 369, -235}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1252;
},
{
glyphname = "qhaa-ethiopic";
lastChange = "2020-12-28 23:27:52 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 393, 0}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1253;
},
{
glyphname = "qhee-ethiopic";
lastChange = "2020-12-28 23:27:52 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 391, -15}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1254;
},
{
glyphname = "qhe-ethiopic";
lastChange = "2021-01-06 19:05:12 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 322, 97}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.he.acute = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1255;
},
{
glyphname = "qho-ethiopic";
lastChange = "2020-12-31 23:24:02 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 385, 58}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 761;
}
);
unicode = 1256;
},
{
glyphname = "qhwa-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 1258;
},
{
glyphname = "qhwi-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 125A;
},
{
glyphname = "qhwaa-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 125B;
},
{
glyphname = "qhwee-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 125C;
},
{
glyphname = "qhwe-ethiopic";
lastChange = "2021-01-01 01:51:21 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 382, 12}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 395, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 761;
}
);
unicode = 125D;
},
{
glyphname = "ba-ethiopic";
lastChange = "2020-12-27 20:56:36 +0000";
layers = (
{
components = (
{
name = ba.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 521;
}
);
unicode = 1260;
},
{
glyphname = "bu-ethiopic";
lastChange = "2020-12-28 02:28:25 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 552, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 521;
}
);
unicode = 1261;
},
{
glyphname = "bi-ethiopic";
lastChange = "2020-12-28 19:19:56 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 387, 3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 521;
}
);
unicode = 1262;
},
{
glyphname = "baa-ethiopic";
lastChange = "2020-12-27 22:20:23 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 521;
}
);
unicode = 1263;
},
{
glyphname = "bee-ethiopic";
lastChange = "2021-01-01 21:45:59 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 385, -59}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 521;
}
);
unicode = 1264;
},
{
glyphname = "be-ethiopic";
lastChange = "2020-12-27 23:45:47 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 165, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 521;
}
);
unicode = 1265;
},
{
glyphname = "bo-ethiopic";
lastChange = "2021-01-11 20:14:33 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 116, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 521;
}
);
unicode = 1266;
},
{
glyphname = "bwa-ethiopic";
lastChange = "2021-01-06 19:47:27 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 521;
}
);
unicode = 1267;
},
{
glyphname = "va-ethiopic";
lastChange = "2020-12-27 22:44:29 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
};
width = 521;
}
);
unicode = 1268;
},
{
glyphname = "vu-ethiopic";
lastChange = "2020-12-28 02:28:25 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 552, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 521;
}
);
unicode = 1269;
},
{
glyphname = "vi-ethiopic";
lastChange = "2020-12-28 19:19:55 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 387, 3}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi = 1;
};
width = 521;
}
);
unicode = 126A;
},
{
glyphname = "vaa-ethiopic";
lastChange = "2020-12-27 22:44:29 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 368, 0}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 521;
}
);
unicode = 126B;
},
{
glyphname = "vee-ethiopic";
lastChange = "2021-01-01 21:45:59 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 385, -59}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 521;
}
);
unicode = 126C;
},
{
glyphname = "ve-ethiopic";
lastChange = "2020-12-27 23:45:51 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 165, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he = 1;
};
width = 521;
}
);
unicode = 126D;
},
{
glyphname = "vo-ethiopic";
lastChange = "2021-01-11 20:14:33 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 116, 4}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho = 1;
};
width = 521;
}
);
unicode = 126E;
},
{
glyphname = "vwa-ethiopic";
lastChange = "2021-01-06 19:47:24 +0000";
layers = (
{
components = (
{
name = ba.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 295, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 521;
}
);
unicode = 126F;
},
{
glyphname = "ta-ethiopic";
lastChange = "2020-12-27 20:56:44 +0000";
layers = (
{
components = (
{
name = ta.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 324;
}
);
unicode = 1270;
},
{
glyphname = "tu-ethiopic";
lastChange = "2020-12-27 22:45:07 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 269, 3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 324;
}
);
unicode = 1271;
},
{
glyphname = "ti-ethiopic";
lastChange = "2020-12-28 19:19:55 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 110, 3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 324;
}
);
unicode = 1272;
},
{
glyphname = "taa-ethiopic";
lastChange = "2021-01-06 23:13:10 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 151, 161}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 324;
}
);
unicode = 1273;
},
{
glyphname = "tee-ethiopic";
lastChange = "2021-01-01 04:04:35 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 106, -49}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 324;
}
);
unicode = 1274;
},
{
glyphname = "te-ethiopic";
lastChange = "2021-01-06 19:06:28 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 106, 88}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
};
width = 324;
}
);
unicode = 1275;
},
{
glyphname = "to-ethiopic";
lastChange = "2021-01-01 01:52:45 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 141, 145}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 324;
}
);
unicode = 1276;
},
{
glyphname = "twa-ethiopic";
lastChange = "2021-01-06 19:48:16 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 93, -38}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 324;
}
);
unicode = 1277;
},
{
glyphname = "ca-ethiopic";
lastChange = "2020-12-27 22:48:59 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 134, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
};
width = 324;
}
);
unicode = 1278;
},
{
glyphname = "cu-ethiopic";
lastChange = "2020-12-27 22:49:01 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 269, 3}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 134, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 324;
}
);
unicode = 1279;
},
{
glyphname = "ci-ethiopic";
lastChange = "2020-12-28 19:19:55 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 110, 3}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 134, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi = 1;
};
width = 324;
}
);
unicode = 127A;
},
{
glyphname = "caa-ethiopic";
lastChange = "2021-01-06 23:13:19 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 151, 161}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 134, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
};
width = 324;
}
);
unicode = 127B;
},
{
glyphname = "cee-ethiopic";
lastChange = "2021-01-01 04:04:38 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 106, -49}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 134, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 324;
}
);
unicode = 127C;
},
{
glyphname = "ce-ethiopic";
lastChange = "2021-01-06 19:06:24 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 106, 88}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 134, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he.acute = 1;
};
width = 324;
}
);
unicode = 127D;
},
{
glyphname = "co-ethiopic";
lastChange = "2021-01-01 01:52:48 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 141, 145}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 134, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 324;
}
);
unicode = 127E;
},
{
glyphname = "cwa-ethiopic";
lastChange = "2021-01-06 19:48:18 +0000";
layers = (
{
components = (
{
name = ta.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 93, -38}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 134, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 324;
}
);
unicode = 127F;
},
{
glyphname = "xa-ethiopic";
lastChange = "2021-01-01 01:27:24 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 384;
}
);
unicode = 1280;
},
{
glyphname = "xu-ethiopic";
lastChange = "2021-01-01 01:27:27 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 394, 10}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hu = 1;
};
width = 384;
}
);
unicode = 1281;
},
{
glyphname = "xi-ethiopic";
lastChange = "2021-01-01 01:27:27 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 230, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hi = 1;
};
width = 384;
}
);
unicode = 1282;
},
{
glyphname = "xaa-ethiopic";
lastChange = "2021-01-06 19:49:56 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 253, 161}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.he = 1;
};
width = 384;
}
);
unicode = 1283;
},
{
glyphname = "xee-ethiopic";
lastChange = "2021-01-01 21:46:29 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 231, -52}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hee = 1;
};
width = 384;
}
);
unicode = 1284;
},
{
glyphname = "xe-ethiopic";
lastChange = "2021-01-01 01:27:27 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.nose.ext;
transform = "{1, 0, 0, 1, -36, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 384;
}
);
unicode = 1285;
},
{
glyphname = "xo-ethiopic";
lastChange = "2021-01-01 00:02:02 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 248, 2}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 88, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.he = 1;
};
width = 450;
}
);
unicode = 1286;
},
{
glyphname = "xoa-ethiopic";
lastChange = "2021-01-01 03:44:38 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 257, -6}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 88, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hwa = 1;
};
width = 450;
}
);
unicode = 1287;
},
{
glyphname = "xwa-ethiopic";
lastChange = "2021-01-01 01:27:27 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 266, 8}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 384;
}
);
unicode = 1288;
},
{
glyphname = "xwi-ethiopic";
lastChange = "2021-01-01 01:27:27 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 266, 8}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.he = 1;
};
width = 384;
}
);
unicode = 128A;
},
{
glyphname = "xwaa-ethiopic";
lastChange = "2021-01-01 01:27:27 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 266, 8}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.he = 1;
};
width = 384;
}
);
unicode = 128B;
},
{
glyphname = "xwee-ethiopic";
lastChange = "2021-01-01 01:27:27 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 266, 8}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.he = 1;
};
width = 384;
}
);
unicode = 128C;
},
{
glyphname = "xwe-ethiopic";
lastChange = "2021-01-01 01:27:27 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -4, 275}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 266, 8}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.he = 1;
};
width = 384;
}
);
unicode = 128D;
},
{
glyphname = "na-ethiopic";
lastChange = "2020-12-27 20:57:37 +0000";
layers = (
{
components = (
{
name = na.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 384;
}
);
unicode = 1290;
},
{
glyphname = "nu-ethiopic";
lastChange = "2020-12-27 22:52:55 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 394, 10}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 384;
}
);
unicode = 1291;
},
{
glyphname = "ni-ethiopic";
lastChange = "2020-12-28 19:19:48 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 230, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 384;
}
);
unicode = 1292;
},
{
glyphname = "naa-ethiopic";
lastChange = "2021-01-01 00:02:02 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 248, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 450;
}
);
unicode = 1293;
},
{
glyphname = "nee-ethiopic";
lastChange = "2021-01-01 21:46:30 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 231, -52}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 384;
}
);
unicode = 1294;
},
{
glyphname = "ne-ethiopic";
lastChange = "2021-01-05 09:33:38 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 124, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 364;
}
);
unicode = 1295;
},
{
glyphname = "no-ethiopic";
lastChange = "2021-01-05 08:50:51 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 248, 2}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 359, -207}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 450;
}
);
unicode = 1296;
},
{
glyphname = "nwa-ethiopic";
lastChange = "2021-01-01 03:44:38 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 257, -6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 450;
}
);
unicode = 1297;
},
{
glyphname = "nya-ethiopic";
lastChange = "2020-12-28 19:07:10 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 112, -41}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
};
width = 384;
}
);
unicode = 1298;
},
{
glyphname = "nyu-ethiopic";
lastChange = "2020-12-28 19:07:10 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 394, 10}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 112, -41}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 384;
}
);
unicode = 1299;
},
{
glyphname = "nyi-ethiopic";
lastChange = "2020-12-28 19:19:48 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 230, 0}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 112, -41}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi = 1;
};
width = 384;
}
);
unicode = 129A;
},
{
glyphname = "nyaa-ethiopic";
lastChange = "2021-01-01 00:02:02 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 248, 2}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 213, -69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 450;
}
);
unicode = 129B;
},
{
glyphname = "nyee-ethiopic";
lastChange = "2021-01-01 21:46:30 +0000";
layers = (
{
components = (
{
name = na.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 231, -52}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 112, -41}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 384;
}
);
unicode = 129C;
},
{
glyphname = "nye-ethiopic";
lastChange = "2021-01-05 09:33:36 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 212, 5}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 124, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he = 1;
};
width = 364;
}
);
unicode = 129D;
},
{
glyphname = "nyo-ethiopic";
lastChange = "2021-01-05 08:50:51 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 248, 2}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 359, -207}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 213, -69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 450;
}
);
unicode = 129E;
},
{
glyphname = "nywa-ethiopic";
lastChange = "2021-01-01 03:44:38 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 257, -6}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 213, -69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 450;
}
);
unicode = 129F;
},
{
glyphname = "aGlottal-ethiopic";
lastChange = "2020-12-28 09:46:29 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.aGl;
transform = "{1, 0, 0, 1, 130, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.aGl = 1;
};
width = 521;
}
);
unicode = 12A0;
},
{
glyphname = "uGlottal-ethiopic";
lastChange = "2020-12-28 09:52:50 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.aGl;
transform = "{1, 0, 0, 1, 130, -4}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 552, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.aGl = 1;
_smart.hu = 1;
};
width = 521;
}
);
unicode = 12A1;
},
{
glyphname = "iGlottal-ethiopic";
lastChange = "2020-12-28 19:19:49 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.aGl;
transform = "{1, 0, 0, 1, 130, -4}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 387, 3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.aGl = 1;
_smart.hi = 1;
};
width = 521;
}
);
unicode = 12A2;
},
{
glyphname = "aaGlottal-ethiopic";
lastChange = "2020-12-28 09:53:35 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.aGl;
transform = "{1, 0, 0, 1, 130, -4}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.aGl = 1;
_smart.haa = 1;
};
width = 521;
}
);
unicode = 12A3;
},
{
glyphname = "eeGlottal-ethiopic";
lastChange = "2020-12-28 09:53:59 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.aGl;
transform = "{1, 0, 0, 1, 130, -4}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 395, -49}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.aGl = 1;
_smart.hee = 1;
};
width = 521;
}
);
unicode = 12A4;
},
{
glyphname = "eGlottal-ethiopic";
lastChange = "2021-01-11 19:35:22 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.aGl;
transform = "{1, 0, 0, 1, 130, -4}";
},
{
name = _smart.eGl;
transform = "{1, 0, 0, 1, 40, 12}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.aGl = 1;
_smart.eGl = 1;
};
width = 521;
}
);
unicode = 12A5;
},
{
glyphname = "oGlottal-ethiopic";
lastChange = "2020-12-28 09:55:11 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.aGl;
transform = "{1, 0, 0, 1, 130, -4}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 99, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.aGl = 1;
_smart.ho = 1;
};
width = 521;
}
);
unicode = 12A6;
},
{
glyphname = "waGlottal-ethiopic";
lastChange = "2020-12-28 10:03:19 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.aGl;
transform = "{1, 0, 0, 1, 130, -4}";
},
{
name = _smart.hat.left.aGl;
transform = "{1, 0, 0, 1, 102, 36}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.aGl = 1;
_smart.hat.left = 1;
_smart.hat.left.aGl = 1;
};
width = 521;
}
);
unicode = 12A7;
},
{
glyphname = "ka-ethiopic";
lastChange = "2020-12-31 21:08:55 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12A8;
},
{
glyphname = "ku-ethiopic";
lastChange = "2020-12-31 21:08:45 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 552, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12A9;
},
{
glyphname = "ki-ethiopic";
lastChange = "2020-12-31 21:08:55 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 387, 3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12AA;
},
{
glyphname = "kaa-ethiopic";
lastChange = "2020-12-31 21:08:55 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12AB;
},
{
glyphname = "kee-ethiopic";
lastChange = "2020-12-31 21:08:55 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 395, -49}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12AC;
},
{
glyphname = "ke-ethiopic";
lastChange = "2020-12-31 21:08:55 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 165, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12AD;
},
{
glyphname = "ko-ethiopic";
lastChange = "2020-12-31 21:08:55 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 99, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12AE;
},
{
glyphname = "koa-ethiopic";
lastChange = "2021-01-06 19:50:38 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12AF;
},
{
glyphname = "kwa-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12B0;
},
{
glyphname = "kwi-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12B2;
},
{
glyphname = "kwaa-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12B3;
},
{
glyphname = "kwee-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12B4;
},
{
glyphname = "kwe-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12B5;
},
{
glyphname = "kxa-ethiopic";
lastChange = "2021-01-01 22:45:48 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12B8;
},
{
glyphname = "kxu-ethiopic";
lastChange = "2021-01-01 22:45:48 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 552, 7}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12B9;
},
{
glyphname = "kxi-ethiopic";
lastChange = "2021-01-01 22:45:48 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 387, 3}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hi = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12BA;
},
{
glyphname = "kxaa-ethiopic";
lastChange = "2021-01-01 22:45:48 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 368, 0}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12BB;
},
{
glyphname = "kxee-ethiopic";
lastChange = "2021-01-01 22:45:48 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 395, -49}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12BC;
},
{
glyphname = "kxe-ethiopic";
lastChange = "2021-01-01 22:45:48 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 165, 0}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.he = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12BD;
},
{
glyphname = "kxo-ethiopic";
lastChange = "2021-01-01 22:45:48 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 99, 4}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.ho = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12BE;
},
{
glyphname = "kxwa-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12C0;
},
{
glyphname = "kxwi-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12C2;
},
{
glyphname = "kxwaa-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12C3;
},
{
glyphname = "kxwee-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12C4;
},
{
glyphname = "kxwe-ethiopic";
lastChange = "2021-01-06 19:50:42 +0000";
layers = (
{
components = (
{
name = aglka.base;
},
{
name = _smart.ka;
transform = "{1, 0, 0, 1, 137, -38}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 371, -31}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 87, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka = 1;
};
width = 521;
}
);
unicode = 12C5;
},
{
glyphname = "wa-ethiopic";
lastChange = "2020-12-28 23:28:03 +0000";
layers = (
{
components = (
{
name = wa.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 761;
}
);
unicode = 12C8;
},
{
glyphname = "wu-ethiopic";
lastChange = "2020-12-28 23:28:03 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 688, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hu = 1;
};
width = 761;
}
);
unicode = 12C9;
},
{
glyphname = "wi-ethiopic";
lastChange = "2021-01-06 19:50:53 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 369, -235}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 761;
}
);
unicode = 12CA;
},
{
glyphname = "waa-ethiopic";
lastChange = "2020-12-31 23:24:30 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 350, 9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 761;
}
);
unicode = 12CB;
},
{
glyphname = "wee-ethiopic";
lastChange = "2020-12-28 23:28:03 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 391, -15}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 761;
}
);
unicode = 12CC;
},
{
glyphname = "we-ethiopic";
lastChange = "2020-12-28 23:28:03 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 688, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hu = 1;
};
width = 761;
}
);
unicode = 12CD;
},
{
glyphname = "wo-ethiopic";
lastChange = "2020-12-28 23:28:03 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 393, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 761;
}
);
unicode = 12CE;
},
{
glyphname = "woa-ethiopic";
lastChange = "2021-01-01 01:52:59 +0000";
layers = (
{
components = (
{
name = wa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 345, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 761;
}
);
unicode = 12CF;
},
{
glyphname = "aPharyngeal-ethiopic";
lastChange = "2020-12-28 23:28:11 +0000";
layers = (
{
components = (
{
name = aPh.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 573;
}
);
unicode = 12D0;
},
{
glyphname = "uPharyngeal-ethiopic";
lastChange = "2021-01-01 03:36:08 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 604, 91}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 573;
}
);
unicode = 12D1;
},
{
glyphname = "iPharyngeal-ethiopic";
lastChange = "2021-01-11 18:53:34 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 377, -236}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 280, -3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.ho = 1;
};
width = 573;
}
);
unicode = 12D2;
},
{
glyphname = "aaPharyngeal-ethiopic";
lastChange = "2020-12-28 23:28:13 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 375, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 573;
}
);
unicode = 12D3;
},
{
glyphname = "eePharyngeal-ethiopic";
lastChange = "2021-01-01 21:47:37 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 287, -60}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 573;
}
);
unicode = 12D4;
},
{
glyphname = "ePharyngeal-ethiopic";
lastChange = "2020-12-28 23:28:13 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 292, 8}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck = 1;
};
width = 573;
}
);
unicode = 12D5;
},
{
glyphname = "oPharyngeal-ethiopic";
lastChange = "2020-12-28 23:28:13 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 288, -21}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 573;
}
);
unicode = 12D6;
},
{
glyphname = "za-ethiopic";
lastChange = "2021-01-01 22:50:08 +0000";
layers = (
{
components = (
{
name = za.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 511;
}
);
unicode = 12D8;
},
{
glyphname = "zu-ethiopic";
lastChange = "2021-01-01 22:50:08 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 526, 26}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 511;
}
);
unicode = 12D9;
},
{
glyphname = "zi-ethiopic";
lastChange = "2021-01-01 22:50:08 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 383, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 511;
}
);
unicode = 12DA;
},
{
glyphname = "zaa-ethiopic";
lastChange = "2021-01-01 22:50:08 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 361, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 511;
}
);
unicode = 12DB;
},
{
glyphname = "zee-ethiopic";
lastChange = "2021-01-01 22:50:06 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 388, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 511;
}
);
unicode = 12DC;
},
{
glyphname = "ze-ethiopic";
lastChange = "2021-01-06 19:52:33 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 260, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
};
width = 511;
}
);
unicode = 12DD;
},
{
glyphname = "zo-ethiopic";
lastChange = "2021-01-01 22:50:08 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 106, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 511;
}
);
unicode = 12DE;
},
{
glyphname = "zwa-ethiopic";
lastChange = "2021-01-01 22:50:08 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 366, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 511;
}
);
unicode = 12DF;
},
{
glyphname = "zha-ethiopic";
lastChange = "2021-01-01 22:58:04 +0000";
layers = (
{
anchors = (
{
name = _cha;
position = "{514, 113}";
}
);
components = (
{
name = za.base;
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 268, 395}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 268, 395}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.zha = 1;
};
width = 511;
}
);
unicode = 12E0;
},
{
glyphname = "zhu-ethiopic";
lastChange = "2021-01-01 22:58:04 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 526, 26}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 268, 395}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.zha = 1;
};
width = 511;
}
);
unicode = 12E1;
},
{
glyphname = "zhi-ethiopic";
lastChange = "2021-01-01 22:58:04 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 383, 2}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 268, 395}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.zha = 1;
};
width = 511;
}
);
unicode = 12E2;
},
{
glyphname = "zhaa-ethiopic";
lastChange = "2021-01-01 22:58:04 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 361, 1}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 268, 395}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.zha = 1;
};
width = 511;
}
);
unicode = 12E3;
},
{
glyphname = "zhee-ethiopic";
lastChange = "2021-01-01 22:58:04 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 388, -50}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 268, 395}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.zha = 1;
};
width = 511;
}
);
unicode = 12E4;
},
{
glyphname = "zhe-ethiopic";
lastChange = "2021-01-06 19:52:31 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 260, 6}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 268, 395}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
_smart.zha = 1;
};
width = 511;
}
);
unicode = 12E5;
},
{
glyphname = "zho-ethiopic";
lastChange = "2021-01-01 22:58:01 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 106, 1}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 268, 395}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.zha = 1;
};
width = 511;
}
);
unicode = 12E6;
},
{
glyphname = "zhwa-ethiopic";
lastChange = "2021-01-01 22:58:04 +0000";
layers = (
{
components = (
{
name = za.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 366, 1}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 268, 395}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.zha = 1;
};
width = 511;
}
);
unicode = 12E7;
},
{
glyphname = "ya-ethiopic";
lastChange = "2021-01-06 22:41:19 +0000";
layers = (
{
components = (
{
name = ya.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 480;
}
);
unicode = 12E8;
},
{
glyphname = "yu-ethiopic";
lastChange = "2021-01-06 22:41:19 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.yu;
transform = "{1, 0, 0, 1, 221, 92}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 480;
}
);
unicode = 12E9;
},
{
glyphname = "yi-ethiopic";
lastChange = "2021-01-06 22:41:19 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 34, -17}";
},
{
name = _smart.yu;
transform = "{1, 0, 0, 1, 221, 92}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.yu = 1;
};
width = 480;
}
);
unicode = 12EA;
},
{
glyphname = "yaa-ethiopic";
lastChange = "2021-01-06 22:41:19 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 128, 12}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 480;
}
);
unicode = 12EB;
},
{
glyphname = "yee-ethiopic";
lastChange = "2021-01-06 22:41:19 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 267, 45}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 480;
}
);
unicode = 12EC;
},
{
glyphname = "ye-ethiopic";
lastChange = "2021-01-06 22:41:19 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.ye;
transform = "{1, 0, 0, 1, 312, 30}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 480;
}
);
unicode = 12ED;
},
{
glyphname = "yo-ethiopic";
lastChange = "2021-01-06 22:41:19 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 560, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 480;
}
);
unicode = 12EE;
},
{
glyphname = "yoa-ethiopic";
lastChange = "2021-01-06 22:41:19 +0000";
layers = (
{
components = (
{
name = ya.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 560, 4}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 13, -155}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hu = 1;
};
width = 480;
}
);
unicode = 12EF;
},
{
glyphname = "da-ethiopic";
lastChange = "2020-12-31 23:58:08 +0000";
layers = (
{
components = (
{
name = da.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 493;
}
);
unicode = 12F0;
},
{
glyphname = "du-ethiopic";
lastChange = "2020-12-31 23:58:08 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 559, -185}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 493;
}
);
unicode = 12F1;
},
{
glyphname = "di-ethiopic";
lastChange = "2021-01-06 23:06:36 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 364, -270}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 374, -34}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 493;
}
);
unicode = 12F2;
},
{
glyphname = "daa-ethiopic";
lastChange = "2020-12-31 23:58:31 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 374, -34}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 493;
}
);
unicode = 12F3;
},
{
glyphname = "dee-ethiopic";
lastChange = "2021-01-01 22:14:17 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 372, -82}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 493;
}
);
unicode = 12F4;
},
{
glyphname = "de-ethiopic";
lastChange = "2021-01-01 03:03:01 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 395, 70}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 493;
}
);
unicode = 12F5;
},
{
glyphname = "do-ethiopic";
lastChange = "2021-01-06 19:08:55 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 61, 54}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 493;
}
);
unicode = 12F6;
},
{
glyphname = "dwa-ethiopic";
lastChange = "2021-01-06 19:56:23 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 377, -33}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 493;
}
);
unicode = 12F7;
},
{
glyphname = "dda-ethiopic";
lastChange = "2020-12-31 23:58:08 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck = 1;
};
width = 493;
}
);
unicode = 12F8;
},
{
glyphname = "ddu-ethiopic";
lastChange = "2020-12-31 23:58:08 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 559, -185}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 12F9;
},
{
glyphname = "ddi-ethiopic";
lastChange = "2021-01-06 23:06:36 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 364, -270}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 374, -34}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 12FA;
},
{
glyphname = "ddaa-ethiopic";
lastChange = "2020-12-31 23:58:32 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 374, -34}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 12FB;
},
{
glyphname = "ddee-ethiopic";
lastChange = "2021-01-01 22:14:21 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 372, -82}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 12FC;
},
{
glyphname = "dde-ethiopic";
lastChange = "2021-01-01 03:03:01 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 395, 70}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 12FD;
},
{
glyphname = "ddo-ethiopic";
lastChange = "2021-01-06 19:09:22 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 61, 54}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 12FE;
},
{
glyphname = "ddwa-ethiopic";
lastChange = "2021-01-06 19:56:26 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 377, -33}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 12FF;
},
{
glyphname = "ja-ethiopic";
lastChange = "2020-12-31 23:58:08 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 286, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 1300;
},
{
glyphname = "ju-ethiopic";
lastChange = "2020-12-31 23:58:08 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 559, -185}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 286, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 1301;
},
{
glyphname = "ji-ethiopic";
lastChange = "2021-01-06 23:06:36 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 364, -270}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 286, 4}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 374, -34}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 1302;
},
{
glyphname = "jaa-ethiopic";
lastChange = "2020-12-31 23:58:32 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 374, -34}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 286, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 1303;
},
{
glyphname = "jee-ethiopic";
lastChange = "2021-01-01 22:14:21 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 372, -82}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 286, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 1304;
},
{
glyphname = "je-ethiopic";
lastChange = "2021-01-01 03:03:01 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 395, 70}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 286, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 1305;
},
{
glyphname = "jo-ethiopic";
lastChange = "2021-01-06 19:09:22 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 61, 54}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 286, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 1306;
},
{
glyphname = "jwa-ethiopic";
lastChange = "2021-01-06 19:56:26 +0000";
layers = (
{
components = (
{
name = da.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 377, -33}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 287, 7}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 286, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 493;
}
);
unicode = 1307;
},
{
glyphname = "ga-ethiopic";
lastChange = "2021-01-05 09:28:12 +0000";
layers = (
{
components = (
{
name = ga.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 364;
}
);
unicode = 1308;
},
{
glyphname = "gu-ethiopic";
lastChange = "2021-01-05 09:28:42 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 405, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 364;
}
);
unicode = 1309;
},
{
glyphname = "gi-ethiopic";
lastChange = "2021-01-05 09:28:58 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 247, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 364;
}
);
unicode = 130A;
},
{
glyphname = "gaa-ethiopic";
lastChange = "2021-01-06 19:56:47 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 242, 161}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 364;
}
);
unicode = 130B;
},
{
glyphname = "gee-ethiopic";
lastChange = "2021-01-05 09:28:58 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 247, -51}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 364;
}
);
unicode = 130C;
},
{
glyphname = "ge-ethiopic";
lastChange = "2021-01-06 22:58:07 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 63, -148}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 364;
}
);
unicode = 130D;
},
{
glyphname = "go-ethiopic";
lastChange = "2021-01-05 09:27:57 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 219, 20}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck = 1;
};
width = 364;
}
);
unicode = 130E;
},
{
glyphname = "goa-ethiopic";
lastChange = "2021-01-05 09:29:48 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 257, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 364;
}
);
unicode = 130F;
},
{
glyphname = "gwa-ethiopic";
lastChange = "2021-01-05 09:30:50 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 257, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 364;
}
);
unicode = 1310;
},
{
glyphname = "gwi-ethiopic";
lastChange = "2021-01-05 09:30:50 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 257, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 364;
}
);
unicode = 1312;
},
{
glyphname = "gwaa-ethiopic";
lastChange = "2021-01-05 09:30:50 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 257, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 364;
}
);
unicode = 1313;
},
{
glyphname = "gwee-ethiopic";
lastChange = "2021-01-05 09:30:50 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 257, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 364;
}
);
unicode = 1314;
},
{
glyphname = "gwe-ethiopic";
lastChange = "2021-01-05 09:30:50 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 257, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 364;
}
);
unicode = 1315;
},
{
glyphname = "gga-ethiopic";
lastChange = "2021-01-05 09:27:57 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 219, 20}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 212, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 364;
}
);
unicode = 1318;
},
{
glyphname = "ggu-ethiopic";
lastChange = "2021-01-05 09:28:58 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 405, 7}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 219, 20}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 212, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 364;
}
);
unicode = 1319;
},
{
glyphname = "ggi-ethiopic";
lastChange = "2021-01-05 09:28:58 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 247, 0}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 219, 20}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 212, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 364;
}
);
unicode = 131A;
},
{
glyphname = "ggaa-ethiopic";
lastChange = "2021-01-06 19:56:52 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 242, 161}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 219, 20}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 212, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 364;
}
);
unicode = 131B;
},
{
glyphname = "ggee-ethiopic";
lastChange = "2021-01-05 09:28:58 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 247, -51}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 219, 20}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 212, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 364;
}
);
unicode = 131C;
},
{
glyphname = "gge-ethiopic";
lastChange = "2021-01-06 22:58:23 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 63, -148}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 219, 20}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 212, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 364;
}
);
unicode = 131D;
},
{
glyphname = "ggo-ethiopic";
lastChange = "2021-01-05 09:30:50 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 257, 6}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 219, 20}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 212, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 364;
}
);
unicode = 131E;
},
{
glyphname = "ggwaa-ethiopic";
lastChange = "2021-01-05 09:30:50 +0000";
layers = (
{
components = (
{
name = ga.base;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 257, 6}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 219, 20}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 212, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 364;
}
);
unicode = 131F;
},
{
glyphname = "tha-ethiopic";
lastChange = "2020-12-27 20:59:54 +0000";
layers = (
{
components = (
{
name = hha.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 794;
}
);
unicode = 1320;
},
{
glyphname = "thu-ethiopic";
lastChange = "2020-12-28 02:29:12 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 824, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 794;
}
);
unicode = 1321;
},
{
glyphname = "thi-ethiopic";
lastChange = "2021-01-06 19:57:29 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 657, -7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 794;
}
);
unicode = 1322;
},
{
glyphname = "thaa-ethiopic";
lastChange = "2020-12-27 22:20:23 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 644, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 794;
}
);
unicode = 1323;
},
{
glyphname = "thee-ethiopic";
lastChange = "2021-01-01 21:46:43 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 655, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 794;
}
);
unicode = 1324;
},
{
glyphname = "the-ethiopic";
lastChange = "2021-01-06 23:03:57 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = acute;
transform = "{1, 0, 0, 1, 372, -702}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 794;
}
);
unicode = 1325;
},
{
glyphname = "tho-ethiopic";
lastChange = "2020-12-27 22:25:50 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 91, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 794;
}
);
unicode = 1326;
},
{
glyphname = "thwa-ethiopic";
lastChange = "2021-01-06 19:34:28 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 643, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 794;
}
);
unicode = 1327;
},
{
glyphname = "cha-ethiopic";
lastChange = "2020-12-28 00:18:08 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 394, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha = 1;
};
width = 794;
}
);
unicode = 1328;
},
{
glyphname = "chu-ethiopic";
lastChange = "2020-12-28 02:29:13 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 824, 5}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 394, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha = 1;
_smart.hu = 1;
};
width = 794;
}
);
unicode = 1329;
},
{
glyphname = "chi-ethiopic";
lastChange = "2021-01-06 19:57:27 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 657, -7}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 394, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha = 1;
_smart.hi = 1;
};
width = 794;
}
);
unicode = 132A;
},
{
glyphname = "chaa-ethiopic";
lastChange = "2020-12-28 00:18:08 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 644, 2}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 394, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha = 1;
_smart.haa = 1;
};
width = 794;
}
);
unicode = 132B;
},
{
glyphname = "chee-ethiopic";
lastChange = "2021-01-01 21:46:46 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 655, -65}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 394, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha = 1;
_smart.hee = 1;
};
width = 794;
}
);
unicode = 132C;
},
{
glyphname = "che-ethiopic";
lastChange = "2021-01-06 23:03:55 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 394, -61}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 372, -702}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha = 1;
_smart.haa.acute = 1;
};
width = 794;
}
);
unicode = 132D;
},
{
glyphname = "cho-ethiopic";
lastChange = "2020-12-28 00:18:08 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 91, 2}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 394, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha = 1;
_smart.ho = 1;
};
width = 794;
}
);
unicode = 132E;
},
{
glyphname = "chwa-ethiopic";
lastChange = "2021-01-06 19:34:30 +0000";
layers = (
{
components = (
{
name = hha.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 643, -31}";
},
{
name = _smart.cha;
transform = "{1, 0, 0, 1, 394, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha = 1;
_smart.hwa = 1;
};
width = 794;
}
);
unicode = 132F;
},
{
glyphname = "pha-ethiopic";
lastChange = "2020-12-28 00:20:26 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 237, 15}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck = 1;
};
width = 485;
}
);
unicode = 1330;
},
{
glyphname = "phu-ethiopic";
lastChange = "2020-12-31 23:59:06 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 237, 15}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 487, -27}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 485;
}
);
unicode = 1331;
},
{
glyphname = "phi-ethiopic";
lastChange = "2020-12-28 19:22:24 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 237, 15}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 357, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.neck = 1;
};
width = 485;
}
);
unicode = 1332;
},
{
glyphname = "phaa-ethiopic";
lastChange = "2020-12-28 00:21:02 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 237, 15}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 327, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 485;
}
);
unicode = 1333;
},
{
glyphname = "phee-ethiopic";
lastChange = "2021-01-06 20:06:15 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 237, 15}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 363, -70}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 485;
}
);
unicode = 1334;
},
{
glyphname = "phe-ethiopic";
lastChange = "2020-12-28 22:53:05 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 237, 15}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 370, 111}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.neck = 1;
};
width = 485;
}
);
unicode = 1335;
},
{
glyphname = "pho-ethiopic";
lastChange = "2020-12-28 00:21:55 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 237, 15}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 87, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 485;
}
);
unicode = 1336;
},
{
glyphname = "phwa-ethiopic";
lastChange = "2021-01-06 19:57:55 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 237, 15}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 339, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 485;
}
);
unicode = 1337;
},
{
glyphname = "tsa-ethiopic";
lastChange = "2020-12-27 21:00:01 +0000";
layers = (
{
components = (
{
name = tsa.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 485;
}
);
unicode = 1338;
},
{
glyphname = "tsu-ethiopic";
lastChange = "2020-12-31 23:59:08 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 487, -27}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 485;
}
);
unicode = 1339;
},
{
glyphname = "tsi-ethiopic";
lastChange = "2020-12-28 19:22:24 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 357, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 485;
}
);
unicode = 133A;
},
{
glyphname = "tsaa-ethiopic";
lastChange = "2020-12-28 00:22:22 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 327, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 485;
}
);
unicode = 133B;
},
{
glyphname = "tsee-ethiopic";
lastChange = "2021-01-06 20:06:14 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 363, -70}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 485;
}
);
unicode = 133C;
},
{
glyphname = "tse-ethiopic";
lastChange = "2020-12-28 22:53:07 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 370, 111}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 485;
}
);
unicode = 133D;
},
{
glyphname = "tso-ethiopic";
lastChange = "2020-12-28 00:22:40 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 87, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 485;
}
);
unicode = 133E;
},
{
glyphname = "tswa-ethiopic";
lastChange = "2021-01-06 19:57:57 +0000";
layers = (
{
components = (
{
name = tsa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 339, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 485;
}
);
unicode = 133F;
},
{
glyphname = "tza-ethiopic";
lastChange = "2020-12-28 23:28:13 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 277, 214}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
};
width = 573;
}
);
unicode = 1340;
},
{
glyphname = "tzu-ethiopic";
lastChange = "2021-01-01 03:34:46 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 604, 91}";
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 277, 214}";
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 277, 214}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.hu = 1;
};
width = 573;
}
);
unicode = 1341;
},
{
glyphname = "tzi-ethiopic";
lastChange = "2021-01-11 18:52:27 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 277, 214}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 377, -236}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 375, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.haa = 1;
_smart.hi = 1;
};
width = 573;
}
);
unicode = 1342;
},
{
glyphname = "tzaa-ethiopic";
lastChange = "2020-12-28 23:28:13 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 277, 214}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 375, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.haa = 1;
};
width = 573;
}
);
unicode = 1343;
},
{
glyphname = "tzee-ethiopic";
lastChange = "2021-01-01 21:47:09 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 277, 214}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 287, -60}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.hee = 1;
};
width = 573;
}
);
unicode = 1344;
},
{
glyphname = "tze-ethiopic";
lastChange = "2020-12-28 23:28:13 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 277, 214}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 292, 8}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.neck = 1;
};
width = 573;
}
);
unicode = 1345;
},
{
glyphname = "tzo-ethiopic";
lastChange = "2020-12-28 23:28:13 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 277, 214}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 288, -21}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.haa.acute = 1;
};
width = 573;
}
);
unicode = 1346;
},
{
glyphname = "tzoa-ethiopic";
lastChange = "2020-12-28 23:28:13 +0000";
layers = (
{
components = (
{
name = aPh.base;
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 277, 214}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 287, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.hwa = 1;
};
width = 573;
}
);
unicode = 1347;
},
{
glyphname = "fa-ethiopic";
lastChange = "2021-01-01 03:53:02 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 305, 16}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 482;
}
);
unicode = 1348;
},
{
glyphname = "fu-ethiopic";
lastChange = "2021-01-06 20:04:44 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 305, 16}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 312, 42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.haa.acute = 1;
};
width = 482;
}
);
unicode = 1349;
},
{
glyphname = "fi-ethiopic";
lastChange = "2021-01-01 03:53:02 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 444, -93}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 305, 16}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.ri = 1;
};
width = 482;
}
);
unicode = 134A;
},
{
glyphname = "faa-ethiopic";
lastChange = "2021-01-01 03:52:55 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 262, 2}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 305, 16}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.haa = 1;
};
width = 482;
}
);
unicode = 134B;
},
{
glyphname = "fee-ethiopic";
lastChange = "2021-01-06 19:11:34 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 356, -42}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 305, 16}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.hee = 1;
};
width = 482;
}
);
unicode = 134C;
},
{
glyphname = "fe-ethiopic";
lastChange = "2021-01-01 03:43:10 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 248, 2}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 292, -25}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.haa = 1;
};
width = 450;
}
);
unicode = 134D;
},
{
glyphname = "fo-ethiopic";
lastChange = "2021-01-05 08:50:51 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 359, -207}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 292, -25}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 450;
}
);
unicode = 134E;
},
{
glyphname = "fwa-ethiopic";
lastChange = "2021-01-05 08:50:51 +0000";
layers = (
{
components = (
{
name = re.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 257, -6}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 359, -207}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 292, -25}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 450;
}
);
unicode = 134F;
},
{
glyphname = "pa-ethiopic";
lastChange = "2020-12-27 21:03:10 +0000";
layers = (
{
components = (
{
name = pa.base;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 324;
}
);
unicode = 1350;
},
{
glyphname = "pu-ethiopic";
lastChange = "2020-12-27 23:42:59 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 266, 5}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 324;
}
);
unicode = 1351;
},
{
glyphname = "pi-ethiopic";
lastChange = "2020-12-28 19:22:28 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 132, 6}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
};
width = 324;
}
);
unicode = 1352;
},
{
glyphname = "paa-ethiopic";
lastChange = "2021-01-06 20:02:10 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 142, 161}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.he = 1;
};
width = 324;
}
);
unicode = 1353;
},
{
glyphname = "pee-ethiopic";
lastChange = "2021-01-06 20:06:00 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 128, -75}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 324;
}
);
unicode = 1354;
},
{
glyphname = "pe-ethiopic";
lastChange = "2020-12-27 23:44:05 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 207, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 324;
}
);
unicode = 1355;
},
{
glyphname = "po-ethiopic";
lastChange = "2021-01-06 20:03:43 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = acute;
transform = "{1, 0, 0, 1, -3, -714}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 324;
}
);
unicode = 1356;
},
{
glyphname = "pwa-ethiopic";
lastChange = "2021-01-06 20:05:52 +0000";
layers = (
{
components = (
{
name = pa.base;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 99, -43}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 324;
}
);
unicode = 1357;
},
{
glyphname = "rya-ethiopic";
lastChange = "2021-01-06 20:04:33 +0000";
layers = (
{
components = (
{
name = ra.base;
},
{
name = _smart.haa.acute;
transform = "{-1, 0, 0, -1, 312, 42}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 149, -135}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.hat.left = 1;
};
width = 482;
}
);
unicode = 1358;
},
{
glyphname = "ha-ethiopic.etcp";
lastChange = "2021-01-02 00:02:48 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 806;
}
);
},
{
glyphname = "hu-ethiopic.etcp";
lastChange = "2021-01-06 21:05:51 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 824, 232}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 806;
}
);
},
{
glyphname = "hi-ethiopic.etcp";
lastChange = "2021-01-06 21:06:43 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 597, -242}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 582, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 806;
}
);
},
{
glyphname = "haa-ethiopic.etcp";
lastChange = "2021-01-06 20:14:21 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 582, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 806;
}
);
},
{
glyphname = "hee-ethiopic.etcp";
lastChange = "2021-01-06 20:14:21 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 582, -25}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 806;
}
);
},
{
glyphname = "he-ethiopic.etcp";
lastChange = "2021-01-06 21:06:56 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 216, 228}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 806;
}
);
},
{
glyphname = "ho-ethiopic.etcp";
lastChange = "2021-01-06 21:07:15 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 673, 309}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 806;
}
);
},
{
glyphname = "hoa-ethiopic.etcp";
lastChange = "2021-01-06 21:07:17 +0000";
layers = (
{
components = (
{
name = ha.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 673, 309}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 216, 228}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.ho.ring = 1;
};
width = 806;
}
);
},
{
glyphname = "la-ethiopic.etcp";
lastChange = "2020-12-28 07:38:49 +0000";
layers = (
{
components = (
{
name = la.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 704;
}
);
},
{
glyphname = "lu-ethiopic.etcp";
lastChange = "2020-12-28 07:39:59 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 615, 195}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 704;
}
);
},
{
glyphname = "li-ethiopic.etcp";
lastChange = "2021-01-06 21:10:13 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 587, -22}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 704;
}
);
},
{
glyphname = "laa-ethiopic.etcp";
lastChange = "2021-01-06 21:10:36 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 544, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 704;
}
);
},
{
glyphname = "lee-ethiopic.etcp";
lastChange = "2021-01-01 23:03:11 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 558, -68}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 704;
}
);
},
{
glyphname = "le-ethiopic.etcp";
lastChange = "2021-01-01 23:09:49 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.le.ring;
transform = "{1, 0, 0, 1, 186, 15}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.le.ring = 1;
};
width = 704;
}
);
},
{
glyphname = "lo-ethiopic.etcp";
lastChange = "2020-12-28 07:41:04 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 567, -53}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 704;
}
);
},
{
glyphname = "lwa-ethiopic.etcp";
lastChange = "2021-01-06 20:07:41 +0000";
layers = (
{
components = (
{
name = la.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 592, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 704;
}
);
},
{
glyphname = "hha-ethiopic.etcp";
lastChange = "2021-01-05 09:36:21 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hha.neck.cap;
transform = "{1, 0, 0, 1, 500, 148}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hha.neck.cap = 1;
};
width = 991;
}
);
},
{
glyphname = "hhu-ethiopic.etcp";
lastChange = "2021-01-05 09:36:23 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hha.neck.cap;
transform = "{1, 0, 0, 1, 500, 148}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 971, 240}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hha.neck.cap = 1;
_smart.hu = 1;
};
width = 991;
}
);
},
{
glyphname = "hhi-ethiopic.etcp";
lastChange = "2021-01-06 21:12:08 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hha.neck.cap;
transform = "{1, 0, 0, 1, 500, 148}";
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 808, -20}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hha.neck.cap = 1;
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 991;
}
);
},
{
glyphname = "hhaa-ethiopic.etcp";
lastChange = "2021-01-05 09:36:23 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hha.neck.cap;
transform = "{1, 0, 0, 1, 500, 148}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 828, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hha.neck.cap = 1;
};
width = 991;
}
);
},
{
glyphname = "hhee-ethiopic.etcp";
lastChange = "2021-01-05 09:36:23 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hha.neck.cap;
transform = "{1, 0, 0, 1, 500, 148}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 809, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.hha.neck.cap = 1;
};
width = 991;
}
);
},
{
glyphname = "hhe-ethiopic.etcp";
lastChange = "2021-01-05 09:36:23 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hha.neck.cap;
transform = "{1, 0, 0, 1, 500, 148}";
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 429, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
_smart.hha.neck.cap = 1;
};
width = 991;
}
);
},
{
glyphname = "hho-ethiopic.etcp";
lastChange = "2021-01-05 09:36:23 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hha.neck.cap;
transform = "{1, 0, 0, 1, 500, 148}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 177, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hha.neck.cap = 1;
_smart.ho = 1;
};
width = 991;
}
);
},
{
glyphname = "hhwa-ethiopic.etcp";
lastChange = "2021-01-05 09:36:23 +0000";
layers = (
{
components = (
{
name = hha.base.cap;
},
{
name = _smart.hha.neck.cap;
transform = "{1, 0, 0, 1, 500, 148}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 777, -21}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hha.neck.cap = 1;
_smart.hwa = 1;
};
width = 991;
}
);
},
{
glyphname = "ma-ethiopic.etcp";
lastChange = "2021-01-07 20:59:09 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 991;
}
);
},
{
glyphname = "mu-ethiopic.etcp";
lastChange = "2021-01-07 21:00:26 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 974, 239}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 991;
}
);
},
{
glyphname = "mi-ethiopic.etcp";
lastChange = "2021-01-07 20:59:05 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 812, -261}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 802, -24}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 991;
}
);
},
{
glyphname = "maa-ethiopic.etcp";
lastChange = "2021-01-07 20:59:09 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 802, -24}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 991;
}
);
},
{
glyphname = "mee-ethiopic.etcp";
lastChange = "2021-01-07 20:59:09 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 832, -66}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 991;
}
);
},
{
glyphname = "me-ethiopic.etcp";
lastChange = "2021-01-07 21:00:08 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 430, -75}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 416, -20}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.haa.acute = 1;
_smart.he.acute = 1;
_smart.ho = 1;
};
width = 991;
}
);
},
{
glyphname = "mo-ethiopic.etcp";
lastChange = "2021-01-07 20:59:09 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 416, -20}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 991;
}
);
},
{
glyphname = "mwa-ethiopic.etcp";
lastChange = "2021-01-07 20:59:09 +0000";
layers = (
{
components = (
{
name = ma.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 802, -39}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 991;
}
);
},
{
glyphname = "sza-ethiopic.etcp";
lastChange = "2020-12-28 07:00:04 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 991;
}
);
},
{
glyphname = "szu-ethiopic.etcp";
lastChange = "2021-01-06 21:13:14 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 1020, 243}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 991;
}
);
},
{
glyphname = "szi-ethiopic.etcp";
lastChange = "2021-01-06 21:13:42 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 707, -220}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 677, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 991;
}
);
},
{
glyphname = "szaa-ethiopic.etcp";
lastChange = "2020-12-28 07:51:17 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 677, -1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 991;
}
);
},
{
glyphname = "szee-ethiopic.etcp";
lastChange = "2021-01-01 23:03:42 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 658, -58}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 991;
}
);
},
{
glyphname = "sze-ethiopic.etcp";
lastChange = "2020-12-28 07:51:29 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 409, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 991;
}
);
},
{
glyphname = "szo-ethiopic.etcp";
lastChange = "2020-12-28 07:51:36 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 317, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 991;
}
);
},
{
glyphname = "szwa-ethiopic.etcp";
lastChange = "2021-01-06 20:09:49 +0000";
layers = (
{
components = (
{
name = sa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 655, -47}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 991;
}
);
},
{
glyphname = "ra-ethiopic.etcp";
lastChange = "2020-12-28 07:00:16 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 708;
}
);
},
{
glyphname = "ru-ethiopic.etcp";
lastChange = "2020-12-28 07:52:34 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 393, -25}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 708;
}
);
},
{
glyphname = "ri-ethiopic.etcp";
lastChange = "2021-01-01 03:44:32 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 700, 9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ri = 1;
};
width = 708;
}
);
},
{
glyphname = "raa-ethiopic.etcp";
lastChange = "2021-01-06 22:49:01 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.ra;
transform = "{1, 0, 0, 1, 556, 188}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.ra = 1;
};
width = 708;
}
);
},
{
glyphname = "ree-ethiopic.etcp";
lastChange = "2021-01-06 21:18:14 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 615, 376}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 708;
}
);
},
{
glyphname = "re-ethiopic.etcp";
lastChange = "2020-12-28 07:00:26 +0000";
layers = (
{
components = (
{
name = re.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 776;
}
);
},
{
glyphname = "ro-ethiopic.etcp";
lastChange = "2020-12-28 07:54:51 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 588, -18}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 776;
}
);
},
{
glyphname = "rwa-ethiopic.etcp";
lastChange = "2021-01-06 21:17:44 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.ra;
transform = "{1, 0, 0, 1, 556, 188}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 180, 91}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.ra = 1;
};
width = 708;
}
);
},
{
glyphname = "sa-ethiopic.etcp";
lastChange = "2021-01-06 21:23:55 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "su-ethiopic.etcp";
lastChange = "2021-01-06 21:24:35 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 872, 227}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "si-ethiopic.etcp";
lastChange = "2021-01-06 21:32:12 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 718, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi.cap = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "saa-ethiopic.etcp";
lastChange = "2021-01-06 21:24:48 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 670, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "see-ethiopic.etcp";
lastChange = "2021-01-06 21:24:54 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 635, -69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "se-ethiopic.etcp";
lastChange = "2021-01-06 21:25:39 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 395, 345}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "so-ethiopic.etcp";
lastChange = "2021-01-06 21:25:11 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 210, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "swa-ethiopic.etcp";
lastChange = "2021-01-06 21:25:17 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "sha-ethiopic.etcp";
lastChange = "2021-01-11 18:53:31 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "shu-ethiopic.etcp";
lastChange = "2021-01-11 18:53:33 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 872, 227}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "shi-ethiopic.etcp";
lastChange = "2021-01-11 18:53:33 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 718, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi.cap = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "shaa-ethiopic.etcp";
lastChange = "2021-01-11 18:53:33 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 670, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "shee-ethiopic.etcp";
lastChange = "2021-01-11 18:53:33 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 635, -69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "she-ethiopic.etcp";
lastChange = "2021-01-11 18:53:33 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 395, 345}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he.acute = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "sho-ethiopic.etcp";
lastChange = "2021-01-11 18:53:33 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 210, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "shwa-ethiopic.etcp";
lastChange = "2021-01-11 18:53:33 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.neck.cap;
transform = "{1, 0, 0, 1, 398, 223}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "qa-ethiopic.etcp";
lastChange = "2021-01-06 21:26:16 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qu-ethiopic.etcp";
lastChange = "2021-01-06 21:26:19 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 995, 371}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qi-ethiopic.etcp";
lastChange = "2021-01-06 21:28:03 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 447, -251}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qaa-ethiopic.etcp";
lastChange = "2021-01-06 21:28:17 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 482, -30}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qee-ethiopic.etcp";
lastChange = "2021-01-05 09:13:56 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 460, -81}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qe-ethiopic.etcp";
lastChange = "2021-01-06 21:27:34 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 421, 327}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.he.acute = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qo-ethiopic.etcp";
lastChange = "2021-01-11 19:21:47 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 474, 291}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 975;
}
);
},
{
glyphname = "qoa-ethiopic.etcp";
lastChange = "2021-01-06 21:30:47 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qwa-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qwi-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qwaa-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qwee-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qwe-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qha-ethiopic.etcp";
lastChange = "2021-01-06 21:26:19 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qhu-ethiopic.etcp";
lastChange = "2021-01-06 21:26:19 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 995, 371}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qhi-ethiopic.etcp";
lastChange = "2021-01-06 21:28:05 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 447, -251}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qhaa-ethiopic.etcp";
lastChange = "2021-01-06 21:30:30 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 482, -30}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qhee-ethiopic.etcp";
lastChange = "2021-01-05 09:13:56 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 460, -81}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qhe-ethiopic.etcp";
lastChange = "2021-01-06 21:27:35 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 421, 327}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.he.acute = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qho-ethiopic.etcp";
lastChange = "2021-01-11 19:22:07 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 474, 291}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 975;
}
);
},
{
glyphname = "qhwa-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qhwi-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qhwaa-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qhwee-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "qhwe-ethiopic.etcp";
lastChange = "2021-01-06 21:30:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 465, 215}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 464, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 975;
}
);
},
{
glyphname = "ba-ethiopic.etcp";
lastChange = "2021-01-06 20:19:06 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 900;
}
);
},
{
glyphname = "bu-ethiopic.etcp";
lastChange = "2021-01-06 21:21:43 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 872, 227}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 900;
}
);
},
{
glyphname = "bi-ethiopic.etcp";
lastChange = "2021-01-06 21:32:09 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 718, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "baa-ethiopic.etcp";
lastChange = "2021-01-06 21:23:01 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 670, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 900;
}
);
},
{
glyphname = "bee-ethiopic.etcp";
lastChange = "2021-01-06 20:19:07 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 635, -69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 900;
}
);
},
{
glyphname = "be-ethiopic.etcp";
lastChange = "2021-01-06 21:31:41 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 251, 70}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 900;
}
);
},
{
glyphname = "bo-ethiopic.etcp";
lastChange = "2021-01-06 21:22:41 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 210, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 900;
}
);
},
{
glyphname = "bwa-ethiopic.etcp";
lastChange = "2021-01-06 21:22:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 900;
}
);
},
{
glyphname = "va-ethiopic.etcp";
lastChange = "2021-01-11 18:53:33 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
};
width = 900;
}
);
},
{
glyphname = "vu-ethiopic.etcp";
lastChange = "2021-01-11 18:53:33 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 872, 227}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 900;
}
);
},
{
glyphname = "vi-ethiopic.etcp";
lastChange = "2021-01-11 18:53:34 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 718, -19}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "vaa-ethiopic.etcp";
lastChange = "2021-01-11 18:53:34 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 670, 0}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 900;
}
);
},
{
glyphname = "vee-ethiopic.etcp";
lastChange = "2021-01-11 18:53:34 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 635, -69}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 900;
}
);
},
{
glyphname = "ve-ethiopic.etcp";
lastChange = "2021-01-11 18:53:34 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 251, 70}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he = 1;
};
width = 900;
}
);
},
{
glyphname = "vo-ethiopic.etcp";
lastChange = "2021-01-11 18:53:34 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 210, 4}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho = 1;
};
width = 900;
}
);
},
{
glyphname = "vwa-ethiopic.etcp";
lastChange = "2021-01-11 18:53:34 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 445, 216}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 900;
}
);
},
{
glyphname = "ta-ethiopic.etcp";
lastChange = "2021-01-06 21:34:25 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 737;
}
);
},
{
glyphname = "tu-ethiopic.etcp";
lastChange = "2021-01-06 21:34:46 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 552, 3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 737;
}
);
},
{
glyphname = "ti-ethiopic.etcp";
lastChange = "2021-01-06 21:35:10 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 384, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi.cap = 1;
};
width = 737;
}
);
},
{
glyphname = "taa-ethiopic.etcp";
lastChange = "2021-01-06 21:38:18 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.haa.acute.cap;
transform = "{1, 0, 0, 1, 348, 161}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.haa.acute.cap = 1;
};
width = 737;
}
);
},
{
glyphname = "tee-ethiopic.etcp";
lastChange = "2021-01-06 21:38:29 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 372, -44}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 737;
}
);
},
{
glyphname = "te-ethiopic.etcp";
lastChange = "2021-01-06 21:38:38 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 296, 198}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
};
width = 737;
}
);
},
{
glyphname = "to-ethiopic.etcp";
lastChange = "2021-01-06 21:38:46 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 382, 320}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 737;
}
);
},
{
glyphname = "twa-ethiopic.etcp";
lastChange = "2021-01-06 21:38:52 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 343, -36}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 737;
}
);
},
{
glyphname = "ca-ethiopic.etcp";
lastChange = "2021-01-06 21:39:14 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 369, 93}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
};
width = 737;
}
);
},
{
glyphname = "cu-ethiopic.etcp";
lastChange = "2021-01-06 21:39:17 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 552, 3}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 369, 93}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 737;
}
);
},
{
glyphname = "ci-ethiopic.etcp";
lastChange = "2021-01-06 21:39:17 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 384, -19}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 369, 93}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi.cap = 1;
};
width = 737;
}
);
},
{
glyphname = "caa-ethiopic.etcp";
lastChange = "2021-01-06 21:39:16 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.haa.acute.cap;
transform = "{1, 0, 0, 1, 348, 161}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 369, 93}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
};
width = 737;
}
);
},
{
glyphname = "cee-ethiopic.etcp";
lastChange = "2021-01-06 21:39:16 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 372, -44}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 369, 93}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 737;
}
);
},
{
glyphname = "ce-ethiopic.etcp";
lastChange = "2021-01-06 21:39:17 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 296, 198}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 369, 93}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he.acute = 1;
};
width = 737;
}
);
},
{
glyphname = "co-ethiopic.etcp";
lastChange = "2021-01-06 21:39:16 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 382, 320}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 369, 93}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 737;
}
);
},
{
glyphname = "cwa-ethiopic.etcp";
lastChange = "2021-01-06 21:39:17 +0000";
layers = (
{
components = (
{
name = ta.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 343, -36}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 369, 93}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 737;
}
);
},
{
glyphname = "xa-ethiopic.etcp";
lastChange = "2021-01-06 20:57:05 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 716;
}
);
},
{
glyphname = "xu-ethiopic.etcp";
lastChange = "2021-01-06 21:39:58 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 680, 230}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hu = 1;
};
width = 716;
}
);
},
{
glyphname = "xi-ethiopic.etcp";
lastChange = "2021-01-06 21:40:58 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 525, -15}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 716;
}
);
},
{
glyphname = "xaa-ethiopic.etcp";
lastChange = "2021-01-06 21:41:43 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.haa.acute.cap;
transform = "{1, 0, 0, 1, 491, 165}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.haa.acute.cap = 1;
_smart.he = 1;
};
width = 716;
}
);
},
{
glyphname = "xee-ethiopic.etcp";
lastChange = "2021-01-06 21:41:59 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 554, -55}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hee = 1;
};
width = 716;
}
);
},
{
glyphname = "xe-ethiopic.etcp";
lastChange = "2021-01-06 21:42:38 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.nose.ext;
transform = "{1, 0, 0, 1, -103, 163}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.nose.ext = 1;
};
width = 716;
}
);
},
{
glyphname = "xo-ethiopic.etcp";
lastChange = "2021-01-06 21:44:50 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 158, 108}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 588, -18}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 608, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.he = 1;
_smart.ho.ring = 1;
};
width = 776;
}
);
},
{
glyphname = "xoa-ethiopic.etcp";
lastChange = "2021-01-06 21:43:06 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 158, 108}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 588, -18}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 551, -49}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.ho.ring = 1;
_smart.hwa = 1;
};
width = 776;
}
);
},
{
glyphname = "xwa-ethiopic.etcp";
lastChange = "2021-01-06 21:43:53 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 503, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.he = 1;
};
width = 716;
}
);
},
{
glyphname = "xwi-ethiopic.etcp";
lastChange = "2021-01-06 21:44:04 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 503, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.he = 1;
};
width = 716;
}
);
},
{
glyphname = "xwaa-ethiopic.etcp";
lastChange = "2021-01-06 21:44:04 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 503, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.he = 1;
};
width = 716;
}
);
},
{
glyphname = "xwee-ethiopic.etcp";
lastChange = "2021-01-06 21:44:04 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 503, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.he = 1;
};
width = 716;
}
);
},
{
glyphname = "xwe-ethiopic.etcp";
lastChange = "2021-01-06 21:44:04 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, -72, 475}";
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 503, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.he = 1;
};
width = 716;
}
);
},
{
glyphname = "na-ethiopic.etcp";
lastChange = "2021-01-06 20:57:05 +0000";
layers = (
{
components = (
{
name = na.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 716;
}
);
},
{
glyphname = "nu-ethiopic.etcp";
lastChange = "2021-01-06 21:40:00 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 680, 230}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 716;
}
);
},
{
glyphname = "ni-ethiopic.etcp";
lastChange = "2021-01-06 21:44:31 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 525, -15}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 716;
}
);
},
{
glyphname = "naa-ethiopic.etcp";
lastChange = "2021-01-06 21:44:48 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 608, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 776;
}
);
},
{
glyphname = "nee-ethiopic.etcp";
lastChange = "2021-01-06 21:42:01 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 554, -55}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 716;
}
);
},
{
glyphname = "ne-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 387, 239}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 720;
}
);
},
{
glyphname = "no-ethiopic.etcp";
lastChange = "2021-01-06 21:44:50 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 608, -28}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 588, -18}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.ho.ring = 1;
};
width = 776;
}
);
},
{
glyphname = "nwa-ethiopic.etcp";
lastChange = "2021-01-06 21:43:08 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 551, -49}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 776;
}
);
},
{
glyphname = "nya-ethiopic.etcp";
lastChange = "2021-01-06 20:57:05 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 100, 232}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
};
width = 716;
}
);
},
{
glyphname = "nyu-ethiopic.etcp";
lastChange = "2021-01-06 21:40:00 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 680, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 100, 232}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
};
width = 716;
}
);
},
{
glyphname = "nyi-ethiopic.etcp";
lastChange = "2021-01-06 21:44:35 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 100, 232}";
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 525, -15}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 716;
}
);
},
{
glyphname = "nyaa-ethiopic.etcp";
lastChange = "2021-01-06 21:44:50 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 608, -28}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 423, 141}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
};
width = 776;
}
);
},
{
glyphname = "nyee-ethiopic.etcp";
lastChange = "2021-01-06 21:42:01 +0000";
layers = (
{
components = (
{
name = na.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 554, -55}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 100, 232}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
};
width = 716;
}
);
},
{
glyphname = "nye-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 387, 239}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 382, 218}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he = 1;
};
width = 720;
}
);
},
{
glyphname = "nyo-ethiopic.etcp";
lastChange = "2021-01-06 21:44:50 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 608, -28}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 423, 141}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 588, -18}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.ho.ring = 1;
};
width = 776;
}
);
},
{
glyphname = "nywa-ethiopic.etcp";
lastChange = "2021-01-06 21:43:08 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 551, -49}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 423, 141}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
};
width = 776;
}
);
},
{
glyphname = "aGlottal-ethiopic.etcp";
lastChange = "2020-12-28 07:29:52 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 704;
}
);
},
{
glyphname = "uGlottal-ethiopic.etcp";
lastChange = "2021-01-03 20:13:19 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 632, 227}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 704;
}
);
},
{
glyphname = "iGlottal-ethiopic.etcp";
lastChange = "2021-01-06 22:01:12 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 587, -23}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 704;
}
);
},
{
glyphname = "aaGlottal-ethiopic.etcp";
lastChange = "2021-01-06 22:01:37 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 600, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 704;
}
);
},
{
glyphname = "eeGlottal-ethiopic.etcp";
lastChange = "2020-12-28 08:38:14 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 565, -49}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 704;
}
);
},
{
glyphname = "eGlottal-ethiopic.etcp";
lastChange = "2021-01-06 22:01:50 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.eGl;
transform = "{1, 0, 0, 1, 156, 120}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
};
width = 704;
}
);
},
{
glyphname = "oGlottal-ethiopic.etcp";
lastChange = "2020-12-28 08:39:44 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 99, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.ho = 1;
};
width = 704;
}
);
},
{
glyphname = "waGlottal-ethiopic.etcp";
lastChange = "2021-01-01 22:37:02 +0000";
layers = (
{
components = (
{
name = aGl.base.cap;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 187, 159}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
};
width = 704;
}
);
},
{
glyphname = "ka-ethiopic.etcp";
lastChange = "2021-01-06 22:03:23 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ka = 1;
};
width = 900;
}
);
},
{
glyphname = "ku-ethiopic.etcp";
lastChange = "2021-01-06 22:07:42 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 872, 227}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "ki-ethiopic.etcp";
lastChange = "2021-01-06 22:07:50 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 718, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi.cap = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kaa-ethiopic.etcp";
lastChange = "2021-01-06 22:07:58 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 670, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kee-ethiopic.etcp";
lastChange = "2021-01-06 22:08:05 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 635, -69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "ke-ethiopic.etcp";
lastChange = "2021-01-06 22:08:12 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 251, 70}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "ko-ethiopic.etcp";
lastChange = "2021-01-06 22:08:22 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 210, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "koa-ethiopic.etcp";
lastChange = "2021-01-06 22:05:58 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kwa-ethiopic.etcp";
lastChange = "2021-01-06 22:05:58 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kwi-ethiopic.etcp";
lastChange = "2021-01-06 22:06:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kwaa-ethiopic.etcp";
lastChange = "2021-01-06 22:06:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kwee-ethiopic.etcp";
lastChange = "2021-01-06 22:06:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kwe-ethiopic.etcp";
lastChange = "2021-01-06 22:06:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxa-ethiopic.etcp";
lastChange = "2021-01-06 22:07:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxu-ethiopic.etcp";
lastChange = "2021-01-06 22:07:42 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 872, 227}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hu = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxi-ethiopic.etcp";
lastChange = "2021-01-06 22:07:50 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 718, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hi.cap = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxaa-ethiopic.etcp";
lastChange = "2021-01-06 22:07:58 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 670, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat.left = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxee-ethiopic.etcp";
lastChange = "2021-01-06 22:08:05 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 635, -69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hee = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxe-ethiopic.etcp";
lastChange = "2021-01-06 22:08:12 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 251, 70}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.he = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxo-ethiopic.etcp";
lastChange = "2021-01-06 22:08:22 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 210, 4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.ho = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxwa-ethiopic.etcp";
lastChange = "2021-01-06 22:07:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxwi-ethiopic.etcp";
lastChange = "2021-01-06 22:07:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxwaa-ethiopic.etcp";
lastChange = "2021-01-06 22:07:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxwee-ethiopic.etcp";
lastChange = "2021-01-06 22:07:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "kxwe-ethiopic.etcp";
lastChange = "2021-01-06 22:07:28 +0000";
layers = (
{
components = (
{
name = ba.base.cap;
},
{
name = _smart.ka.cap;
transform = "{1, 0, 0, 1, 191, 217}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 679, -39}";
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 125, 190}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.hwa = 1;
_smart.ka.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "wa-ethiopic.etcp";
lastChange = "2021-01-01 03:22:08 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 975;
}
);
},
{
glyphname = "wu-ethiopic.etcp";
lastChange = "2021-01-01 03:22:08 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 995, 371}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 975;
}
);
},
{
glyphname = "wi-ethiopic.etcp";
lastChange = "2021-01-06 22:08:36 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 447, -251}";
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
};
width = 975;
}
);
},
{
glyphname = "waa-ethiopic.etcp";
lastChange = "2021-01-06 21:28:06 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 975;
}
);
},
{
glyphname = "wee-ethiopic.etcp";
lastChange = "2021-01-01 03:35:49 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 460, -81}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 975;
}
);
},
{
glyphname = "we-ethiopic.etcp";
lastChange = "2021-01-01 03:22:08 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 995, 371}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 975;
}
);
},
{
glyphname = "wo-ethiopic.etcp";
lastChange = "2021-01-06 21:28:06 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 428, -14}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 975;
}
);
},
{
glyphname = "woa-ethiopic.etcp";
lastChange = "2021-01-06 21:32:13 +0000";
layers = (
{
components = (
{
name = wa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 440, -42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 975;
}
);
},
{
glyphname = "aPharyngeal-ethiopic.etcp";
lastChange = "2020-12-28 07:03:33 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 808;
}
);
},
{
glyphname = "uPharyngeal-ethiopic.etcp";
lastChange = "2020-12-28 08:48:18 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 822, 339}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 808;
}
);
},
{
glyphname = "iPharyngeal-ethiopic.etcp";
lastChange = "2021-01-06 22:09:16 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 377, -245}";
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 408, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hi = 1;
_smart.ho = 1;
};
width = 808;
}
);
},
{
glyphname = "aaPharyngeal-ethiopic.etcp";
lastChange = "2020-12-28 08:48:30 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 615, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 808;
}
);
},
{
glyphname = "eePharyngeal-ethiopic.etcp";
lastChange = "2021-01-01 23:05:40 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 437, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 808;
}
);
},
{
glyphname = "ePharyngeal-ethiopic.etcp";
lastChange = "2020-12-28 08:48:42 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 402, 258}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck = 1;
};
width = 808;
}
);
},
{
glyphname = "oPharyngeal-ethiopic.etcp";
lastChange = "2020-12-28 08:48:48 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 438, -21}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 808;
}
);
},
{
glyphname = "za-ethiopic.etcp";
lastChange = "2020-12-31 21:00:49 +0000";
layers = (
{
components = (
{
name = za.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 900;
}
);
},
{
glyphname = "zu-ethiopic.etcp";
lastChange = "2020-12-31 21:00:49 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 860, 226}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 900;
}
);
},
{
glyphname = "zi-ethiopic.etcp";
lastChange = "2021-01-06 22:10:36 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 717, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 900;
}
);
},
{
glyphname = "zaa-ethiopic.etcp";
lastChange = "2020-12-31 21:00:49 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 735, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 900;
}
);
},
{
glyphname = "zee-ethiopic.etcp";
lastChange = "2021-01-01 23:02:52 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 683, -60}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 900;
}
);
},
{
glyphname = "ze-ethiopic.etcp";
lastChange = "2020-12-31 21:00:49 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 184, 265}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
};
width = 900;
}
);
},
{
glyphname = "zo-ethiopic.etcp";
lastChange = "2020-12-31 21:00:49 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 180, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 900;
}
);
},
{
glyphname = "zwa-ethiopic.etcp";
lastChange = "2021-01-03 20:16:34 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 694, 1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 900;
}
);
},
{
glyphname = "zha-ethiopic.etcp";
lastChange = "2021-01-01 22:33:11 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 452, 652}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.zha = 1;
};
width = 900;
}
);
},
{
glyphname = "zhu-ethiopic.etcp";
lastChange = "2021-01-01 22:33:11 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 860, 226}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 452, 652}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.zha = 1;
};
width = 900;
}
);
},
{
glyphname = "zhi-ethiopic.etcp";
lastChange = "2021-01-06 22:10:33 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 452, 652}";
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 717, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.hi.cap = 1;
_smart.zha = 1;
};
width = 900;
}
);
},
{
glyphname = "zhaa-ethiopic.etcp";
lastChange = "2021-01-01 22:33:11 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 735, 1}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 452, 652}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.zha = 1;
};
width = 900;
}
);
},
{
glyphname = "zhee-ethiopic.etcp";
lastChange = "2021-01-01 23:02:50 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 683, -60}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 452, 652}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.zha = 1;
};
width = 900;
}
);
},
{
glyphname = "zhe-ethiopic.etcp";
lastChange = "2021-01-01 22:33:11 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.he.acute;
transform = "{1, 0, 0, 1, 184, 265}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 452, 652}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he.acute = 1;
_smart.zha = 1;
};
width = 900;
}
);
},
{
glyphname = "zho-ethiopic.etcp";
lastChange = "2021-01-01 22:33:11 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 180, 1}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 452, 652}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.zha = 1;
};
width = 900;
}
);
},
{
glyphname = "zhwa-ethiopic.etcp";
lastChange = "2021-01-03 20:16:32 +0000";
layers = (
{
components = (
{
name = za.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 694, 1}";
},
{
name = _smart.zha;
transform = "{1, 0, 0, 1, 452, 652}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.zha = 1;
};
width = 900;
}
);
},
{
glyphname = "ya-ethiopic.etcp";
lastChange = "2021-01-05 09:44:06 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 636;
}
);
},
{
glyphname = "yu-ethiopic.etcp";
lastChange = "2021-01-06 22:12:18 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.yu;
transform = "{1, 0, 0, 1, 399, 240}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.yu = 1;
};
width = 636;
}
);
},
{
glyphname = "yi-ethiopic.etcp";
lastChange = "2021-01-06 22:12:15 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 180, 167}";
},
{
name = _smart.yu;
transform = "{1, 0, 0, 1, 399, 240}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.yu = 1;
};
width = 636;
}
);
},
{
glyphname = "yaa-ethiopic.etcp";
lastChange = "2021-01-06 22:12:59 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.haa.acute.cap;
transform = "{1, 0, 0, 1, 182, 161}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.haa.acute.cap = 1;
};
width = 636;
}
);
},
{
glyphname = "yee-ethiopic.etcp";
lastChange = "2021-01-05 09:44:06 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 344, 250}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 636;
}
);
},
{
glyphname = "ye-ethiopic.etcp";
lastChange = "2021-01-06 22:13:20 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.ye;
transform = "{1, 0, 0, 1, 440, 200}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ye = 1;
};
width = 636;
}
);
},
{
glyphname = "yo-ethiopic.etcp";
lastChange = "2021-01-05 09:44:06 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 690, 414}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 636;
}
);
},
{
glyphname = "yoa-ethiopic.etcp";
lastChange = "2021-01-05 09:44:06 +0000";
layers = (
{
components = (
{
name = ya.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 690, 414}";
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 267, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.hu = 1;
};
width = 636;
}
);
},
{
glyphname = "da-ethiopic.etcp";
lastChange = "2021-01-05 09:45:09 +0000";
layers = (
{
components = (
{
name = da.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 648;
}
);
},
{
glyphname = "du-ethiopic.etcp";
lastChange = "2021-01-06 22:13:50 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 686, 52}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 648;
}
);
},
{
glyphname = "di-ethiopic.etcp";
lastChange = "2021-01-06 22:15:32 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 555, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi.cap = 1;
};
width = 648;
}
);
},
{
glyphname = "daa-ethiopic.etcp";
lastChange = "2021-01-05 09:45:09 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 574, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 648;
}
);
},
{
glyphname = "dee-ethiopic.etcp";
lastChange = "2021-01-05 09:45:09 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 566, -42}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 648;
}
);
},
{
glyphname = "de-ethiopic.etcp";
lastChange = "2021-01-05 09:45:09 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 594, 390}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 648;
}
);
},
{
glyphname = "do-ethiopic.etcp";
lastChange = "2021-01-05 09:45:09 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 155, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 648;
}
);
},
{
glyphname = "dwa-ethiopic.etcp";
lastChange = "2021-01-05 09:45:09 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 583, -3}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 648;
}
);
},
{
glyphname = "dda-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ddu-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 686, 52}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ddi-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 555, -19}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi.cap = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ddaa-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 574, 0}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ddee-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 566, -42}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "dde-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 594, 390}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ddo-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 155, 2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ddwa-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 583, -3}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ja-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 496, 154}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ju-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 686, 52}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 496, 154}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ji-ethiopic.etcp";
lastChange = "2021-01-06 22:16:14 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 555, -19}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 496, 154}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi.cap = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "jaa-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 574, 0}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 496, 154}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "jee-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 566, -42}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 496, 154}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "je-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 594, 390}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 496, 154}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.he = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "jo-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 155, 2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 496, 154}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "jwa-ethiopic.etcp";
lastChange = "2021-01-06 22:16:15 +0000";
layers = (
{
components = (
{
name = da.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 583, -3}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 497, 166}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 496, 154}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hwa = 1;
_smart.neck = 1;
};
width = 648;
}
);
},
{
glyphname = "ga-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 720;
}
);
},
{
glyphname = "gu-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 696, 227}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 720;
}
);
},
{
glyphname = "gi-ethiopic.etcp";
lastChange = "2021-01-06 22:17:00 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 538, -14}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 720;
}
);
},
{
glyphname = "gaa-ethiopic.etcp";
lastChange = "2021-01-06 22:17:49 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute.cap;
transform = "{1, 0, 0, 1, 503, 164}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.haa.acute.cap = 1;
};
width = 720;
}
);
},
{
glyphname = "gee-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 507, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 720;
}
);
},
{
glyphname = "ge-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 259, 37}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho.ring = 1;
};
width = 720;
}
);
},
{
glyphname = "go-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 369, 230}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck = 1;
};
width = 720;
}
);
},
{
glyphname = "goa-ethiopic.etcp";
lastChange = "2021-01-06 22:18:09 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 527, -73}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 720;
}
);
},
{
glyphname = "gwa-ethiopic.etcp";
lastChange = "2021-01-06 22:18:09 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 527, -73}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 720;
}
);
},
{
glyphname = "gwi-ethiopic.etcp";
lastChange = "2021-01-06 22:18:09 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 527, -73}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 720;
}
);
},
{
glyphname = "gwaa-ethiopic.etcp";
lastChange = "2021-01-06 22:18:07 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 527, -73}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 720;
}
);
},
{
glyphname = "gwee-ethiopic.etcp";
lastChange = "2021-01-06 22:18:09 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 527, -73}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 720;
}
);
},
{
glyphname = "gwe-ethiopic.etcp";
lastChange = "2021-01-06 22:18:09 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 527, -73}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
};
width = 720;
}
);
},
{
glyphname = "gga-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 369, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 382, 218}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 720;
}
);
},
{
glyphname = "ggu-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 696, 227}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 369, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 382, 218}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hu = 1;
_smart.neck = 1;
};
width = 720;
}
);
},
{
glyphname = "ggi-ethiopic.etcp";
lastChange = "2021-01-06 22:17:03 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 720, 0}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 369, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 382, 218}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hi = 1;
_smart.neck = 1;
};
width = 720;
}
);
},
{
glyphname = "ggaa-ethiopic.etcp";
lastChange = "2021-01-06 22:17:22 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 720, 0}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 369, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 382, 218}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 720;
}
);
},
{
glyphname = "ggee-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 507, -61}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 369, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 382, 218}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.hee = 1;
_smart.neck = 1;
};
width = 720;
}
);
},
{
glyphname = "gge-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 259, 37}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 369, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 382, 218}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.ho.ring = 1;
_smart.neck = 1;
};
width = 720;
}
);
},
{
glyphname = "ggo-ethiopic.etcp";
lastChange = "2021-01-06 21:03:24 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 369, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 382, 218}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat = 1;
_smart.neck = 1;
};
width = 720;
}
);
},
{
glyphname = "ggwaa-ethiopic.etcp";
lastChange = "2021-01-06 22:18:09 +0000";
layers = (
{
components = (
{
name = ga.base.cap;
},
{
name = _smart.gwa;
transform = "{1, 0, 0, 1, 527, -73}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 369, 230}";
},
{
name = _smart.hat;
transform = "{1, 0, 0, 1, 382, 218}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.gwa = 1;
_smart.hat = 1;
_smart.neck = 1;
};
width = 720;
}
);
},
{
glyphname = "tha-ethiopic.etcp";
lastChange = "2021-01-06 20:33:35 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 1106;
}
);
},
{
glyphname = "thu-ethiopic.etcp";
lastChange = "2021-01-06 22:28:16 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 977, 240}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 1106;
}
);
},
{
glyphname = "thi-ethiopic.etcp";
lastChange = "2021-01-06 22:28:35 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 935, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi.cap = 1;
};
width = 1106;
}
);
},
{
glyphname = "thaa-ethiopic.etcp";
lastChange = "2021-01-06 22:27:30 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 894, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 1106;
}
);
},
{
glyphname = "thee-ethiopic.etcp";
lastChange = "2021-01-06 22:27:35 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 875, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 1106;
}
);
},
{
glyphname = "the-ethiopic.etcp";
lastChange = "2021-01-06 22:31:13 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 517, -711}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 1106;
}
);
},
{
glyphname = "tho-ethiopic.etcp";
lastChange = "2021-01-06 22:28:50 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 133, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 1106;
}
);
},
{
glyphname = "thwa-ethiopic.etcp";
lastChange = "2021-01-06 22:29:11 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 903, -21}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 1106;
}
);
},
{
glyphname = "cha-ethiopic.etcp";
lastChange = "2021-01-06 22:30:26 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.cha.cap;
transform = "{1, 0, 0, 1, 544, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha.cap = 1;
};
width = 1106;
}
);
},
{
glyphname = "chu-ethiopic.etcp";
lastChange = "2021-01-06 22:30:26 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 977, 240}";
},
{
name = _smart.cha.cap;
transform = "{1, 0, 0, 1, 544, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha.cap = 1;
_smart.hu = 1;
};
width = 1106;
}
);
},
{
glyphname = "chi-ethiopic.etcp";
lastChange = "2021-01-06 22:30:26 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 935, -19}";
},
{
name = _smart.cha.cap;
transform = "{1, 0, 0, 1, 544, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha.cap = 1;
_smart.hi.cap = 1;
};
width = 1106;
}
);
},
{
glyphname = "chaa-ethiopic.etcp";
lastChange = "2021-01-06 22:30:26 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 894, 2}";
},
{
name = _smart.cha.cap;
transform = "{1, 0, 0, 1, 544, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha.cap = 1;
_smart.haa = 1;
};
width = 1106;
}
);
},
{
glyphname = "chee-ethiopic.etcp";
lastChange = "2021-01-06 22:30:26 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 875, -65}";
},
{
name = _smart.cha.cap;
transform = "{1, 0, 0, 1, 544, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha.cap = 1;
_smart.hee = 1;
};
width = 1106;
}
);
},
{
glyphname = "che-ethiopic.etcp";
lastChange = "2021-01-06 22:31:13 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.cha.cap;
transform = "{1, 0, 0, 1, 544, -61}";
},
{
name = acute;
transform = "{1, 0, 0, 1, 517, -711}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha.cap = 1;
};
width = 1106;
}
);
},
{
glyphname = "cho-ethiopic.etcp";
lastChange = "2021-01-06 22:30:22 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 133, 2}";
},
{
name = _smart.cha.cap;
transform = "{1, 0, 0, 1, 544, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha.cap = 1;
_smart.ho = 1;
};
width = 1106;
}
);
},
{
glyphname = "chwa-ethiopic.etcp";
lastChange = "2021-01-06 22:30:26 +0000";
layers = (
{
components = (
{
name = tha.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 903, -21}";
},
{
name = _smart.cha.cap;
transform = "{1, 0, 0, 1, 544, -61}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.cha.cap = 1;
_smart.hwa = 1;
};
width = 1106;
}
);
},
{
glyphname = "pha-ethiopic.etcp";
lastChange = "2020-12-28 09:15:56 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 327, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.neck = 1;
};
width = 605;
}
);
},
{
glyphname = "phu-ethiopic.etcp";
lastChange = "2021-01-01 00:01:28 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 643, 62}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 327, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
_smart.neck = 1;
};
width = 605;
}
);
},
{
glyphname = "phi-ethiopic.etcp";
lastChange = "2021-01-06 22:20:30 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 327, 245}";
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 497, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.hi.cap = 1;
_smart.neck = 1;
};
width = 605;
}
);
},
{
glyphname = "phaa-ethiopic.etcp";
lastChange = "2020-12-28 09:15:56 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 527, 2}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 327, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
_smart.neck = 1;
};
width = 605;
}
);
},
{
glyphname = "phee-ethiopic.etcp";
lastChange = "2021-01-01 23:05:03 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 464, -60}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 327, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
_smart.neck = 1;
};
width = 605;
}
);
},
{
glyphname = "phe-ethiopic.etcp";
lastChange = "2020-12-28 09:15:56 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 557, 371}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 327, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
_smart.neck = 1;
};
width = 605;
}
);
},
{
glyphname = "pho-ethiopic.etcp";
lastChange = "2020-12-28 09:15:56 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 107, 7}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 327, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
_smart.neck = 1;
};
width = 605;
}
);
},
{
glyphname = "phwa-ethiopic.etcp";
lastChange = "2021-01-06 22:19:30 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 469, -31}";
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 327, 245}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
_smart.neck = 1;
};
width = 605;
}
);
},
{
glyphname = "tsa-ethiopic.etcp";
lastChange = "2020-12-28 07:05:02 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 605;
}
);
},
{
glyphname = "tsu-ethiopic.etcp";
lastChange = "2021-01-01 00:01:31 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 643, 62}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 605;
}
);
},
{
glyphname = "tsi-ethiopic.etcp";
lastChange = "2021-01-06 22:20:25 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 497, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 605;
}
);
},
{
glyphname = "tsaa-ethiopic.etcp";
lastChange = "2020-12-28 09:14:45 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 527, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 605;
}
);
},
{
glyphname = "tsee-ethiopic.etcp";
lastChange = "2021-01-01 23:05:04 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 464, -60}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 605;
}
);
},
{
glyphname = "tse-ethiopic.etcp";
lastChange = "2020-12-28 09:15:38 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.he;
transform = "{1, 0, 0, 1, 557, 371}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.he = 1;
};
width = 605;
}
);
},
{
glyphname = "tso-ethiopic.etcp";
lastChange = "2020-12-28 09:15:21 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.ho;
transform = "{1, 0, 0, 1, 107, 7}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.ho = 1;
};
width = 605;
}
);
},
{
glyphname = "tswa-ethiopic.etcp";
lastChange = "2021-01-06 22:19:31 +0000";
layers = (
{
components = (
{
name = tsa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 469, -31}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 605;
}
);
},
{
glyphname = "tza-ethiopic.etcp";
lastChange = "2020-12-28 09:16:42 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 397, 364}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
};
width = 808;
}
);
},
{
glyphname = "tzu-ethiopic.etcp";
lastChange = "2020-12-28 09:16:42 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 822, 339}";
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 397, 364}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.hu = 1;
};
width = 808;
}
);
},
{
glyphname = "tzi-ethiopic.etcp";
lastChange = "2021-01-06 22:09:18 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.hi;
transform = "{1, 0, 0, 1, 377, -245}";
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 397, 364}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.hi = 1;
};
width = 808;
}
);
},
{
glyphname = "tzaa-ethiopic.etcp";
lastChange = "2020-12-28 09:16:42 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 615, -2}";
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 397, 364}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.haa = 1;
};
width = 808;
}
);
},
{
glyphname = "tzee-ethiopic.etcp";
lastChange = "2021-01-01 23:05:14 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 437, -61}";
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 397, 364}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.hee = 1;
};
width = 808;
}
);
},
{
glyphname = "tze-ethiopic.etcp";
lastChange = "2020-12-28 09:16:42 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.neck;
transform = "{1, 0, 0, 1, 402, 258}";
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 397, 364}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.neck = 1;
};
width = 808;
}
);
},
{
glyphname = "tzo-ethiopic.etcp";
lastChange = "2020-12-28 09:16:42 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 438, -21}";
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 397, 364}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.haa.acute = 1;
};
width = 808;
}
);
},
{
glyphname = "tzoa-ethiopic.etcp";
lastChange = "2020-12-28 09:16:42 +0000";
layers = (
{
components = (
{
name = aPh.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 437, -4}";
},
{
name = _smart.belt;
transform = "{1, 0, 0, 1, 397, 364}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.belt = 1;
_smart.hwa = 1;
};
width = 808;
}
);
},
{
glyphname = "fa-ethiopic.etcp";
lastChange = "2020-12-28 09:21:26 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 475, 86}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
};
width = 708;
}
);
},
{
glyphname = "fu-ethiopic.etcp";
lastChange = "2021-01-06 22:49:07 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.haa.acute;
transform = "{1, 0, 0, 1, 482, 138}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 475, 86}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.haa.acute = 1;
};
width = 708;
}
);
},
{
glyphname = "fi-ethiopic.etcp";
lastChange = "2021-01-01 03:43:59 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 700, 9}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 475, 86}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.ri = 1;
};
width = 708;
}
);
},
{
glyphname = "faa-ethiopic.etcp";
lastChange = "2020-12-28 09:21:26 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 393, -25}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 475, 86}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.haa = 1;
_smart.haa.acute = 1;
};
width = 708;
}
);
},
{
glyphname = "fee-ethiopic.etcp";
lastChange = "2021-01-06 21:20:31 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 615, 376}";
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 475, 86}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.hee = 1;
};
width = 708;
}
);
},
{
glyphname = "fe-ethiopic.etcp";
lastChange = "2020-12-28 09:21:34 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 440, 71}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
};
width = 776;
}
);
},
{
glyphname = "fo-ethiopic.etcp";
lastChange = "2020-12-28 09:21:50 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 440, 71}";
},
{
name = _smart.ho.ring;
transform = "{1, 0, 0, 1, 588, -18}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.ho.ring = 1;
};
width = 776;
}
);
},
{
glyphname = "fwa-ethiopic.etcp";
lastChange = "2021-01-06 21:43:09 +0000";
layers = (
{
components = (
{
name = re.base.cap;
},
{
name = _smart.fa;
transform = "{1, 0, 0, 1, 440, 71}";
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 551, -49}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.fa = 1;
_smart.hwa = 1;
};
width = 776;
}
);
},
{
glyphname = "pa-ethiopic.etcp";
lastChange = "2020-12-28 07:05:48 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 737;
}
);
},
{
glyphname = "pu-ethiopic.etcp";
lastChange = "2021-01-01 05:05:51 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hu;
transform = "{1, 0, 0, 1, 550, 225}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hu = 1;
};
width = 737;
}
);
},
{
glyphname = "pi-ethiopic.etcp";
lastChange = "2021-01-06 22:21:49 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hi.cap;
transform = "{1, 0, 0, 1, 371, -19}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hi = 1;
_smart.hi.cap = 1;
};
width = 737;
}
);
},
{
glyphname = "paa-ethiopic.etcp";
lastChange = "2021-01-06 22:22:45 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa.acute.cap;
transform = "{1, 0, 0, 1, 349, 161}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute.cap = 1;
_smart.he = 1;
};
width = 737;
}
);
},
{
glyphname = "pee-ethiopic.etcp";
lastChange = "2021-01-01 23:05:26 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hee;
transform = "{1, 0, 0, 1, 428, -65}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hee = 1;
};
width = 737;
}
);
},
{
glyphname = "pe-ethiopic.etcp";
lastChange = "2021-01-06 22:26:13 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.haa;
transform = "{1, 0, 0, 1, 467, -9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa = 1;
};
width = 737;
}
);
},
{
glyphname = "po-ethiopic.etcp";
lastChange = "2021-01-06 22:25:28 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = acute;
transform = "{1, 0, 0, 1, 97, -686}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.haa.acute = 1;
};
width = 737;
}
);
},
{
glyphname = "pwa-ethiopic.etcp";
lastChange = "2021-01-06 22:23:14 +0000";
layers = (
{
components = (
{
name = pa.base.cap;
},
{
name = _smart.hwa;
transform = "{1, 0, 0, 1, 329, -29}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hwa = 1;
};
width = 737;
}
);
},
{
glyphname = "rya-ethiopic.etcp";
lastChange = "2021-01-01 03:44:15 +0000";
layers = (
{
components = (
{
name = ra.base.cap;
},
{
name = _smart.hat.left;
transform = "{1, 0, 0, 1, 139, 95}";
},
{
name = _smart.ri;
transform = "{1, 0, 0, 1, 700, 9}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
userData = {
_smart.hat.left = 1;
_smart.ri = 1;
};
width = 708;
}
);
},
{
glyphname = "one-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"471 0 OFFCURVE",
"559 95 OFFCURVE",
"559 215 CURVE SMOOTH",
"559 324 OFFCURVE",
"475 407 OFFCURVE",
"358 407 CURVE SMOOTH",
"330 407 OFFCURVE",
"314 404 OFFCURVE",
"294 398 CURVE",
"356 519 OFFCURVE",
"455 606 OFFCURVE",
"555 649 CURVE",
"548 660 LINE",
"519 652 OFFCURVE",
"490 641 OFFCURVE",
"459 627 CURVE SMOOTH",
"397 598 OFFCURVE",
"336 558 OFFCURVE",
"281 507 CURVE SMOOTH",
"254 481 OFFCURVE",
"230 453 OFFCURVE",
"209 424 CURVE SMOOTH",
"167 364 OFFCURVE",
"141 298 OFFCURVE",
"141 225 CURVE SMOOTH",
"141 104 OFFCURVE",
"234 0 OFFCURVE",
"347 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"273 13 OFFCURVE",
"224 75 OFFCURVE",
"224 184 CURVE SMOOTH",
"224 249 OFFCURVE",
"238 319 OFFCURVE",
"285 371 CURVE SMOOTH",
"298 385 OFFCURVE",
"315 390 OFFCURVE",
"336 390 CURVE SMOOTH",
"433 390 OFFCURVE",
"476 279 OFFCURVE",
"476 178 CURVE SMOOTH",
"476 68 OFFCURVE",
"424 13 OFFCURVE",
"350 13 CURVE SMOOTH"
);
}
);
width = 693;
}
);
unicode = 1369;
},
{
glyphname = "two-ethiopic";
lastChange = "2020-12-28 21:39:41 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"413 -20 OFFCURVE",
"507 155 OFFCURVE",
"507 211 CURVE SMOOTH",
"507 283 OFFCURVE",
"457 327 OFFCURVE",
"390 327 CURVE SMOOTH",
"383 327 OFFCURVE",
"377 326 OFFCURVE",
"370 326 CURVE",
"397 351 OFFCURVE",
"424 378 OFFCURVE",
"442 400 CURVE SMOOTH",
"480 446 OFFCURVE",
"507 496 OFFCURVE",
"507 552 CURVE SMOOTH",
"507 624 OFFCURVE",
"457 668 OFFCURVE",
"390 668 CURVE SMOOTH",
"303 668 OFFCURVE",
"181 580 OFFCURVE",
"181 507 CURVE SMOOTH",
"181 -18 LINE",
"190 -18 LINE",
"370 -20 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"245 206 LINE",
"303 251 LINE SMOOTH",
"318 263 OFFCURVE",
"432 264 OFFCURVE",
"432 148 CURVE SMOOTH",
"432 106 OFFCURVE",
"388 15 OFFCURVE",
"370 15 CURVE SMOOTH",
"245 15 LINE"
);
},
{
closed = 1;
nodes = (
"245 504 LINE SMOOTH",
"245 536 OFFCURVE",
"302 594 OFFCURVE",
"339 594 CURVE SMOOTH",
"400 594 OFFCURVE",
"432 547 OFFCURVE",
"432 489 CURVE SMOOTH",
"432 434 OFFCURVE",
"388 373 OFFCURVE",
"335 316 CURVE",
"301 284 OFFCURVE",
"271 269 OFFCURVE",
"245 253 CURVE"
);
}
);
width = 693;
}
);
unicode = 136A;
},
{
glyphname = "three-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"224 150 LINE",
"241 546 LINE",
"459 546 LINE",
"478 609 OFFCURVE",
"493 656 OFFCURVE",
"502 680 CURVE",
"490 684 LINE",
"478 656 OFFCURVE",
"470 642 OFFCURVE",
"426 642 CURVE SMOOTH",
"213 642 LINE",
"169 1 LINE",
"219 -1 LINE"
);
}
);
width = 693;
}
);
unicode = 136B;
},
{
glyphname = "four-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"515 -4 OFFCURVE",
"623 137 OFFCURVE",
"623 333 CURVE SMOOTH",
"623 532 OFFCURVE",
"514 661 OFFCURVE",
"389 661 CURVE SMOOTH",
"249 661 OFFCURVE",
"144 513 OFFCURVE",
"144 337 CURVE SMOOTH",
"144 113 OFFCURVE",
"266 -4 OFFCURVE",
"386 -4 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"275 51 OFFCURVE",
"192 179 OFFCURVE",
"192 326 CURVE SMOOTH",
"192 475 OFFCURVE",
"274 604 OFFCURVE",
"384 604 CURVE SMOOTH",
"496 604 OFFCURVE",
"575 476 OFFCURVE",
"575 326 CURVE SMOOTH",
"575 178 OFFCURVE",
"498 51 OFFCURVE",
"386 51 CURVE SMOOTH"
);
}
);
width = 725;
}
);
unicode = 136C;
},
{
glyphname = "five-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"502 -37 LINE",
"493 -13 OFFCURVE",
"478 34 OFFCURVE",
"459 97 CURVE",
"261 97 LINE",
"284 493 LINE",
"279 644 LINE",
"229 642 LINE",
"213 1 LINE",
"426 1 LINE SMOOTH",
"470 1 OFFCURVE",
"478 -13 OFFCURVE",
"490 -41 CURVE"
);
},
{
closed = 1;
nodes = (
"418 447 LINE",
"418 474 LINE",
"271 474 LINE",
"271 447 LINE"
);
}
);
width = 693;
}
);
unicode = 136D;
},
{
glyphname = "six-ethiopic";
lastChange = "2021-01-01 00:01:49 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{135, -46}";
}
);
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"396 285 OFFCURVE",
"407 310 OFFCURVE",
"437 389 CURVE SMOOTH",
"454 434 OFFCURVE",
"475 497 OFFCURVE",
"532 637 CURVE",
"210 637 LINE",
"156 498 LINE",
"166 495 LINE",
"181 531 OFFCURVE",
"202 567 OFFCURVE",
"265 567 CURVE SMOOTH",
"489 567 LINE",
"477 539 OFFCURVE",
"463 507 OFFCURVE",
"447 472 CURVE SMOOTH",
"413 399 OFFCURVE",
"269 72 OFFCURVE",
"231 -3 CURVE",
"287 -6 LINE"
);
},
{
closed = 1;
nodes = (
"450 -10 OFFCURVE",
"481 21 OFFCURVE",
"481 62 CURVE SMOOTH",
"481 105 OFFCURVE",
"450 134 OFFCURVE",
"407 134 CURVE SMOOTH",
"366 134 OFFCURVE",
"333 103 OFFCURVE",
"333 62 CURVE SMOOTH",
"333 19 OFFCURVE",
"363 -10 OFFCURVE",
"407 -10 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"378 10 OFFCURVE",
"360 33 OFFCURVE",
"360 62 CURVE SMOOTH",
"360 93 OFFCURVE",
"379 114 OFFCURVE",
"407 114 CURVE SMOOTH",
"436 114 OFFCURVE",
"454 91 OFFCURVE",
"454 62 CURVE SMOOTH",
"454 33 OFFCURVE",
"436 10 OFFCURVE",
"407 10 CURVE SMOOTH"
);
}
);
width = 693;
}
);
unicode = 136E;
},
{
glyphname = "seven-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"396 285 OFFCURVE",
"407 310 OFFCURVE",
"437 389 CURVE SMOOTH",
"454 434 OFFCURVE",
"475 497 OFFCURVE",
"532 637 CURVE",
"210 637 LINE",
"156 498 LINE",
"166 495 LINE",
"181 531 OFFCURVE",
"202 567 OFFCURVE",
"265 567 CURVE SMOOTH",
"489 567 LINE",
"477 539 OFFCURVE",
"463 507 OFFCURVE",
"447 472 CURVE SMOOTH",
"413 399 OFFCURVE",
"269 72 OFFCURVE",
"231 -3 CURVE",
"287 -6 LINE"
);
}
);
width = 693;
}
);
unicode = 136F;
},
{
glyphname = "eight-ethiopic";
lastChange = "2020-12-28 02:12:41 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"480 0 LINE",
"480 15 LINE",
"446 15 OFFCURVE",
"395 28 OFFCURVE",
"395 73 CURVE SMOOTH",
"395 562 LINE SMOOTH",
"395 603 OFFCURVE",
"445 621 OFFCURVE",
"480 621 CURVE",
"480 636 LINE",
"237 636 LINE",
"237 621 LINE",
"273 621 OFFCURVE",
"327 604 OFFCURVE",
"327 563 CURVE SMOOTH",
"327 74 LINE SMOOTH",
"327 35 OFFCURVE",
"277 15 OFFCURVE",
"241 15 CURVE",
"241 0 LINE"
);
},
{
closed = 1;
nodes = (
"554 -2 LINE",
"554 43 LINE",
"165 43 LINE",
"165 -2 LINE"
);
},
{
closed = 1;
nodes = (
"554 596 LINE",
"554 641 LINE",
"165 641 LINE",
"165 596 LINE"
);
}
);
width = 689;
}
);
unicode = 1370;
},
{
glyphname = "nine-ethiopic";
lastChange = "2020-12-28 00:49:04 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"492 7 OFFCURVE",
"590 137 OFFCURVE",
"590 318 CURVE SMOOTH",
"590 435 OFFCURVE",
"549 596 OFFCURVE",
"490 646 CURVE",
"468 596 LINE",
"516 551 OFFCURVE",
"546 400 OFFCURVE",
"546 311 CURVE SMOOTH",
"546 175 OFFCURVE",
"476 58 OFFCURVE",
"375 58 CURVE SMOOTH",
"274 58 OFFCURVE",
"198 176 OFFCURVE",
"198 311 CURVE SMOOTH",
"198 419 OFFCURVE",
"224 555 OFFCURVE",
"293 591 CURVE",
"298 649 LINE",
"201 609 OFFCURVE",
"155 457 OFFCURVE",
"155 321 CURVE SMOOTH",
"155 114 OFFCURVE",
"265 7 OFFCURVE",
"375 7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"546 400 LINE",
"546 438 LINE",
"198 438 LINE",
"198 400 LINE"
);
}
);
width = 693;
}
);
unicode = 1371;
},
{
glyphname = "ten-ethiopic";
lastChange = "2020-12-28 00:49:04 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"435 -1 LINE",
"435 12 LINE",
"407 12 OFFCURVE",
"364 24 OFFCURVE",
"364 63 CURVE SMOOTH",
"364 570 LINE SMOOTH",
"364 606 OFFCURVE",
"406 622 OFFCURVE",
"435 622 CURVE",
"435 635 LINE",
"234 635 LINE",
"234 622 LINE",
"264 622 OFFCURVE",
"311 608 OFFCURVE",
"311 571 CURVE SMOOTH",
"311 64 LINE SMOOTH",
"311 30 OFFCURVE",
"267 12 OFFCURVE",
"238 12 CURVE",
"238 -1 LINE"
);
}
);
width = 693;
}
);
unicode = 1372;
},
{
glyphname = "twenty-ethiopic";
lastChange = "2020-12-28 02:10:09 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
hints = (
{
place = "{3, 30}";
type = Stem;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"255 0 LINE",
"240 29 OFFCURVE",
"224 132 OFFCURVE",
"224 184 CURVE SMOOTH",
"224 249 OFFCURVE",
"238 319 OFFCURVE",
"285 371 CURVE SMOOTH",
"298 385 OFFCURVE",
"315 390 OFFCURVE",
"336 390 CURVE SMOOTH",
"433 390 OFFCURVE",
"498 319 OFFCURVE",
"488 178 CURVE SMOOTH",
"484 120 OFFCURVE",
"461 30 OFFCURVE",
"457 2 CURVE",
"526 0 LINE",
"551 77 OFFCURVE",
"559 127 OFFCURVE",
"559 215 CURVE SMOOTH",
"559 324 OFFCURVE",
"475 407 OFFCURVE",
"358 407 CURVE SMOOTH",
"330 407 OFFCURVE",
"314 404 OFFCURVE",
"294 398 CURVE",
"356 519 OFFCURVE",
"455 606 OFFCURVE",
"555 649 CURVE",
"548 660 LINE",
"519 652 OFFCURVE",
"490 641 OFFCURVE",
"459 627 CURVE SMOOTH",
"397 598 OFFCURVE",
"336 558 OFFCURVE",
"281 507 CURVE SMOOTH",
"254 481 OFFCURVE",
"230 453 OFFCURVE",
"209 424 CURVE SMOOTH",
"167 364 OFFCURVE",
"141 298 OFFCURVE",
"141 225 CURVE SMOOTH",
"141 139 OFFCURVE",
"143 76 OFFCURVE",
"185 0 CURVE"
);
},
{
closed = 1;
nodes = (
"565 621 LINE",
"565 663 LINE",
"253 663 LINE",
"253 621 LINE"
);
}
);
width = 693;
}
);
unicode = 1373;
},
{
glyphname = "thirty-ethiopic";
lastChange = "2021-01-02 00:30:03 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"582 0 LINE",
"582 644 LINE",
"531 644 LINE",
"531 99 LINE",
"297.094 99 LINE",
"409.43 631.298 LINE",
"416.153 652.177 OFFCURVE",
"421.746 668.657 OFFCURVE",
"426 680 CURVE",
"414 684 LINE",
"402 656 OFFCURVE",
"394 642 OFFCURVE",
"350 642 CURVE SMOOTH",
"137 642 LINE",
"137 -1 LINE",
"184 -1 LINE",
"184 546 LINE",
"357.968 546 LINE",
"231 0 LINE"
);
}
);
width = 760;
}
);
unicode = 1374;
},
{
glyphname = "forty-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"196 8 OFFCURVE",
"225 19 OFFCURVE",
"256 33 CURVE SMOOTH",
"318 62 OFFCURVE",
"379 102 OFFCURVE",
"434 153 CURVE SMOOTH",
"461 179 OFFCURVE",
"485 207 OFFCURVE",
"506 236 CURVE SMOOTH",
"548 296 OFFCURVE",
"574 362 OFFCURVE",
"574 435 CURVE",
"574 521 OFFCURVE",
"572 584 OFFCURVE",
"530 660 CURVE",
"460 660 LINE",
"475 631 OFFCURVE",
"491 528 OFFCURVE",
"491 476 CURVE SMOOTH",
"491 411 OFFCURVE",
"477 341 OFFCURVE",
"430 289 CURVE SMOOTH",
"417 275 OFFCURVE",
"400 270 OFFCURVE",
"379 270 CURVE SMOOTH",
"282 270 OFFCURVE",
"239 381 OFFCURVE",
"239 482 CURVE",
"239 540 OFFCURVE",
"254 630 OFFCURVE",
"258 658 CURVE",
"189 660 LINE",
"164 583 OFFCURVE",
"156 533 OFFCURVE",
"156 445 CURVE SMOOTH",
"156 336 OFFCURVE",
"240 253 OFFCURVE",
"357 253 CURVE SMOOTH",
"385 253 OFFCURVE",
"401 256 OFFCURVE",
"421 262 CURVE",
"359 141 OFFCURVE",
"260 54 OFFCURVE",
"160 11 CURVE",
"167 0 LINE"
);
},
{
closed = 1;
nodes = (
"381 268 LINE",
"388 664 LINE",
"353 660 LINE",
"347 264 LINE"
);
}
);
width = 693;
}
);
unicode = 1375;
},
{
glyphname = "fifty-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"201 8 OFFCURVE",
"230 19 OFFCURVE",
"261 33 CURVE SMOOTH",
"323 62 OFFCURVE",
"384 102 OFFCURVE",
"439 153 CURVE SMOOTH",
"466 179 OFFCURVE",
"490 207 OFFCURVE",
"511 236 CURVE SMOOTH",
"553 296 OFFCURVE",
"579 362 OFFCURVE",
"579 435 CURVE",
"579 521 OFFCURVE",
"577 584 OFFCURVE",
"535 660 CURVE",
"465 660 LINE",
"480 631 OFFCURVE",
"496 528 OFFCURVE",
"496 476 CURVE SMOOTH",
"496 411 OFFCURVE",
"482 341 OFFCURVE",
"435 289 CURVE SMOOTH",
"422 275 OFFCURVE",
"405 270 OFFCURVE",
"384 270 CURVE SMOOTH",
"287 270 OFFCURVE",
"244 381 OFFCURVE",
"244 482 CURVE",
"244 540 OFFCURVE",
"259 630 OFFCURVE",
"263 658 CURVE",
"194 660 LINE",
"169 583 OFFCURVE",
"161 533 OFFCURVE",
"161 445 CURVE SMOOTH",
"161 336 OFFCURVE",
"245 253 OFFCURVE",
"362 253 CURVE SMOOTH",
"390 253 OFFCURVE",
"406 256 OFFCURVE",
"426 262 CURVE",
"364 141 OFFCURVE",
"265 54 OFFCURVE",
"165 11 CURVE",
"172 0 LINE"
);
}
);
width = 693;
}
);
unicode = 1376;
},
{
glyphname = "sixty-ethiopic";
lastChange = "2020-12-28 02:11:41 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"502 -1 LINE",
"502 25 LINE",
"385.826 25 LINE",
"373.969 32.977 OFFCURVE",
"366.256 45.165 OFFCURVE",
"369 63 CURVE SMOOTH",
"415 346 LINE",
"369 346 LINE",
"369 584 LINE SMOOTH",
"369 601.651 OFFCURVE",
"377.894 614.494 OFFCURVE",
"390.379 623 CURVE",
"502 623 LINE",
"502 649 LINE",
"164 649 LINE",
"164 623 LINE",
"280.849 623 LINE",
"292.734 614.838 OFFCURVE",
"301 602.488 OFFCURVE",
"301 585 CURVE SMOOTH",
"301 326 LINE",
"347.454 326 LINE",
"301 64 LINE SMOOTH",
"297.971 46.837 OFFCURVE",
"289.337 33.752 OFFCURVE",
"277.798 25 CURVE",
"164 25 LINE",
"164 -1 LINE"
);
}
);
width = 693;
}
);
unicode = 1377;
},
{
glyphname = "seventy-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"423 -3 OFFCURVE",
"469 20 OFFCURVE",
"506 59 CURVE",
"456 77 LINE",
"433 59 OFFCURVE",
"405 48 OFFCURVE",
"375 48 CURVE SMOOTH",
"274 48 OFFCURVE",
"198 166 OFFCURVE",
"198 301 CURVE SMOOTH",
"198 438 OFFCURVE",
"273 598 OFFCURVE",
"373 598 CURVE SMOOTH",
"407 598 OFFCURVE",
"440 596 OFFCURVE",
"466 572 CURVE",
"488 598 LINE",
"455 624 OFFCURVE",
"417 639 OFFCURVE",
"377 639 CURVE SMOOTH",
"250 639 OFFCURVE",
"155 473 OFFCURVE",
"155 311 CURVE SMOOTH",
"155 104 OFFCURVE",
"265 -3 OFFCURVE",
"375 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"487 380 OFFCURVE",
"527 431 OFFCURVE",
"527 499 CURVE SMOOTH",
"527 570 OFFCURVE",
"487 618 OFFCURVE",
"432 618 CURVE SMOOTH",
"379 618 OFFCURVE",
"337 568 OFFCURVE",
"337 499 CURVE SMOOTH",
"337 429 OFFCURVE",
"375 380 OFFCURVE",
"432 380 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"394 413 OFFCURVE",
"372 451 OFFCURVE",
"372 499 CURVE SMOOTH",
"372 550 OFFCURVE",
"396 585 OFFCURVE",
"432 585 CURVE SMOOTH",
"470 585 OFFCURVE",
"492 548 OFFCURVE",
"492 499 CURVE SMOOTH",
"492 451 OFFCURVE",
"470 413 OFFCURVE",
"432 413 CURVE SMOOTH"
);
}
);
width = 693;
}
);
unicode = 1378;
},
{
glyphname = "eighty-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"564 -6 LINE",
"564 7 LINE",
"536 7 OFFCURVE",
"498 19 OFFCURVE",
"498 58 CURVE SMOOTH",
"498 584 LINE SMOOTH",
"498 620 OFFCURVE",
"535 636 OFFCURVE",
"564 636 CURVE",
"564 649 LINE",
"363 649 LINE",
"363 636 LINE",
"393 636 OFFCURVE",
"430 622 OFFCURVE",
"430 585 CURVE SMOOTH",
"430 59 LINE SMOOTH",
"430 25 OFFCURVE",
"396 7 OFFCURVE",
"367 7 CURVE",
"367 -6 LINE"
);
},
{
closed = 1;
nodes = (
"344 -6 LINE",
"344 7 LINE",
"316 7 OFFCURVE",
"278 19 OFFCURVE",
"278 58 CURVE SMOOTH",
"278 584 LINE SMOOTH",
"278 620 OFFCURVE",
"315 636 OFFCURVE",
"344 636 CURVE",
"344 649 LINE",
"143 649 LINE",
"143 636 LINE",
"173 636 OFFCURVE",
"210 622 OFFCURVE",
"210 585 CURVE SMOOTH",
"210 59 LINE SMOOTH",
"210 25 OFFCURVE",
"176 7 OFFCURVE",
"147 7 CURVE",
"147 -6 LINE"
);
},
{
closed = 1;
nodes = (
"568 622 LINE",
"568 650 LINE",
"120 650 LINE",
"120 622 LINE"
);
}
);
width = 693;
}
);
unicode = 1379;
},
{
glyphname = "ninety-ethiopic";
lastChange = "2020-12-28 02:10:35 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"438 292 LINE",
"414 642 LINE",
"201 642 LINE SMOOTH",
"157 642 OFFCURVE",
"149 656 OFFCURVE",
"137 684 CURVE",
"125 680 LINE",
"134 656 OFFCURVE",
"149 609 OFFCURVE",
"168 546 CURVE",
"386 546 LINE",
"397 292 LINE"
);
},
{
closed = 1;
nodes = (
"510 -11 LINE",
"510 368 LINE",
"430 368 LINE",
"430 -11 LINE"
);
}
);
width = 693;
}
);
unicode = 137A;
},
{
glyphname = "hundred-ethiopic";
lastChange = "2020-12-28 02:10:44 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"512 24 LINE",
"409 71 OFFCURVE",
"331 144 OFFCURVE",
"275 280 CURVE",
"299 269 OFFCURVE",
"320 267 OFFCURVE",
"346 267 CURVE SMOOTH",
"457 267 OFFCURVE",
"528 350 OFFCURVE",
"528 461 CURVE SMOOTH",
"528 573 OFFCURVE",
"444 669 OFFCURVE",
"339 669 CURVE SMOOTH",
"231 669 OFFCURVE",
"147 564 OFFCURVE",
"147 444 CURVE SMOOTH",
"147 334 OFFCURVE",
"197 237 OFFCURVE",
"267 162 CURVE SMOOTH",
"337 87 OFFCURVE",
"426 33 OFFCURVE",
"507 10 CURVE"
);
},
{
closed = 1;
nodes = (
"300 285 OFFCURVE",
"281 290 OFFCURVE",
"268 307 CURVE SMOOTH",
"233 356 OFFCURVE",
"224 411 OFFCURVE",
"224 471 CURVE SMOOTH",
"224 562 OFFCURVE",
"260 654 OFFCURVE",
"339 654 CURVE SMOOTH",
"410 654 OFFCURVE",
"456 598 OFFCURVE",
"456 502 CURVE SMOOTH",
"456 404 OFFCURVE",
"412 285 OFFCURVE",
"323 285 CURVE SMOOTH"
);
}
);
width = 693;
}
);
unicode = 137B;
},
{
glyphname = "tenthousand-ethiopic";
lastChange = "2020-12-28 00:49:04 +0000";
layers = (
{
components = (
{
name = _number.bars;
transform = "{1, 0, 0, 1, 117, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"615 18 LINE",
"548 67 OFFCURVE",
"496 141 OFFCURVE",
"460 278 CURVE",
"475 266 OFFCURVE",
"489 264 OFFCURVE",
"506 264 CURVE SMOOTH",
"579 264 OFFCURVE",
"625 348 OFFCURVE",
"625 461 CURVE SMOOTH",
"625 574 OFFCURVE",
"571 670 OFFCURVE",
"502 670 CURVE SMOOTH",
"431 670 OFFCURVE",
"376 565 OFFCURVE",
"376 445 CURVE SMOOTH",
"376 332 OFFCURVE",
"409 235 OFFCURVE",
"455 159 CURVE SMOOTH",
"500 84 OFFCURVE",
"559 27 OFFCURVE",
"611 5 CURVE"
);
},
{
closed = 1;
nodes = (
"478 174 LINE",
"478 203 LINE",
"204 203 LINE",
"204 174 LINE"
);
},
{
closed = 1;
nodes = (
"354 18 LINE",
"287 67 OFFCURVE",
"235 141 OFFCURVE",
"199 278 CURVE",
"214 266 OFFCURVE",
"228 264 OFFCURVE",
"245 264 CURVE SMOOTH",
"318 264 OFFCURVE",
"364 348 OFFCURVE",
"364 461 CURVE SMOOTH",
"364 574 OFFCURVE",
"309 670 OFFCURVE",
"240 670 CURVE SMOOTH",
"170 670 OFFCURVE",
"115 565 OFFCURVE",
"115 445 CURVE SMOOTH",
"115 332 OFFCURVE",
"147 234 OFFCURVE",
"193 159 CURVE SMOOTH",
"239 84 OFFCURVE",
"298 27 OFFCURVE",
"350 5 CURVE"
);
},
{
closed = 1;
nodes = (
"215 283 OFFCURVE",
"203 288 OFFCURVE",
"194 306 CURVE SMOOTH",
"170 354 OFFCURVE",
"165 410 OFFCURVE",
"165 472 CURVE SMOOTH",
"165 562 OFFCURVE",
"189 655 OFFCURVE",
"240 655 CURVE SMOOTH",
"287 655 OFFCURVE",
"317 599 OFFCURVE",
"317 502 CURVE SMOOTH",
"317 402 OFFCURVE",
"289 283 OFFCURVE",
"230 283 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"476 283 OFFCURVE",
"464 288 OFFCURVE",
"455 306 CURVE SMOOTH",
"431 354 OFFCURVE",
"426 410 OFFCURVE",
"426 472 CURVE SMOOTH",
"426 562 OFFCURVE",
"450 655 OFFCURVE",
"502 655 CURVE SMOOTH",
"548 655 OFFCURVE",
"578 599 OFFCURVE",
"578 502 CURVE SMOOTH",
"578 402 OFFCURVE",
"550 283 OFFCURVE",
"491 283 CURVE SMOOTH"
);
}
);
width = 727;
}
);
unicode = 137C;
},
{
glyphname = foursuperior;
layers = (
{
components = (
{
name = four;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 551;
}
);
leftMetricsKey = four;
rightMetricsKey = four;
unicode = 2074;
},
{
glyphname = "colon-ethiopic";
lastChange = "2019-03-16 00:54:14 +0000";
layers = (
{
components = (
{
name = colon;
},
{
name = horizontalbar;
transform = "{0.2771, 0, 0, 1, 35, -50}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 263;
}
);
unicode = 1365;
},
{
glyphname = "comma-ethiopic";
lastChange = "2019-03-16 00:55:07 +0000";
layers = (
{
components = (
{
name = horizontalbar;
transform = "{0.3609, 0, 0, 1, 8, 160}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"192 215 OFFCURVE",
"165 191 OFFCURVE",
"134 191 CURVE SMOOTH",
"103 191 OFFCURVE",
"75 213 OFFCURVE",
"75 248 CURVE SMOOTH",
"75 283 OFFCURVE",
"103 305 OFFCURVE",
"134 305 CURVE SMOOTH",
"165 305 OFFCURVE",
"192 279 OFFCURVE",
"192 248 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"192 21 OFFCURVE",
"165 -1 OFFCURVE",
"134 -1 CURVE SMOOTH",
"103 -1 OFFCURVE",
"75 18 OFFCURVE",
"75 54 CURVE SMOOTH",
"75 89 OFFCURVE",
"103 111 OFFCURVE",
"134 111 CURVE SMOOTH",
"165 111 OFFCURVE",
"192 85 OFFCURVE",
"192 54 CURVE SMOOTH"
);
}
);
width = 263;
}
);
unicode = 1363;
},
{
glyphname = "paragraphseparator-ethiopic";
lastChange = "2020-12-28 00:44:32 +0000";
layers = (
{
components = (
{
name = "period-ethiopic";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"292 361 OFFCURVE",
"265 337 OFFCURVE",
"234 337 CURVE SMOOTH",
"203 337 OFFCURVE",
"175 359 OFFCURVE",
"175 394 CURVE SMOOTH",
"175 429 OFFCURVE",
"203 451 OFFCURVE",
"234 451 CURVE SMOOTH",
"265 451 OFFCURVE",
"292 425 OFFCURVE",
"292 394 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"282 -119 OFFCURVE",
"255 -141 OFFCURVE",
"224 -141 CURVE SMOOTH",
"193 -141 OFFCURVE",
"165 -122 OFFCURVE",
"165 -86 CURVE SMOOTH",
"165 -51 OFFCURVE",
"193 -29 OFFCURVE",
"224 -29 CURVE SMOOTH",
"255 -29 OFFCURVE",
"282 -55 OFFCURVE",
"282 -86 CURVE SMOOTH"
);
}
);
width = 461;
}
);
unicode = 1368;
},
{
glyphname = "period-ethiopic";
lastChange = "2019-03-16 00:55:37 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"192 231 OFFCURVE",
"165 207 OFFCURVE",
"134 207 CURVE SMOOTH",
"103 207 OFFCURVE",
"75 229 OFFCURVE",
"75 264 CURVE SMOOTH",
"75 299 OFFCURVE",
"103 321 OFFCURVE",
"134 321 CURVE SMOOTH",
"165 321 OFFCURVE",
"192 295 OFFCURVE",
"192 264 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"192 21 OFFCURVE",
"165 -1 OFFCURVE",
"134 -1 CURVE SMOOTH",
"103 -1 OFFCURVE",
"75 18 OFFCURVE",
"75 54 CURVE SMOOTH",
"75 89 OFFCURVE",
"103 111 OFFCURVE",
"134 111 CURVE SMOOTH",
"165 111 OFFCURVE",
"192 85 OFFCURVE",
"192 54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"382 231 OFFCURVE",
"355 207 OFFCURVE",
"324 207 CURVE SMOOTH",
"293 207 OFFCURVE",
"265 229 OFFCURVE",
"265 264 CURVE SMOOTH",
"265 299 OFFCURVE",
"293 321 OFFCURVE",
"324 321 CURVE SMOOTH",
"355 321 OFFCURVE",
"382 295 OFFCURVE",
"382 264 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"382 21 OFFCURVE",
"355 -1 OFFCURVE",
"324 -1 CURVE SMOOTH",
"293 -1 OFFCURVE",
"265 18 OFFCURVE",
"265 54 CURVE SMOOTH",
"265 89 OFFCURVE",
"293 111 OFFCURVE",
"324 111 CURVE SMOOTH",
"355 111 OFFCURVE",
"382 85 OFFCURVE",
"382 54 CURVE SMOOTH"
);
}
);
width = 461;
}
);
unicode = 1362;
},
{
glyphname = "prefacecolon-ethiopic";
lastChange = "2019-03-16 00:55:58 +0000";
layers = (
{
components = (
{
name = colon;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"159 202 LINE",
"264 202 LINE",
"264 249 LINE",
"159 249 LINE"
);
}
);
width = 335;
}
);
unicode = 1366;
},
{
glyphname = "question-ethiopic";
lastChange = "2019-03-16 00:56:18 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"192 331 OFFCURVE",
"165 307 OFFCURVE",
"134 307 CURVE SMOOTH",
"103 307 OFFCURVE",
"75 329 OFFCURVE",
"75 364 CURVE SMOOTH",
"75 399 OFFCURVE",
"103 421 OFFCURVE",
"134 421 CURVE SMOOTH",
"165 421 OFFCURVE",
"192 395 OFFCURVE",
"192 364 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"192 21 OFFCURVE",
"165 -1 OFFCURVE",
"134 -1 CURVE SMOOTH",
"103 -1 OFFCURVE",
"75 18 OFFCURVE",
"75 54 CURVE SMOOTH",
"75 89 OFFCURVE",
"103 111 OFFCURVE",
"134 111 CURVE SMOOTH",
"165 111 OFFCURVE",
"192 85 OFFCURVE",
"192 54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"192 181 OFFCURVE",
"165 157 OFFCURVE",
"134 157 CURVE SMOOTH",
"103 157 OFFCURVE",
"75 179 OFFCURVE",
"75 214 CURVE SMOOTH",
"75 249 OFFCURVE",
"103 271 OFFCURVE",
"134 271 CURVE SMOOTH",
"165 271 OFFCURVE",
"192 245 OFFCURVE",
"192 214 CURVE SMOOTH"
);
}
);
width = 263;
}
);
unicode = 1367;
},
{
glyphname = "sectionmark-ethiopic";
lastChange = "2019-03-16 00:56:48 +0000";
layers = (
{
components = (
{
name = "period-ethiopic";
transform = "{0.75471, 0.65606, -0.65606, 0.75471, 160, -112}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 461;
}
);
unicode = 1360;
},
{
glyphname = "semicolon-ethiopic";
lastChange = "2019-03-16 00:57:31 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"192 281 OFFCURVE",
"165 257 OFFCURVE",
"134 257 CURVE SMOOTH",
"103 257 OFFCURVE",
"75 279 OFFCURVE",
"75 314 CURVE SMOOTH",
"75 349 OFFCURVE",
"103 371 OFFCURVE",
"134 371 CURVE SMOOTH",
"165 371 OFFCURVE",
"192 345 OFFCURVE",
"192 314 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"192 121 OFFCURVE",
"165 99 OFFCURVE",
"134 99 CURVE SMOOTH",
"103 99 OFFCURVE",
"75 118 OFFCURVE",
"75 154 CURVE SMOOTH",
"75 189 OFFCURVE",
"103 211 OFFCURVE",
"134 211 CURVE SMOOTH",
"165 211 OFFCURVE",
"192 185 OFFCURVE",
"192 154 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"60 425 LINE",
"211 425 LINE",
"211 463 LINE",
"60 463 LINE"
);
},
{
closed = 1;
nodes = (
"60 25 LINE",
"211 25 LINE",
"211 63 LINE",
"60 63 LINE"
);
}
);
width = 263;
}
);
unicode = 1364;
},
{
glyphname = "wordspace-ethiopic";
lastChange = "2019-03-16 00:57:40 +0000";
layers = (
{
components = (
{
name = colon;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 263;
}
);
unicode = 1361;
},
{
glyphname = "chiret-ethiopic";
lastChange = "2019-03-16 04:03:29 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 640;
}
);
unicode = 1396;
},
{
glyphname = "deret-ethiopic";
lastChange = "2019-03-16 04:03:29 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 640;
}
);
unicode = 1391;
},
{
glyphname = "deretHidet-ethiopic";
lastChange = "2019-03-16 04:03:29 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 640;
}
);
unicode = 1398;
},
{
glyphname = "difat-ethiopic";
lastChange = "2019-03-16 04:03:29 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 640;
}
);
unicode = 1394;
},
{
glyphname = "hidet-ethiopic";
lastChange = "2019-03-16 04:03:29 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 640;
}
);
unicode = 1397;
},
{
glyphname = "kenat-ethiopic";
lastChange = "2019-03-16 04:03:29 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 640;
}
);
unicode = 1395;
},
{
glyphname = "kurt-ethiopic";
lastChange = "2019-03-16 04:03:29 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 640;
}
);
unicode = 1399;
},
{
glyphname = "rikrik-ethiopic";
lastChange = "2020-12-28 02:09:15 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"164.667 307 OFFCURVE",
"192 330.667 OFFCURVE",
"192 364 CURVE SMOOTH",
"192 394.667 OFFCURVE",
"164.667 421 OFFCURVE",
"134 421 CURVE SMOOTH",
"103.333 421 OFFCURVE",
"75 398.667 OFFCURVE",
"75 364 CURVE SMOOTH",
"75 329.333 OFFCURVE",
"103.333 307 OFFCURVE",
"134 307 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164.667 -1 OFFCURVE",
"192 20.667 OFFCURVE",
"192 54 CURVE SMOOTH",
"192 84.667 OFFCURVE",
"164.667 111 OFFCURVE",
"134 111 CURVE SMOOTH",
"103.333 111 OFFCURVE",
"75 88.667 OFFCURVE",
"75 54 CURVE SMOOTH",
"75 18 OFFCURVE",
"103.333 -1 OFFCURVE",
"134 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165 159 OFFCURVE",
"192 181 OFFCURVE",
"192 214 CURVE SMOOTH",
"192 245 OFFCURVE",
"165 271 OFFCURVE",
"134 271 CURVE SMOOTH",
"103 271 OFFCURVE",
"75 249 OFFCURVE",
"75 214 CURVE SMOOTH",
"75 178 OFFCURVE",
"103 159 OFFCURVE",
"134 159 CURVE SMOOTH"
);
}
);
width = 263;
}
);
unicode = 1392;
},
{
glyphname = "shortRikrik-ethiopic";
lastChange = "2020-12-28 02:08:48 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"164.667 307 OFFCURVE",
"192 330.667 OFFCURVE",
"192 364 CURVE SMOOTH",
"192 394.667 OFFCURVE",
"164.667 421 OFFCURVE",
"134 421 CURVE SMOOTH",
"103.333 421 OFFCURVE",
"75 398.667 OFFCURVE",
"75 364 CURVE SMOOTH",
"75 329.333 OFFCURVE",
"103.333 307 OFFCURVE",
"134 307 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"164.667 -1 OFFCURVE",
"192 20.667 OFFCURVE",
"192 54 CURVE SMOOTH",
"192 84.667 OFFCURVE",
"164.667 111 OFFCURVE",
"134 111 CURVE SMOOTH",
"103.333 111 OFFCURVE",
"75 88.667 OFFCURVE",
"75 54 CURVE SMOOTH",
"75 18 OFFCURVE",
"103.333 -1 OFFCURVE",
"134 -1 CURVE SMOOTH"
);
}
);
width = 263;
}
);
unicode = 1393;
},
{
glyphname = "yizet-ethiopic";
lastChange = "2020-12-28 02:08:55 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"158.667 -1 OFFCURVE",
"182 19.333 OFFCURVE",
"182 54 CURVE SMOOTH",
"182 88.667 OFFCURVE",
"158.667 117 OFFCURVE",
"124 117 CURVE SMOOTH",
"89.333 117 OFFCURVE",
"64 90.667 OFFCURVE",
"64 56 CURVE SMOOTH",
"64 21.333 OFFCURVE",
"89.333 -1 OFFCURVE",
"124 -1 CURVE SMOOTH"
);
}
);
width = 243;
}
);
unicode = 1390;
},
{
glyphname = divisionslash;
lastChange = "2020-12-28 02:07:25 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"353 747 LINE",
"320 760 LINE",
"-50 -131 LINE",
"-17 -143 LINE"
);
}
);
width = 311;
}
);
unicode = 2215;
},
{
glyphname = minus;
lastChange = "2020-12-28 02:08:21 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"444 237 LINE",
"444 283 LINE",
"-8 283 LINE",
"-8 237 LINE"
);
}
);
width = 460;
}
);
unicode = 2212;
},
{
glyphname = "geminVowellengthcomb-ethiopic";
lastChange = "2020-08-10 01:48:21 +0000";
layers = (
{
components = (
{
name = question;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 383;
}
);
unicode = 135D;
},
{
glyphname = "geminationcomb-ethiopic";
lastChange = "2019-03-16 04:03:29 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 640;
}
);
unicode = 135F;
},
{
glyphname = "vowellengthcomb-ethiopic";
lastChange = "2020-08-10 01:48:16 +0000";
layers = (
{
components = (
{
name = question;
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 383;
}
);
unicode = 135E;
},
{
glyphname = acute.001;
lastChange = "2020-08-24 07:03:58 +0000";
layers = (
{
components = (
{
name = acute;
transform = "{-0.70711, -0.70711, 0.70711, -0.70711, 139, 494}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
width = 523;
}
);
},
{
glyphname = _smart.cha;
lastChange = "2020-12-28 00:56:51 +0000";
layers = (
{
anchors = (
{
name = _cha;
position = "{1, 113}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"219 84 OFFCURVE",
"240 105 OFFCURVE",
"240 130 CURVE SMOOTH",
"240 155 OFFCURVE",
"219 176 OFFCURVE",
"194 176 CURVE SMOOTH",
"169 176 OFFCURVE",
"148 155 OFFCURVE",
"148 130 CURVE SMOOTH",
"148 105 OFFCURVE",
"169 84 OFFCURVE",
"194 84 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-153 84 OFFCURVE",
"-132 105 OFFCURVE",
"-132 130 CURVE SMOOTH",
"-132 155 OFFCURVE",
"-153 176 OFFCURVE",
"-178 176 CURVE SMOOTH",
"-203 176 OFFCURVE",
"-224 155 OFFCURVE",
"-224 130 CURVE SMOOTH",
"-224 105 OFFCURVE",
"-203 84 OFFCURVE",
"-178 84 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = _smart.yaa;
lastChange = "2021-01-03 20:02:56 +0000";
layers = (
{
anchors = (
{
name = _yaa;
position = "{1, 44}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-31 31 OFFCURVE",
"-8 0 OFFCURVE",
"16 1 CURVE",
"122 108 LINE",
"72 157 LINE",
"-37 48 LINE"
);
}
);
width = 0;
}
);
},
{
glyphname = aPh.base;
lastChange = "2021-01-11 18:52:27 +0000";
layers = (
{
anchors = (
{
name = belt;
position = "{284, 214}";
},
{
name = haa;
position = "{375, -2}";
},
{
name = haa.acute;
position = "{288, -21}";
},
{
name = hee;
position = "{287, -60}";
},
{
name = hi;
position = "{357, -236}";
},
{
name = ho;
position = "{280, -3}";
},
{
name = hu;
position = "{605, 337}";
},
{
name = hwa;
position = "{288, -2}";
},
{
name = neck;
position = "{291, 478}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"416 -3 OFFCURVE",
"523 109 OFFCURVE",
"523 245 CURVE SMOOTH",
"523 393 OFFCURVE",
"408 483 OFFCURVE",
"291 483 CURVE SMOOTH",
"152 483 OFFCURVE",
"50 372 OFFCURVE",
"50 245 CURVE SMOOTH",
"50 85 OFFCURVE",
"169 -3 OFFCURVE",
"289 -3 CURVE"
);
},
{
closed = 1;
nodes = (
"184 11 OFFCURVE",
"143 118 OFFCURVE",
"143 239 CURVE SMOOTH",
"143 347 OFFCURVE",
"194 467 OFFCURVE",
"284 467 CURVE SMOOTH",
"389 467 OFFCURVE",
"430 346 OFFCURVE",
"430 246 CURVE SMOOTH",
"430 146 OFFCURVE",
"390 11 OFFCURVE",
"290 11 CURVE SMOOTH"
);
}
);
width = 573;
}
);
},
{
glyphname = aglka.base;
lastChange = "2021-01-11 19:35:22 +0000";
layers = (
{
anchors = (
{
name = aGl;
position = "{138, 488}";
},
{
name = eGl;
position = "{45, 607}";
},
{
name = haa;
position = "{368, 0}";
},
{
name = hat;
position = "{294, 661}";
},
{
name = hat.left;
position = "{87, 605}";
},
{
name = hat.left.aGl;
position = "{102, 696}";
},
{
name = he;
position = "{166, 252}";
},
{
name = he.acute;
position = "{274, 485}";
},
{
name = hee;
position = "{395, -49}";
},
{
name = hi;
position = "{367, 3}";
},
{
name = ho;
position = "{99, 4}";
},
{
name = hu;
position = "{553, 253}";
},
{
name = hwa;
position = "{372, -29}";
},
{
name = ka;
position = "{141, 453}";
},
{
name = neck;
position = "{287, 483}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"167 364 LINE",
"203 400 OFFCURVE",
"227 419 OFFCURVE",
"271 419 CURVE SMOOTH",
"340 419 OFFCURVE",
"367 367 OFFCURVE",
"367 290 CURVE SMOOTH",
"367 0 LINE",
"512 0 LINE",
"512 9 LINE",
"488 12 OFFCURVE",
"451 16 OFFCURVE",
"451 35 CURVE SMOOTH",
"451 329 LINE SMOOTH",
"451 420 OFFCURVE",
"408 483 OFFCURVE",
"331 483 CURVE SMOOTH",
"260 483 OFFCURVE",
"200 424 OFFCURVE",
"168 374 CURVE",
"166 374 LINE",
"166 389 LINE",
"84 389 LINE",
"84 42 LINE SMOOTH",
"84 21 OFFCURVE",
"59 13 OFFCURVE",
"28 10 CURVE",
"28 0 LINE",
"167 0 LINE"
);
}
);
width = 521;
}
);
},
{
glyphname = ba.base;
lastChange = "2021-01-11 20:14:29 +0000";
layers = (
{
anchors = (
{
name = aGl;
position = "{138, 488}";
},
{
name = eGl;
position = "{0, 606}";
},
{
name = haa;
position = "{368, 0}";
},
{
name = hat;
position = "{294, 661}";
},
{
name = hat.left;
position = "{65, 655}";
},
{
name = he;
position = "{166, 252}";
},
{
name = he.acute;
position = "{244, 555}";
},
{
name = hee;
position = "{385, -59}";
},
{
name = hi;
position = "{367, 3}";
},
{
name = ho;
position = "{116, 4}";
},
{
name = hu;
position = "{553, 253}";
},
{
name = hwa;
position = "{372, -29}";
},
{
name = ka;
position = "{240, 521}";
},
{
name = neck;
position = "{267, 483}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"166 331 LINE SMOOTH",
"166 414 OFFCURVE",
"184 461 OFFCURVE",
"267.5 461.848 CURVE SMOOTH",
"353 463 OFFCURVE",
"369 408 OFFCURVE",
"369 331 CURVE SMOOTH",
"369 0 LINE",
"512 0 LINE",
"512 9 LINE",
"488 12 OFFCURVE",
"451 16 OFFCURVE",
"451 35 CURVE SMOOTH",
"451 319 LINE SMOOTH",
"451 421 OFFCURVE",
"440 484 OFFCURVE",
"267.5 483.794 CURVE SMOOTH",
"100 484 OFFCURVE",
"84 423 OFFCURVE",
"84 326 CURVE SMOOTH",
"84 42 LINE SMOOTH",
"84 21 OFFCURVE",
"59 13 OFFCURVE",
"28 10 CURVE",
"28 0 LINE",
"166 0 LINE"
);
}
);
width = 521;
}
);
},
{
glyphname = da.base;
lastChange = "2021-01-06 23:06:36 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{374, -34}";
},
{
name = hat;
position = "{285, 658}";
},
{
name = he;
position = "{396, 322}";
},
{
name = hee;
position = "{372, -82}";
},
{
name = hi;
position = "{344, -270}";
},
{
name = ho;
position = "{61, 54}";
},
{
name = hu;
position = "{560, 61}";
},
{
name = hwa;
position = "{378, -31}";
},
{
name = neck;
position = "{286, 477}";
},
{
name = top;
position = "{250, 483}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"68 -90 LINE",
"74 -74 OFFCURVE",
"84 -13 OFFCURVE",
"93 -13 CURVE SMOOTH",
"406 -13 LINE SMOOTH",
"427 -13 OFFCURVE",
"431 -57 OFFCURVE",
"433 -82 CURVE",
"442 -82 LINE",
"442 87 LINE",
"433 87 LINE",
"429.418 66.402 OFFCURVE",
"433.054 38.585 OFFCURVE",
"417.331 33 CURVE",
"297 33 LINE SMOOTH",
"223 33 OFFCURVE",
"156 105 OFFCURVE",
"148 118 CURVE",
"170 107 OFFCURVE",
"195 100 OFFCURVE",
"222 98 CURVE SMOOTH",
"308 91 OFFCURVE",
"443 132 OFFCURVE",
"443 302 CURVE SMOOTH",
"443 418 OFFCURVE",
"336 490 OFFCURVE",
"247 490 CURVE SMOOTH",
"121 490 OFFCURVE",
"28 389 OFFCURVE",
"28 274 CURVE SMOOTH",
"28 170 OFFCURVE",
"83 64 OFFCURVE",
"155 32 CURVE",
"25 32 LINE",
"25 27 LINE",
"63 -90 LINE"
);
},
{
closed = 1;
nodes = (
"137 120 OFFCURVE",
"113 213 OFFCURVE",
"113 269 CURVE SMOOTH",
"113 367 OFFCURVE",
"159 476 OFFCURVE",
"241 476 CURVE SMOOTH",
"327 476 OFFCURVE",
"366 386 OFFCURVE",
"366 301 CURVE SMOOTH",
"366 210 OFFCURVE",
"312 104 OFFCURVE",
"217 112 CURVE SMOOTH"
);
}
);
width = 493;
}
);
leftMetricsKey = k;
rightMetricsKey = o;
},
{
glyphname = ga.base;
lastChange = "2021-01-06 22:58:07 +0000";
layers = (
{
anchors = (
{
name = gwa;
position = "{249, 31}";
},
{
name = haa.acute;
position = "{242, 161}";
},
{
name = hat;
position = "{211, 659}";
},
{
name = he;
position = "{125, 251}";
},
{
name = hee;
position = "{247, -51}";
},
{
name = hi;
position = "{227, 0}";
},
{
name = ho.ring;
position = "{67, 336}";
},
{
name = hu;
position = "{406, 253}";
},
{
name = neck;
position = "{218, 490}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"343 0 LINE",
"343 10 LINE",
"312 13 OFFCURVE",
"287 21 OFFCURVE",
"287 42 CURVE SMOOTH",
"287 390 LINE SMOOTH",
"287 436 OFFCURVE",
"297 481 OFFCURVE",
"222 481 CURVE SMOOTH",
"31 481 LINE",
"31 448 LINE",
"184 448 LINE SMOOTH",
"196 448 OFFCURVE",
"205 439 OFFCURVE",
"205 427 CURVE SMOOTH",
"205 48 LINE SMOOTH",
"205 20 OFFCURVE",
"150 15 OFFCURVE",
"119 10 CURVE",
"119 0 LINE"
);
}
);
width = 364;
}
);
leftMetricsKey = a;
rightMetricsKey = i;
},
{
glyphname = ha.base;
lastChange = "2021-01-06 22:35:12 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{357, -1}";
},
{
name = he;
position = "{143, 250}";
},
{
name = hee;
position = "{357, -54}";
},
{
name = hi;
position = "{357, -222}";
},
{
name = ho.ring;
position = "{393, 553}";
},
{
name = hu;
position = "{541, 252}";
},
{
name = hwa;
position = "{357, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"269.117 -3 OFFCURVE",
"321.276 47.336 OFFCURVE",
"356 101 CURVE",
"357 100 LINE",
"357 -1 LINE",
"364 -1 LINE",
"506 -1 LINE",
"506 13 LINE",
"490 17 OFFCURVE",
"462 24 OFFCURVE",
"450 31 CURVE SMOOTH",
"440 37 OFFCURVE",
"440 67.333 OFFCURVE",
"440 78 CURVE SMOOTH",
"440 473 LINE",
"272 473 LINE",
"272 462 LINE",
"301.333 459.333 OFFCURVE",
"333 459 OFFCURVE",
"347 449 CURVE SMOOTH",
"358 441 OFFCURVE",
"357 422 OFFCURVE",
"357 400 CURVE SMOOTH",
"357 115 LINE",
"332.303 82.07 OFFCURVE",
"299.508 53 OFFCURVE",
"250 53 CURVE SMOOTH",
"176.667 53 OFFCURVE",
"155 94 OFFCURVE",
"155 182 CURVE SMOOTH",
"155 473 LINE",
"0 473 LINE",
"0 462 LINE",
"17 460 OFFCURVE",
"42 461 OFFCURVE",
"56 454 CURVE SMOOTH",
"62 451 OFFCURVE",
"66 440 OFFCURVE",
"66 418 CURVE SMOOTH",
"66 146 LINE SMOOTH",
"66 49 OFFCURVE",
"110.667 -3 OFFCURVE",
"196 -3 CURVE SMOOTH"
);
}
);
width = 523;
}
);
leftMetricsKey = u;
rightMetricsKey = u;
},
{
glyphname = hha.base;
lastChange = "2021-01-06 23:03:55 +0000";
layers = (
{
anchors = (
{
name = cha;
position = "{395, 52}";
},
{
name = haa;
position = "{644, 2}";
},
{
name = haa.acute;
position = "{470, 4}";
},
{
name = he.acute;
position = "{404, 595}";
},
{
name = hee;
position = "{655, -65}";
},
{
name = hi;
position = "{637, -7}";
},
{
name = ho;
position = "{91, 2}";
},
{
name = hu;
position = "{825, 251}";
},
{
name = hwa;
position = "{644, -29}";
},
{
name = neck;
position = "{425, 487}";
},
{
name = top;
position = "{372, -220}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"640 0 LINE",
"782 0 LINE",
"782 9 LINE",
"758.54 11.607 OFFCURVE",
"724 15.983 OFFCURVE",
"724 35 CURVE SMOOTH",
"724 333 LINE SMOOTH",
"724 421 OFFCURVE",
"684.333 483 OFFCURVE",
"607 483 CURVE SMOOTH",
"537.086 483 OFFCURVE",
"472.756 420.513 OFFCURVE",
"446 367 CURVE",
"443 367 LINE",
"433.667 437.667 OFFCURVE",
"393 483 OFFCURVE",
"329 483 CURVE SMOOTH",
"259.974 483 OFFCURVE",
"197.148 424.667 OFFCURVE",
"169 374 CURVE",
"167 375 LINE",
"167 483 LINE",
"161 483 LINE",
"30 436 LINE",
"30 428 LINE",
"46 421.333 OFFCURVE",
"63 412 OFFCURVE",
"75 405 CURVE SMOOTH",
"85 399 OFFCURVE",
"85 394.667 OFFCURVE",
"85 384 CURVE SMOOTH",
"85 42 LINE SMOOTH",
"85 20.667 OFFCURVE",
"59.667 12.667 OFFCURVE",
"29 10 CURVE",
"29 0 LINE",
"168 0 LINE",
"168 364 LINE",
"202.667 401.333 OFFCURVE",
"225 420 OFFCURVE",
"269 420 CURVE SMOOTH",
"338.333 420 OFFCURVE",
"362 372.667 OFFCURVE",
"362 294 CURVE SMOOTH",
"362 38 LINE SMOOTH",
"362 16.667 OFFCURVE",
"339 13.667 OFFCURVE",
"303 11 CURVE",
"303 0 LINE",
"500 0 LINE",
"500 9 LINE",
"475.016 11.776 OFFCURVE",
"446 15.601 OFFCURVE",
"446 35 CURVE SMOOTH",
"446 358 LINE",
"478 394 OFFCURVE",
"503 420 OFFCURVE",
"547 420 CURVE SMOOTH",
"616.333 420 OFFCURVE",
"640 370.333 OFFCURVE",
"640 293 CURVE"
);
}
);
width = 794;
}
);
},
{
glyphname = la.base;
lastChange = "2021-01-06 19:44:15 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{372, 1}";
},
{
name = hee;
position = "{381, -57}";
},
{
name = hi;
position = "{372, 3}";
},
{
name = ho;
position = "{164, 2}";
},
{
name = ho.ring;
position = "{501, 261}";
},
{
name = hu;
position = "{556, 251}";
},
{
name = hwa;
position = "{372, -30}";
},
{
name = le.ring;
position = "{179, 69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"168 0 LINE",
"168 352 LINE",
"241 463 OFFCURVE",
"371 438 OFFCURVE",
"371 319 CURVE SMOOTH",
"371 0 LINE",
"514 0 LINE",
"514 9 LINE",
"483 16 OFFCURVE",
"455 20 OFFCURVE",
"455 37 CURVE SMOOTH",
"455 319 LINE SMOOTH",
"455 564 OFFCURVE",
"231 477 OFFCURVE",
"166 369 CURVE",
"166 726 LINE",
"161 726 LINE",
"27 665 LINE",
"27 659 LINE",
"85 614 LINE",
"85 46 LINE SMOOTH",
"85 20 OFFCURVE",
"51 17 OFFCURVE",
"25 10 CURVE",
"25 0 LINE"
);
}
);
width = 524;
}
);
},
{
glyphname = ma.base;
lastChange = "2020-12-31 23:23:05 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{696, -1}";
},
{
name = haa.acute;
position = "{374, -7}";
},
{
name = hee;
position = "{624, -48}";
},
{
name = hi;
position = "{654, 1}";
},
{
name = ho;
position = "{387, -1}";
},
{
name = hu;
position = "{924, 252}";
},
{
name = hwa;
position = "{706, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"413 0 LINE",
"413 28 LINE",
"410 32 OFFCURVE",
"405 37 OFFCURVE",
"405 42 CURVE SMOOTH",
"405 386 LINE SMOOTH",
"405 429 OFFCURVE",
"406 434 OFFCURVE",
"415 441 CURVE SMOOTH",
"425 447 OFFCURVE",
"428 448 OFFCURVE",
"442 448 CURVE SMOOTH",
"457 448 OFFCURVE",
"460 447 OFFCURVE",
"470 441 CURVE SMOOTH",
"479 434 OFFCURVE",
"480 429 OFFCURVE",
"480 386 CURVE SMOOTH",
"480 42 LINE SMOOTH",
"480 34 OFFCURVE",
"474 28 OFFCURVE",
"468 23 CURVE",
"468 0 LINE",
"572 0 OFFCURVE",
"611 0 OFFCURVE",
"627 0 CURVE SMOOTH",
"737 0 OFFCURVE",
"835 101 OFFCURVE",
"835 247 CURVE SMOOTH",
"835 374 OFFCURVE",
"733 485 OFFCURVE",
"594 485 CURVE SMOOTH",
"587 485 OFFCURVE",
"579 485 OFFCURVE",
"572 484 CURVE",
"313 484 LINE SMOOTH",
"306 484 OFFCURVE",
"298 485 OFFCURVE",
"291 485 CURVE SMOOTH",
"152 485 OFFCURVE",
"50 374 OFFCURVE",
"50 247 CURVE SMOOTH",
"50 101 OFFCURVE",
"148 0 OFFCURVE",
"258 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170 39 OFFCURVE",
"131 128 OFFCURVE",
"131 246 CURVE SMOOTH",
"131 354 OFFCURVE",
"182 447 OFFCURVE",
"272 447 CURVE SMOOTH",
"282 447 OFFCURVE",
"333 447 OFFCURVE",
"342 445 CURVE",
"340 328 LINE",
"340 56 LINE",
"337 39 OFFCURVE",
"285 32 OFFCURVE",
"270 33 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"600 32 OFFCURVE",
"557 39 OFFCURVE",
"554 56 CURVE",
"554 446 LINE",
"563 448 OFFCURVE",
"603 446 OFFCURVE",
"613 446 CURVE SMOOTH",
"703 446 OFFCURVE",
"754 349 OFFCURVE",
"754 241 CURVE SMOOTH",
"754 123 OFFCURVE",
"715 39 OFFCURVE",
"615 33 CURVE SMOOTH"
);
}
);
width = 885;
}
);
},
{
glyphname = na.base;
lastChange = "2021-01-06 19:49:56 +0000";
layers = (
{
anchors = (
{
name = gwa;
position = "{258, 33}";
},
{
name = haa.acute;
position = "{253, 161}";
},
{
name = hat;
position = "{111, 613}";
},
{
name = he;
position = "{-3, 527}";
},
{
name = hee;
position = "{231, -52}";
},
{
name = hi;
position = "{210, 0}";
},
{
name = hu;
position = "{395, 256}";
},
{
name = nose.ext;
position = "{-26, 533}";
},
{
name = top;
position = "{435, 481}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"211 42 LINE SMOOTH",
"211 17 OFFCURVE",
"173 12 OFFCURVE",
"143 10 CURVE",
"143 0 LINE",
"358 0 LINE",
"358 10 LINE",
"331 15 OFFCURVE",
"299 10 OFFCURVE",
"294 36 CURVE",
"294 389 LINE SMOOTH",
"294 419 OFFCURVE",
"289 439 OFFCURVE",
"284 448 CURVE SMOOTH",
"270 472 OFFCURVE",
"245 495 OFFCURVE",
"206 495 CURVE SMOOTH",
"195 495 OFFCURVE",
"172 489 OFFCURVE",
"164 485 CURVE",
"164 656 LINE",
"158 656 LINE",
"23 640 LINE",
"23 634 LINE",
"42 627 OFFCURVE",
"59 619 OFFCURVE",
"71 611 CURVE SMOOTH",
"80 604 OFFCURVE",
"81 597 OFFCURVE",
"81 586 CURVE SMOOTH",
"81 434 LINE",
"164 434 LINE",
"164 445.585 LINE",
"193.325 438.502 OFFCURVE",
"211 421 OFFCURVE",
"211 403 CURVE SMOOTH"
);
}
);
width = 384;
}
);
},
{
glyphname = pa.base;
lastChange = "2021-01-06 20:06:00 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{207, 1}";
},
{
name = haa.acute;
position = "{142, 161}";
},
{
name = he;
position = "{-21, 31}";
},
{
name = hee;
position = "{128, -75}";
},
{
name = hi;
position = "{112, 6}";
},
{
name = hu;
position = "{267, 251}";
},
{
name = hwa;
position = "{100, -41}";
},
{
name = top;
position = "{-3, -232}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"232 0 LINE",
"232 10 LINE",
"205 15 OFFCURVE",
"168 10 OFFCURVE",
"168 36 CURVE SMOOTH",
"168 412 LINE",
"281 412 LINE",
"312 476 LINE",
"13 476 LINE",
"13 412 LINE",
"85 412 LINE",
"85 42 LINE SMOOTH",
"85 17 OFFCURVE",
"47 12 OFFCURVE",
"17 10 CURVE",
"17 0 LINE"
);
}
);
userData = {
_smart.haa.acute = 1;
};
width = 324;
}
);
},
{
glyphname = ra.base;
lastChange = "2021-01-06 21:16:26 +0000";
layers = (
{
anchors = (
{
name = fa;
position = "{300, 14}";
},
{
name = haa;
position = "{262, 2}";
},
{
name = haa.acute;
position = "{312, 42}";
},
{
name = hat.left;
position = "{149, 520}";
},
{
name = he;
position = "{172, -183}";
},
{
name = he.acute;
position = "{348, -19}";
},
{
name = hee;
position = "{356, -42}";
},
{
name = ra;
position = "{334, 70}";
},
{
name = ri;
position = "{447, 66}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"418 -1 OFFCURVE",
"462 22 OFFCURVE",
"462 61 CURVE SMOOTH",
"462 90 OFFCURVE",
"445 109 OFFCURVE",
"412 109 CURVE SMOOTH",
"357 109 OFFCURVE",
"376 27 OFFCURVE",
"329 26 CURVE SMOOTH",
"302 25 OFFCURVE",
"199 21 OFFCURVE",
"199 48 CURVE SMOOTH",
"199 484 LINE",
"193 484 LINE",
"58 440 LINE",
"58 434 LINE",
"77 427 OFFCURVE",
"94 419 OFFCURVE",
"106 411 CURVE SMOOTH",
"115 404 OFFCURVE",
"116 397 OFFCURVE",
"116 386 CURVE SMOOTH",
"116 43 LINE SMOOTH",
"116 18 OFFCURVE",
"78 13 OFFCURVE",
"48 11 CURVE",
"48 1 LINE",
"233 1 LINE SMOOTH",
"279 1 OFFCURVE",
"328 -1 OFFCURVE",
"378 -1 CURVE SMOOTH"
);
}
);
userData = {
_smart.he = 1;
_smart.he.acute = 1;
};
width = 482;
}
);
},
{
glyphname = re.base;
lastChange = "2021-01-05 08:50:44 +0000";
layers = (
{
anchors = (
{
name = fa;
position = "{287, -27}";
},
{
name = haa;
position = "{248, 2}";
},
{
name = hat;
position = "{212, 585}";
},
{
name = he;
position = "{89, 250}";
},
{
name = ho.ring;
position = "{363, 277}";
},
{
name = hwa;
position = "{258, -4}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"339 -3 OFFCURVE",
"416 58 OFFCURVE",
"441 143 CURVE",
"433 147 LINE",
"401 94 OFFCURVE",
"358 66 OFFCURVE",
"275 66 CURVE SMOOTH",
"169 66 OFFCURVE",
"105 150 OFFCURVE",
"105 268 CURVE SMOOTH",
"105 372 OFFCURVE",
"163 444 OFFCURVE",
"248 449 CURVE SMOOTH",
"329 454 OFFCURVE",
"395 426 OFFCURVE",
"426 352 CURVE",
"439 353 LINE",
"413 454 OFFCURVE",
"317 483 OFFCURVE",
"246 483 CURVE SMOOTH",
"117 483 OFFCURVE",
"20 370 OFFCURVE",
"20 242 CURVE SMOOTH",
"20 104 OFFCURVE",
"111 -3 OFFCURVE",
"241 -3 CURVE SMOOTH"
);
}
);
width = 450;
}
);
},
{
glyphname = sa.base;
lastChange = "2021-01-06 19:45:10 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{487, -1}";
},
{
name = haa.acute;
position = "{339, 7}";
},
{
name = hee;
position = "{458, -68}";
},
{
name = hi;
position = "{487, 0}";
},
{
name = ho;
position = "{224, -4}";
},
{
name = hu;
position = "{712, 253}";
},
{
name = hwa;
position = "{466, -28}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"227 -2 OFFCURVE",
"230.333 0 OFFCURVE",
"233 4 CURVE",
"239.667 18.667 OFFCURVE",
"245.333 32.333 OFFCURVE",
"250 45 CURVE SMOOTH",
"254.667 57.667 OFFCURVE",
"261.667 73 OFFCURVE",
"271 91 CURVE",
"366 339 LINE",
"386.22 280.363 OFFCURVE",
"415.495 192.475 OFFCURVE",
"429 153 CURVE SMOOTH",
"446.333 102.333 OFFCURVE",
"461.667 57 OFFCURVE",
"479 5 CURVE SMOOTH",
"480.333 1 OFFCURVE",
"481.333 -2 OFFCURVE",
"488 -2 CURVE SMOOTH",
"491.333 -2 OFFCURVE",
"494.333 0 OFFCURVE",
"497 4 CURVE",
"502.425 14.849 OFFCURVE",
"536.258 88.767 OFFCURVE",
"543 103 CURVE",
"559.153 143.382 OFFCURVE",
"590.522 215.537 OFFCURVE",
"609.5 260 CURVE SMOOTH",
"628.877 305.398 OFFCURVE",
"658.058 371.468 OFFCURVE",
"672 404 CURVE SMOOTH",
"694.292 456.015 OFFCURVE",
"722.696 458.475 OFFCURVE",
"765 462 CURVE",
"765 473 LINE",
"582 473 LINE",
"582 462 LINE",
"613.007 458.555 OFFCURVE",
"645 458.058 OFFCURVE",
"645 423 CURVE SMOOTH",
"645 402.844 OFFCURVE",
"615.805 323.404 OFFCURVE",
"596.5 275.5 CURVE SMOOTH",
"577.681 228.801 OFFCURVE",
"538.952 134.395 OFFCURVE",
"530 115 CURVE",
"515.029 154.924 OFFCURVE",
"479.892 251.092 OFFCURVE",
"462.5 301 CURVE SMOOTH",
"449.31 338.85 OFFCURVE",
"422 415.708 OFFCURVE",
"422 430 CURVE SMOOTH",
"422 455.558 OFFCURVE",
"467.655 458.707 OFFCURVE",
"494 462 CURVE",
"494 473 LINE",
"266 473 LINE",
"266 462 LINE",
"304.929 459.837 OFFCURVE",
"305.702 456.298 OFFCURVE",
"323 439 CURVE",
"336.333 415 OFFCURVE",
"346.667 390.667 OFFCURVE",
"356 364 CURVE",
"326.929 283.496 OFFCURVE",
"279.805 159.512 OFFCURVE",
"260 110 CURVE",
"237.727 163.923 OFFCURVE",
"198.614 257.145 OFFCURVE",
"175 315 CURVE SMOOTH",
"153.443 367.815 OFFCURVE",
"130.124 426.503 OFFCURVE",
"126 443 CURVE",
"138.231 455.231 OFFCURVE",
"173.032 459.147 OFFCURVE",
"193 462 CURVE",
"193 473 LINE",
"-32 473 LINE",
"-32 462 LINE",
"-10 461.333 OFFCURVE",
"4.833 458.5 OFFCURVE",
"12.5 453.5 CURVE SMOOTH",
"20.167 448.5 OFFCURVE",
"26 444.333 OFFCURVE",
"30 441 CURVE",
"40.667 423.667 OFFCURVE",
"51 399.667 OFFCURVE",
"59 381 CURVE SMOOTH",
"115 246.333 OFFCURVE",
"162 131.667 OFFCURVE",
"214 5 CURVE",
"216.667 0.333 OFFCURVE",
"219.667 -2 OFFCURVE",
"223 -2 CURVE SMOOTH"
);
}
);
width = 739;
}
);
},
{
glyphname = ta.base;
lastChange = "2021-01-06 23:13:10 +0000";
layers = (
{
anchors = (
{
name = haa.acute;
position = "{151, 161}";
},
{
name = hat;
position = "{133, 626}";
},
{
name = he.acute;
position = "{105, 558}";
},
{
name = hee;
position = "{106, -49}";
},
{
name = hi;
position = "{90, 3}";
},
{
name = ho.ring;
position = "{145, 629}";
},
{
name = hu;
position = "{270, 249}";
},
{
name = hwa;
position = "{94, -36}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"231 0 LINE",
"231 10 LINE",
"204 15 OFFCURVE",
"172 10 OFFCURVE",
"166 36 CURVE",
"166 412 LINE",
"287 412 LINE",
"287 473 LINE",
"166 473 LINE",
"166 630 LINE",
"86 630 LINE",
"86 472 LINE",
"13 472 LINE",
"13 412 LINE",
"86 412 LINE",
"86 42 LINE SMOOTH",
"86 17 OFFCURVE",
"46 12 OFFCURVE",
"16 10 CURVE",
"16 0 LINE"
);
}
);
width = 324;
}
);
},
{
glyphname = tsa.base;
lastChange = "2021-01-06 20:06:14 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{327, 2}";
},
{
name = he;
position = "{371, 363}";
},
{
name = hee;
position = "{363, -70}";
},
{
name = hi;
position = "{337, 4}";
},
{
name = ho;
position = "{87, 7}";
},
{
name = hu;
position = "{488, 219}";
},
{
name = hwa;
position = "{340, -29}";
},
{
name = neck;
position = "{236, 485}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"200 0 LINE",
"200 11 LINE",
"165 12 OFFCURVE",
"139 15 OFFCURVE",
"139 45 CURVE SMOOTH",
"139 131 LINE SMOOTH",
"139 156 OFFCURVE",
"207 183 OFFCURVE",
"247 205 CURVE",
"266 198 LINE SMOOTH",
"300 186 OFFCURVE",
"320 166 OFFCURVE",
"325 135 CURVE",
"325 42 LINE SMOOTH",
"325 17 OFFCURVE",
"287 12 OFFCURVE",
"257 10 CURVE",
"257 0 LINE",
"472 0 LINE",
"472 10 LINE",
"445 15 OFFCURVE",
"413 10 OFFCURVE",
"408 36 CURVE",
"408 149 LINE SMOOTH",
"408 201 OFFCURVE",
"362 225 OFFCURVE",
"321 247 CURVE",
"335 269 OFFCURVE",
"390 292 OFFCURVE",
"390 377 CURVE SMOOTH",
"390 456 OFFCURVE",
"309 483 OFFCURVE",
"232 483 CURVE SMOOTH",
"146 483 OFFCURVE",
"71 430 OFFCURVE",
"71 347 CURVE SMOOTH",
"71 287 OFFCURVE",
"107 252 OFFCURVE",
"156 233 CURVE SMOOTH",
"190 220 LINE",
"160 199 OFFCURVE",
"91 170 OFFCURVE",
"91 135 CURVE SMOOTH",
"91 45 LINE SMOOTH",
"91 15 OFFCURVE",
"61 11 OFFCURVE",
"25 11 CURVE",
"25 0 LINE"
);
},
{
closed = 1;
nodes = (
"204 291 LINE SMOOTH",
"160 307 OFFCURVE",
"133 327 OFFCURVE",
"133 376 CURVE SMOOTH",
"133 434 OFFCURVE",
"176 464 OFFCURVE",
"224 464 CURVE SMOOTH",
"302 464 OFFCURVE",
"350 448 OFFCURVE",
"350 363 CURVE SMOOTH",
"350 312 OFFCURVE",
"297 258 OFFCURVE",
"262 270 CURVE"
);
}
);
width = 485;
}
);
},
{
glyphname = wa.base;
lastChange = "2021-01-06 19:46:51 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{350, 9}";
},
{
name = haa.acute;
position = "{393, 0}";
},
{
name = hat;
position = "{394, 654}";
},
{
name = he;
position = "{689, 257}";
},
{
name = he.acute;
position = "{321, 567}";
},
{
name = hee;
position = "{391, -15}";
},
{
name = hi;
position = "{349, -235}";
},
{
name = ho.ring;
position = "{389, 542}";
},
{
name = hu;
position = "{546, -93}";
},
{
name = hwa;
position = "{346, 0}";
},
{
name = neck;
position = "{381, 482}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"251 -1 OFFCURVE",
"300 30 OFFCURVE",
"339 97 CURVE",
"340 97 LINE",
"346 37 LINE",
"415 37 LINE",
"421 97 LINE",
"422 97 LINE",
"461 30 OFFCURVE",
"510 -1 OFFCURVE",
"589 -1 CURVE SMOOTH",
"667 -1 OFFCURVE",
"721 90 OFFCURVE",
"721 236 CURVE SMOOTH",
"721 378 OFFCURVE",
"645 483 OFFCURVE",
"526 483 CURVE SMOOTH",
"486 483 OFFCURVE",
"441 474 OFFCURVE",
"419 456 CURVE",
"413 483 LINE",
"380 482 LINE",
"345 483 LINE",
"345 476 OFFCURVE",
"340 461 OFFCURVE",
"340 456 CURVE",
"311 465 OFFCURVE",
"275 483 OFFCURVE",
"235 483 CURVE SMOOTH",
"116 483 OFFCURVE",
"40 378 OFFCURVE",
"40 236 CURVE SMOOTH",
"40 90 OFFCURVE",
"94 -1 OFFCURVE",
"172 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189 36 OFFCURVE",
"165 60 OFFCURVE",
"151 93 CURVE SMOOTH",
"131 140 OFFCURVE",
"129 208 OFFCURVE",
"129 249 CURVE SMOOTH",
"129 284 OFFCURVE",
"129 336 OFFCURVE",
"138 380 CURVE SMOOTH",
"146 426 OFFCURVE",
"168 464 OFFCURVE",
"220 464 CURVE SMOOTH",
"259 464 OFFCURVE",
"339 435 OFFCURVE",
"339 373 CURVE SMOOTH",
"339 153 LINE",
"328 96 OFFCURVE",
"286 36 OFFCURVE",
"231 36 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"475 36 OFFCURVE",
"433 97 OFFCURVE",
"422 154 CURVE",
"422 373 LINE SMOOTH",
"422 435 OFFCURVE",
"502 464 OFFCURVE",
"541 464 CURVE SMOOTH",
"578 464 OFFCURVE",
"600 445 OFFCURVE",
"613 417 CURVE SMOOTH",
"635 369 OFFCURVE",
"635 294 OFFCURVE",
"635 249 CURVE SMOOTH",
"635 200 OFFCURVE",
"631 132 OFFCURVE",
"609 86 CURVE SMOOTH",
"594 56 OFFCURVE",
"571 36 OFFCURVE",
"530 36 CURVE SMOOTH"
);
}
);
width = 761;
}
);
},
{
glyphname = ya.base;
lastChange = "2021-01-06 22:41:17 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{391, -24}";
},
{
name = haa.acute;
position = "{128, 12}";
},
{
name = hat;
position = "{302, 658}";
},
{
name = he;
position = "{14, 97}";
},
{
name = hee;
position = "{267, 45}";
},
{
name = hi;
position = "{14, -17}";
},
{
name = ho;
position = "{89, -22}";
},
{
name = hu;
position = "{561, 250}";
},
{
name = hwa;
position = "{390, -31}";
},
{
name = neck;
position = "{303, 477}";
},
{
name = top;
position = "{267, 483}";
},
{
name = yaa;
position = "{-3, -188}";
},
{
name = ye;
position = "{315, -73}";
},
{
name = yu;
position = "{214, 17}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"141 -124 LINE",
"141 98 LINE",
"239 98 LINE SMOOTH",
"321 98 OFFCURVE",
"460 132 OFFCURVE",
"460 302 CURVE SMOOTH",
"460 418 OFFCURVE",
"353 490 OFFCURVE",
"264 490 CURVE SMOOTH",
"206 490 OFFCURVE",
"166 472 OFFCURVE",
"135 451 CURVE SMOOTH",
"101 428 LINE",
"98 428 LINE",
"67 483 LINE",
"60 483 LINE",
"60 -124 LINE"
);
},
{
closed = 1;
nodes = (
"142 287 LINE SMOOTH",
"142 362 OFFCURVE",
"159 389 OFFCURVE",
"174 412 CURVE SMOOTH",
"193 441 OFFCURVE",
"224 473 OFFCURVE",
"257 474 CURVE SMOOTH",
"327 476 OFFCURVE",
"383 386 OFFCURVE",
"383 301 CURVE SMOOTH",
"383 211 OFFCURVE",
"316 114 OFFCURVE",
"236 114 CURVE SMOOTH",
"142 114 LINE"
);
}
);
userData = {
_smart.hu = 1;
};
width = 480;
}
);
rightMetricsKey = p;
},
{
glyphname = za.base;
lastChange = "2021-01-06 19:52:31 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{361, 1}";
},
{
name = he.acute;
position = "{259, 476}";
},
{
name = hee;
position = "{388, -50}";
},
{
name = hi;
position = "{363, 2}";
},
{
name = ho;
position = "{106, 1}";
},
{
name = hu;
position = "{527, 272}";
},
{
name = hwa;
position = "{367, 3}";
},
{
name = zha;
position = "{267, 519}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"161 236 LINE",
"349 236 LINE",
"349 -2 LINE",
"488 -2 LINE",
"488 8 LINE",
"461 13 OFFCURVE",
"432 11 OFFCURVE",
"432 36 CURVE SMOOTH",
"432 432 LINE SMOOTH",
"432 458 OFFCURVE",
"450 461 OFFCURVE",
"490 465 CURVE",
"490 476 LINE",
"357 476 LINE",
"349 476 LINE",
"349 249 LINE",
"161 249 LINE",
"161 478 LINE",
"153 478 LINE",
"20 478 LINE",
"20 465 LINE",
"51 465 OFFCURVE",
"78 455 OFFCURVE",
"78 432 CURVE SMOOTH",
"78 42 LINE SMOOTH",
"78 17 OFFCURVE",
"49 13 OFFCURVE",
"18 10 CURVE",
"18 0 LINE",
"161 0 LINE"
);
}
);
width = 511;
}
);
leftMetricsKey = i;
rightMetricsKey = i;
},
{
glyphname = _smart.cha.cap;
lastChange = "2021-01-06 22:30:35 +0000";
layers = (
{
anchors = (
{
name = _cha.cap;
position = "{1, 113}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"269 84 OFFCURVE",
"290 105 OFFCURVE",
"290 130 CURVE SMOOTH",
"290 155 OFFCURVE",
"269 176 OFFCURVE",
"244 176 CURVE SMOOTH",
"219 176 OFFCURVE",
"198 155 OFFCURVE",
"198 130 CURVE SMOOTH",
"198 105 OFFCURVE",
"219 84 OFFCURVE",
"244 84 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-283 84 OFFCURVE",
"-262 105 OFFCURVE",
"-262 130 CURVE SMOOTH",
"-262 155 OFFCURVE",
"-283 176 OFFCURVE",
"-308 176 CURVE SMOOTH",
"-333 176 OFFCURVE",
"-354 155 OFFCURVE",
"-354 130 CURVE SMOOTH",
"-354 105 OFFCURVE",
"-333 84 OFFCURVE",
"-308 84 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
glyphname = aGl.base.cap;
lastChange = "2021-01-08 03:43:17 +0000";
layers = (
{
anchors = (
{
name = eGl;
position = "{161, 715}";
},
{
name = haa;
position = "{600, 2}";
},
{
name = hat;
position = "{294, 661}";
},
{
name = hat.left;
position = "{187, 814}";
},
{
name = he;
position = "{266, 252}";
},
{
name = hee;
position = "{565, -49}";
},
{
name = hi;
position = "{567, 3}";
},
{
name = hi.cap;
position = "{567, -23}";
},
{
name = ho;
position = "{99, 4}";
},
{
name = hu;
position = "{633, 473}";
},
{
name = hwa;
position = "{572, 1}";
},
{
name = top;
position = "{348, 726}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"736 8 LINE",
"683 10 OFFCURVE",
"651 48 OFFCURVE",
"640 70 CURVE SMOOTH",
"632 87 OFFCURVE",
"625 103 OFFCURVE",
"619 117 CURVE SMOOTH",
"612 130 OFFCURVE",
"605 147 OFFCURVE",
"598 168 CURVE SMOOTH",
"566 252 OFFCURVE",
"535 337 OFFCURVE",
"501 429 CURVE SMOOTH",
"473 503 OFFCURVE",
"420 641 OFFCURVE",
"388 727 CURVE",
"380 727 LINE",
"366 702 OFFCURVE",
"336 663 OFFCURVE",
"292 647 CURVE",
"302 625 LINE",
"299 617 LINE SMOOTH",
"275 552 OFFCURVE",
"226 444 OFFCURVE",
"197 377 CURVE SMOOTH",
"160 292 OFFCURVE",
"124 209 OFFCURVE",
"96 146 CURVE SMOOTH",
"81 112 OFFCURVE",
"68 86 OFFCURVE",
"57 69 CURVE SMOOTH",
"46 52 OFFCURVE",
"39 41 OFFCURVE",
"34 36 CURVE SMOOTH",
"32 33 OFFCURVE",
"25 28 OFFCURVE",
"13 21 CURVE SMOOTH",
"0 14 OFFCURVE",
"-15 9 OFFCURVE",
"-32 7 CURVE",
"-32 -4 LINE",
"181 -4 LINE",
"181 6 LINE",
"145 12 OFFCURVE",
"108 19 OFFCURVE",
"108 54 CURVE SMOOTH",
"108 69 OFFCURVE",
"115 94 OFFCURVE",
"129 130 CURVE SMOOTH",
"157 200 LINE SMOOTH",
"166 223 OFFCURVE",
"176 247 OFFCURVE",
"186 272 CURVE SMOOTH",
"220 356 OFFCURVE",
"258 448 OFFCURVE",
"277 493 CURVE SMOOTH",
"292 528 OFFCURVE",
"317 585 OFFCURVE",
"318 588 CURVE",
"366 470 LINE",
"549 -4 LINE",
"736 -4 LINE"
);
},
{
closed = 1;
nodes = (
"193 823 LINE",
"193 602 LINE",
"273 602 LINE",
"273 823 LINE"
);
}
);
width = 704;
}
);
leftMetricsKey = A;
rightMetricsKey = A;
},
{
glyphname = aPh.base.cap;
lastChange = "2021-01-06 22:09:16 +0000";
layers = (
{
anchors = (
{
name = belt;
position = "{404, 364}";
},
{
name = haa;
position = "{615, -2}";
},
{
name = haa.acute;
position = "{438, -21}";
},
{
name = hee;
position = "{437, -61}";
},
{
name = hi;
position = "{357, -245}";
},
{
name = ho;
position = "{408, 2}";
},
{
name = hu;
position = "{823, 585}";
},
{
name = hwa;
position = "{438, -2}";
},
{
name = neck;
position = "{401, 728}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"504.667 -5 OFFCURVE",
"598.833 32.333 OFFCURVE",
"667.5 99 CURVE SMOOTH",
"736.167 165.667 OFFCURVE",
"779 258.333 OFFCURVE",
"779 365 CURVE SMOOTH",
"779 461 OFFCURVE",
"744.667 552.167 OFFCURVE",
"682 619.5 CURVE SMOOTH",
"619.333 686.833 OFFCURVE",
"528.333 730 OFFCURVE",
"415 730 CURVE SMOOTH",
"311 730 OFFCURVE",
"213.5 694.833 OFFCURVE",
"143.5 631.5 CURVE SMOOTH",
"73.5 568.167 OFFCURVE",
"29 475.667 OFFCURVE",
"29 361 CURVE SMOOTH",
"29 253 OFFCURVE",
"71 161.167 OFFCURVE",
"139 96.5 CURVE SMOOTH",
"207 31.833 OFFCURVE",
"300.667 -5 OFFCURVE",
"402 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"322 10 OFFCURVE",
"258.5 52 OFFCURVE",
"216.5 116 CURVE SMOOTH",
"174.5 180 OFFCURVE",
"153 267.333 OFFCURVE",
"153 358 CURVE SMOOTH",
"153 444.667 OFFCURVE",
"171.833 533.333 OFFCURVE",
"212.5 600 CURVE SMOOTH",
"253.167 666.667 OFFCURVE",
"316.333 713 OFFCURVE",
"403 713 CURVE SMOOTH",
"569.104 713 OFFCURVE",
"655 532.116 OFFCURVE",
"655 364 CURVE SMOOTH",
"655 280 OFFCURVE",
"634.333 191.833 OFFCURVE",
"593 124.5 CURVE SMOOTH",
"551.667 57.167 OFFCURVE",
"490 10 OFFCURVE",
"406 10 CURVE SMOOTH"
);
}
);
width = 808;
}
);
},
{
glyphname = ba.base.cap;
lastChange = "2021-01-11 18:53:31 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{394, -19}";
},
{
name = haa;
position = "{670, 0}";
},
{
name = hat;
position = "{444, 870}";
},
{
name = hat.left;
position = "{125, 845}";
},
{
name = he;
position = "{252, 322}";
},
{
name = he.acute;
position = "{394, 815}";
},
{
name = hee;
position = "{635, -69}";
},
{
name = hi.cap;
position = "{698, -19}";
},
{
name = ho;
position = "{210, 4}";
},
{
name = hu;
position = "{873, 473}";
},
{
name = hwa;
position = "{680, -37}";
},
{
name = ka.cap;
position = "{316, 682}";
},
{
name = neck.cap;
position = "{397, 693}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"349 0 LINE",
"349 10 LINE",
"321 13 OFFCURVE",
"288 24 OFFCURVE",
"272 47 CURVE SMOOTH",
"261 62 OFFCURVE",
"262 102 OFFCURVE",
"262 141 CURVE",
"262 520 LINE SMOOTH",
"262 558 OFFCURVE",
"280 717 OFFCURVE",
"444 717 CURVE SMOOTH",
"623 717 OFFCURVE",
"647 532 OFFCURVE",
"647 486 CURVE SMOOTH",
"647 130 LINE",
"647 104 OFFCURVE",
"645 57 OFFCURVE",
"638 47 CURVE SMOOTH",
"627 30 OFFCURVE",
"592 14 OFFCURVE",
"543 10 CURVE",
"543 0 LINE",
"850 0 LINE",
"850 10 LINE",
"815 14 OFFCURVE",
"784 22 OFFCURVE",
"767 49 CURVE SMOOTH",
"759 61 OFFCURVE",
"757 97 OFFCURVE",
"757 136 CURVE SMOOTH",
"757 477 LINE SMOOTH",
"757 534 OFFCURVE",
"760 740 OFFCURVE",
"440 740 CURVE SMOOTH",
"170 740 OFFCURVE",
"153 560 OFFCURVE",
"153 478 CURVE SMOOTH",
"153 156 LINE SMOOTH",
"153 121 OFFCURVE",
"147 60 OFFCURVE",
"137 47 CURVE SMOOTH",
"121 28 OFFCURVE",
"87 15 OFFCURVE",
"54 10 CURVE",
"54 0 LINE"
);
}
);
userData = {
_smart.ka = 1;
};
width = 900;
}
);
},
{
glyphname = da.base.cap;
lastChange = "2021-01-06 22:16:14 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{574, 0}";
},
{
name = haa.acute;
position = "{253, 2}";
},
{
name = hat;
position = "{495, 808}";
},
{
name = he;
position = "{595, 642}";
},
{
name = hee;
position = "{566, -42}";
},
{
name = hi.cap;
position = "{535, -19}";
},
{
name = ho;
position = "{155, 2}";
},
{
name = hu;
position = "{687, 298}";
},
{
name = hwa;
position = "{584, -1}";
},
{
name = neck;
position = "{496, 636}";
},
{
name = top;
position = "{547, 726}";
},
{
name = ye;
position = "{447, 167}";
},
{
name = yu;
position = "{306, 195}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"236 443 LINE SMOOTH",
"236 507 OFFCURVE",
"237 571 OFFCURVE",
"238 618 CURVE SMOOTH",
"239 649 OFFCURVE",
"239 657 OFFCURVE",
"241 669 CURVE SMOOTH",
"242 677 OFFCURVE",
"244 687 OFFCURVE",
"247 703 CURVE",
"266 706 OFFCURVE",
"281 707 OFFCURVE",
"298 707 CURVE SMOOTH",
"337 707 OFFCURVE",
"373 703 OFFCURVE",
"405 688 CURVE SMOOTH",
"469 657 OFFCURVE",
"512 594 OFFCURVE",
"512 517 CURVE SMOOTH",
"512 433 OFFCURVE",
"465 360 OFFCURVE",
"380 331 CURVE SMOOTH",
"339 316 OFFCURVE",
"291 315 OFFCURVE",
"236 315 CURVE"
);
},
{
closed = 1;
nodes = (
"345 0 LINE",
"345 10 LINE",
"290 13 OFFCURVE",
"261 34 OFFCURVE",
"250 51 CURVE SMOOTH",
"237 71 OFFCURVE",
"237 101 OFFCURVE",
"237 144 CURVE SMOOTH",
"237 207 LINE",
"484.259 207 LINE",
"484 156 LINE SMOOTH",
"484 119 OFFCURVE",
"483 65 OFFCURVE",
"470 49 CURVE SMOOTH",
"450 26 OFFCURVE",
"420 15 OFFCURVE",
"387 10 CURVE",
"387 0 LINE",
"690 0 LINE",
"690 10 LINE",
"662 13 OFFCURVE",
"621 24 OFFCURVE",
"605 47 CURVE SMOOTH",
"594 62 OFFCURVE",
"595 102 OFFCURVE",
"595 141 CURVE SMOOTH",
"595 247 LINE",
"236 247 LINE",
"236 301 LINE",
"290 301 LINE SMOOTH",
"343 301 OFFCURVE",
"429 308 OFFCURVE",
"478 326 CURVE SMOOTH",
"555 355 OFFCURVE",
"620 417 OFFCURVE",
"620 512 CURVE SMOOTH",
"620 592 OFFCURVE",
"577 652 OFFCURVE",
"518 684 CURVE SMOOTH",
"458 717 OFFCURVE",
"393 722 OFFCURVE",
"305 722 CURVE SMOOTH",
"205 722 LINE",
"127 721 LINE",
"127 156 LINE SMOOTH",
"127 121 OFFCURVE",
"121 61 OFFCURVE",
"109 46 CURVE SMOOTH",
"92 25 OFFCURVE",
"58 15 OFFCURVE",
"25 10 CURVE",
"25 0 LINE"
);
}
);
width = 648;
}
);
leftMetricsKey = k;
},
{
glyphname = ga.base.cap;
lastChange = "2021-01-11 19:23:16 +0000";
layers = (
{
anchors = (
{
name = gwa;
position = "{519, -48}";
},
{
name = haa.acute.cap;
position = "{489, 132}";
},
{
name = hat;
position = "{381, 872}";
},
{
name = he;
position = "{388, 491}";
},
{
name = hee;
position = "{507, -61}";
},
{
name = hi.cap;
position = "{518, -14}";
},
{
name = ho.ring;
position = "{263, 521}";
},
{
name = hu;
position = "{697, 473}";
},
{
name = neck;
position = "{368, 700}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"578 726 LINE",
"44 726 LINE",
"44 519 LINE",
"56 519 LINE",
"115 667 OFFCURVE",
"139 697 OFFCURVE",
"282 706 CURVE SMOOTH",
"326 709 OFFCURVE",
"413 713 OFFCURVE",
"454 683 CURVE SMOOTH",
"465 675 OFFCURVE",
"467 622 OFFCURVE",
"467 579 CURVE SMOOTH",
"467 103 LINE SMOOTH",
"467 76 OFFCURVE",
"457 57 OFFCURVE",
"441 44 CURVE SMOOTH",
"420 26 OFFCURVE",
"388 19 OFFCURVE",
"360 15 CURVE",
"360 5 LINE",
"679 5 LINE",
"679 15 LINE",
"650 18 OFFCURVE",
"630 23 OFFCURVE",
"615 33 CURVE SMOOTH",
"588 52 OFFCURVE",
"579 76 OFFCURVE",
"578 98 CURVE"
);
}
);
width = 720;
}
);
leftMetricsKey = H;
},
{
glyphname = ha.base.cap;
lastChange = "2021-01-06 21:07:15 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{582, -1}";
},
{
name = he;
position = "{217, 480}";
},
{
name = hee;
position = "{582, -25}";
},
{
name = hi;
position = "{577, -242}";
},
{
name = ho.ring;
position = "{677, 793}";
},
{
name = hu;
position = "{825, 478}";
},
{
name = hwa;
position = "{322, -3}";
},
{
name = top;
position = "{445, 729}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"570 -10 OFFCURVE",
"683 96 OFFCURVE",
"683 281 CURVE SMOOTH",
"683 497 LINE SMOOTH",
"683 547 OFFCURVE",
"688 627 OFFCURVE",
"697 648 CURVE SMOOTH",
"713 687 OFFCURVE",
"740 703 OFFCURVE",
"789 710 CURVE",
"789 720 LINE",
"541 720 LINE",
"541 710 LINE",
"605 701 OFFCURVE",
"629 686 OFFCURVE",
"645 640 CURVE SMOOTH",
"651 623 OFFCURVE",
"655 547 OFFCURVE",
"655 497 CURVE SMOOTH",
"655 284 LINE SMOOTH",
"655 136 OFFCURVE",
"575 22 OFFCURVE",
"419 22 CURVE SMOOTH",
"286 22 OFFCURVE",
"206 115 OFFCURVE",
"206 256 CURVE SMOOTH",
"206 630 LINE SMOOTH",
"206 688 OFFCURVE",
"253 704 OFFCURVE",
"298 710 CURVE",
"298 720 LINE",
"0 720 LINE",
"0 710 LINE",
"35 706 OFFCURVE",
"62 698 OFFCURVE",
"81 675 CURVE SMOOTH",
"92 662 OFFCURVE",
"95 628 OFFCURVE",
"95 594 CURVE SMOOTH",
"95 252 LINE SMOOTH",
"95 166 OFFCURVE",
"119 96 OFFCURVE",
"182 46 CURVE SMOOTH",
"225 12 OFFCURVE",
"289 -10 OFFCURVE",
"385 -10 CURVE SMOOTH"
);
}
);
width = 806;
}
);
leftMetricsKey = u;
rightMetricsKey = u;
},
{
glyphname = hha.base.cap;
lastChange = "2021-01-06 21:12:08 +0000";
layers = (
{
anchors = (
{
name = cha;
position = "{479, 52}";
},
{
name = haa;
position = "{828, 2}";
},
{
name = haa.acute;
position = "{494, 4}";
},
{
name = he.acute;
position = "{428, 715}";
},
{
name = hee;
position = "{809, -65}";
},
{
name = hha.neck.cap;
position = "{515, 606}";
},
{
name = hi.cap;
position = "{788, -20}";
},
{
name = ho;
position = "{177, 2}";
},
{
name = hu;
position = "{972, 486}";
},
{
name = hwa;
position = "{778, -19}";
},
{
name = neck;
position = "{499, 618}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"286 0 LINE",
"286 10 LINE",
"171.338 26 OFFCURVE",
"164 79.953 OFFCURVE",
"164 206 CURVE SMOOTH",
"164 269 OFFCURVE",
"166 558 OFFCURVE",
"166 655 CURVE",
"180.294 623.553 OFFCURVE",
"242.46 484.417 OFFCURVE",
"266 431 CURVE SMOOTH",
"283.333 391.667 OFFCURVE",
"302 349.5 OFFCURVE",
"322 304.5 CURVE SMOOTH",
"355.129 229.959 OFFCURVE",
"412.22 97.429 OFFCURVE",
"447 17 CURVE",
"453 17 LINE",
"458.168 32.505 OFFCURVE",
"504.488 142.976 OFFCURVE",
"512 158 CURVE",
"556 256.667 OFFCURVE",
"591 335.333 OFFCURVE",
"627 414 CURVE SMOOTH",
"655.191 475.602 OFFCURVE",
"708.518 595.918 OFFCURVE",
"740 671 CURVE",
"740 332 OFFCURVE",
"740 194 OFFCURVE",
"740 138 CURVE SMOOTH",
"740 111 OFFCURVE",
"735 83.333 OFFCURVE",
"727 66 CURVE SMOOTH",
"713.667 38 OFFCURVE",
"673.333 13.667 OFFCURVE",
"616 11 CURVE",
"616 0 LINE",
"959 0 LINE",
"959 10 LINE",
"911.347 11.986 OFFCURVE",
"871.167 37.667 OFFCURVE",
"861 58 CURVE",
"853 72.667 OFFCURVE",
"850 102 OFFCURVE",
"849 127 CURVE SMOOTH",
"849 190 OFFCURVE",
"849 452 OFFCURVE",
"849 583 CURVE SMOOTH",
"849 620 OFFCURVE",
"856 647 OFFCURVE",
"861 655 CURVE SMOOTH",
"878 682 OFFCURVE",
"898.333 708.667 OFFCURVE",
"953 710 CURVE",
"953 720 LINE",
"740 720 LINE",
"732.62 700.319 OFFCURVE",
"695.905 615.323 OFFCURVE",
"660.5 535 CURVE SMOOTH",
"615.833 433.667 OFFCURVE",
"557.667 302.667 OFFCURVE",
"499 176 CURVE",
"260 720 LINE",
"47 720 LINE",
"47 710 LINE",
"71 706 OFFCURVE",
"98 699 OFFCURVE",
"117 682 CURVE SMOOTH",
"133 668 OFFCURVE",
"145 647 OFFCURVE",
"146 616 CURVE SMOOTH",
"148 550 OFFCURVE",
"146 268 OFFCURVE",
"143 214 CURVE SMOOTH",
"140.493 86.137 OFFCURVE",
"120.116 29.023 OFFCURVE",
"25 10 CURVE",
"25 0 LINE"
);
}
);
width = 991;
}
);
leftMetricsKey = M;
rightMetricsKey = M;
},
{
glyphname = la.base.cap;
lastChange = "2021-01-06 21:10:36 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{544, 1}";
},
{
name = hee;
position = "{558, -68}";
},
{
name = hi.cap;
position = "{567, -22}";
},
{
name = ho;
position = "{164, 2}";
},
{
name = ho.ring;
position = "{571, 431}";
},
{
name = hu;
position = "{616, 441}";
},
{
name = hwa;
position = "{593, -29}";
},
{
name = le.ring;
position = "{185, 84}";
},
{
name = top;
position = "{348, 726}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"388 414 OFFCURVE",
"480 171 OFFCURVE",
"493 132 CURVE SMOOTH",
"504 100 OFFCURVE",
"514 65 OFFCURVE",
"514 52 CURVE SMOOTH",
"514 19 OFFCURVE",
"462 6 OFFCURVE",
"444 6 CURVE",
"444 -4 LINE",
"736 -4 LINE",
"736 8 LINE",
"683 10 OFFCURVE",
"651 48 OFFCURVE",
"640 70 CURVE SMOOTH",
"632 87 OFFCURVE",
"625 103 OFFCURVE",
"619 117 CURVE SMOOTH",
"612 130 OFFCURVE",
"605 147 OFFCURVE",
"598 168 CURVE SMOOTH",
"566 252 OFFCURVE",
"535 337 OFFCURVE",
"501 429 CURVE SMOOTH",
"473 503 OFFCURVE",
"380 754 OFFCURVE",
"348 840 CURVE",
"322 809 LINE SMOOTH",
"301 784 OFFCURVE",
"279 776 OFFCURVE",
"252 757 CURVE",
"302 625 LINE",
"275 562 OFFCURVE",
"227 447 OFFCURVE",
"197 377 CURVE SMOOTH",
"160 292 OFFCURVE",
"124 209 OFFCURVE",
"96 146 CURVE SMOOTH",
"81 112 OFFCURVE",
"68 86 OFFCURVE",
"57 69 CURVE SMOOTH",
"46 52 OFFCURVE",
"39 41 OFFCURVE",
"34 36 CURVE",
"32 33 OFFCURVE",
"25 28 OFFCURVE",
"13 21 CURVE SMOOTH",
"0 14 OFFCURVE",
"-15 9 OFFCURVE",
"-32 7 CURVE",
"-32 -4 LINE",
"181 -4 LINE",
"181 6 LINE",
"145 12 OFFCURVE",
"98 19 OFFCURVE",
"98 54 CURVE SMOOTH",
"98 69 OFFCURVE",
"258 449 OFFCURVE",
"276 493 CURVE SMOOTH",
"294 535 OFFCURVE",
"310 567 OFFCURVE",
"318 583 CURVE",
"329 556 OFFCURVE",
"348 515 OFFCURVE",
"366 470 CURVE SMOOTH"
);
}
);
width = 704;
}
);
},
{
glyphname = ma.base.cap;
lastChange = "2021-01-11 18:53:03 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{802, -24}";
},
{
name = haa.acute;
position = "{430, -75}";
},
{
name = hee;
position = "{832, -66}";
},
{
name = hi;
position = "{792, -261}";
},
{
name = ho;
position = "{416, -20}";
},
{
name = hu;
position = "{975, 485}";
},
{
name = hwa;
position = "{803, -37}";
},
{
name = top;
position = "{1226, 725}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"354 0 LINE",
"400 70 OFFCURVE",
"434 131 OFFCURVE",
"451 208 CURVE SMOOTH",
"469 289 OFFCURVE",
"483 386 OFFCURVE",
"445 491 CURVE SMOOTH",
"433 523 OFFCURVE",
"418 552 OFFCURVE",
"401 577 CURVE",
"558 577 LINE",
"543 553 OFFCURVE",
"530 527 OFFCURVE",
"519 498 CURVE SMOOTH",
"480 393 OFFCURVE",
"495 296 OFFCURVE",
"513 214 CURVE SMOOTH",
"531 133 OFFCURVE",
"574 46 OFFCURVE",
"612 0 CURVE",
"959 0 LINE",
"959 10 LINE",
"911 12 OFFCURVE",
"871 38 OFFCURVE",
"861 58 CURVE SMOOTH",
"853 73 OFFCURVE",
"849 102 OFFCURVE",
"849 127 CURVE SMOOTH",
"849 583 LINE SMOOTH",
"849 620 OFFCURVE",
"856 647 OFFCURVE",
"861 655 CURVE SMOOTH",
"878 682 OFFCURVE",
"898 709 OFFCURVE",
"953 710 CURVE",
"953 720 LINE",
"700 720 LINE",
"660 692 OFFCURVE",
"617 656 OFFCURVE",
"581 609 CURVE",
"378 609 LINE",
"338 647 OFFCURVE",
"309 674 OFFCURVE",
"278 703 CURVE SMOOTH",
"260 720 LINE",
"47 720 LINE",
"47 710 LINE",
"71 706 OFFCURVE",
"98 699 OFFCURVE",
"117 682 CURVE SMOOTH",
"133 668 OFFCURVE",
"145 647 OFFCURVE",
"146 616 CURVE SMOOTH",
"148 550 OFFCURVE",
"146 268 OFFCURVE",
"143 214 CURVE SMOOTH",
"140 86 OFFCURVE",
"120 29 OFFCURVE",
"25 10 CURVE",
"25 0 LINE"
);
},
{
closed = 1;
nodes = (
"199 28 OFFCURVE",
"184 84 OFFCURVE",
"184 206 CURVE SMOOTH",
"184 267 OFFCURVE",
"186 536 OFFCURVE",
"186 643 CURVE",
"279 643 LINE",
"320 597 OFFCURVE",
"356 539 OFFCURVE",
"382 468 CURVE SMOOTH",
"418 367 OFFCURVE",
"422 279 OFFCURVE",
"408 201 CURVE SMOOTH",
"394 128 OFFCURVE",
"375 83 OFFCURVE",
"341 28 CURVE",
"275 28 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"590 84 OFFCURVE",
"570 132 OFFCURVE",
"555 208 CURVE SMOOTH",
"541 287 OFFCURVE",
"545 374 OFFCURVE",
"582 474 CURVE SMOOTH",
"618 577 OFFCURVE",
"682 643 OFFCURVE",
"739 700 CURVE SMOOTH",
"740 701 LINE",
"740 671 LINE",
"740 138 LINE SMOOTH",
"740 111 OFFCURVE",
"735 83 OFFCURVE",
"727 66 CURVE SMOOTH",
"715 40 OFFCURVE",
"678 24 OFFCURVE",
"627 28 CURVE"
);
}
);
width = 991;
}
);
leftMetricsKey = M;
rightMetricsKey = M;
},
{
glyphname = na.base.cap;
lastChange = "2021-01-06 21:43:53 +0000";
layers = (
{
anchors = (
{
name = gwa;
position = "{495, -40}";
},
{
name = haa.acute.cap;
position = "{477, 133}";
},
{
name = hat;
position = "{99, 886}";
},
{
name = he;
position = "{-71, 727}";
},
{
name = hee;
position = "{554, -55}";
},
{
name = hi.cap;
position = "{505, -15}";
},
{
name = ho.ring;
position = "{780, 521}";
},
{
name = hu;
position = "{681, 476}";
},
{
name = neck;
position = "{885, 700}";
},
{
name = nose.ext;
position = "{-93, 694}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"666 5 LINE",
"666 15 LINE",
"637 18 OFFCURVE",
"617 23 OFFCURVE",
"602 33 CURVE SMOOTH",
"575 52 OFFCURVE",
"565 76 OFFCURVE",
"565 98 CURVE SMOOTH",
"565 725 LINE",
"156 725 LINE",
"156 727 LINE",
"157 727 LINE",
"157 884 LINE",
"46 884 LINE",
"46 570 LINE",
"66 570 LINE",
"105 668 OFFCURVE",
"204 705 OFFCURVE",
"308 705 CURVE SMOOTH",
"382 705 OFFCURVE",
"420 693 OFFCURVE",
"441 663 CURVE SMOOTH",
"448 653 OFFCURVE",
"454 622 OFFCURVE",
"454 579 CURVE SMOOTH",
"454 103 LINE SMOOTH",
"454 76 OFFCURVE",
"444 57 OFFCURVE",
"428 44 CURVE SMOOTH",
"407 26 OFFCURVE",
"375 19 OFFCURVE",
"347 15 CURVE",
"347 5 LINE"
);
}
);
width = 716;
}
);
leftMetricsKey = I;
rightMetricsKey = I;
},
{
glyphname = pa.base.cap;
lastChange = "2021-01-06 22:26:13 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{467, -9}";
},
{
name = haa.acute.cap;
position = "{335, 129}";
},
{
name = he;
position = "{131, 31}";
},
{
name = hee;
position = "{428, -65}";
},
{
name = hi.cap;
position = "{351, -19}";
},
{
name = hu;
position = "{551, 471}";
},
{
name = hwa;
position = "{330, -27}";
},
{
name = top;
position = "{97, -204}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"525 0 LINE",
"525 10 LINE",
"495.667 15.333 OFFCURVE",
"453 22.667 OFFCURVE",
"433 52 CURVE SMOOTH",
"422.333 66.667 OFFCURVE",
"422 106.333 OFFCURVE",
"422 145 CURVE SMOOTH",
"422 387.667 OFFCURVE",
"422.167 597.333 OFFCURVE",
"422.5 626 CURVE SMOOTH",
"422.833 654.667 OFFCURVE",
"423 677.333 OFFCURVE",
"423 694 CURVE",
"460 694 OFFCURVE",
"513 693 OFFCURVE",
"550 693 CURVE SMOOTH",
"600.667 691.667 OFFCURVE",
"630 685 OFFCURVE",
"658 659 CURVE SMOOTH",
"678 640 OFFCURVE",
"723.602 571.145 OFFCURVE",
"741 532 CURVE",
"750 535 LINE",
"718 730 LINE",
"687.333 720.667 OFFCURVE",
"663 714.333 OFFCURVE",
"619 713 CURVE SMOOTH",
"571 713 OFFCURVE",
"181 711 OFFCURVE",
"119 713 CURVE SMOOTH",
"69.667 714.333 OFFCURVE",
"50.667 718.333 OFFCURVE",
"20 725 CURVE",
"-10 535 LINE",
"-1 532 LINE",
"12.135 571.405 OFFCURVE",
"58 638 OFFCURVE",
"78 656 CURVE SMOOTH",
"106 682 OFFCURVE",
"135.333 691.667 OFFCURVE",
"186 693 CURVE SMOOTH",
"235 693 OFFCURVE",
"264 694 OFFCURVE",
"313 694 CURVE",
"313 317 OFFCURVE",
"311 206 OFFCURVE",
"311 160 CURVE SMOOTH",
"311 125.855 OFFCURVE",
"309.364 65.364 OFFCURVE",
"297 53 CURVE",
"266.333 18.333 OFFCURVE",
"234.667 14 OFFCURVE",
"200 10 CURVE",
"200 0 LINE"
);
}
);
userData = {
_smart.haa.acute.cap = 1;
};
width = 737;
}
);
leftMetricsKey = T;
rightMetricsKey = T;
},
{
glyphname = ra.base.cap;
lastChange = "2021-01-06 22:48:38 +0000";
layers = (
{
anchors = (
{
name = fa;
position = "{470, 84}";
},
{
name = haa;
position = "{393, -25}";
},
{
name = haa.acute;
position = "{482, 138}";
},
{
name = hat;
position = "{179, 745}";
},
{
name = hat.left;
position = "{139, 750}";
},
{
name = he.acute;
position = "{465, -66}";
},
{
name = hee;
position = "{615, 376}";
},
{
name = ra;
position = "{556, 188}";
},
{
name = ri;
position = "{703, 168}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"676 0 LINE",
"713 206 LINE",
"703 209 LINE",
"668.987 123.968 OFFCURVE",
"635 66 OFFCURVE",
"534 30 CURVE SMOOTH",
"495 16 OFFCURVE",
"411.496 15 OFFCURVE",
"388 15 CURVE SMOOTH",
"343.926 15 OFFCURVE",
"277 27 OFFCURVE",
"266 42 CURVE SMOOTH",
"253 60 OFFCURVE",
"253 103 OFFCURVE",
"253 146 CURVE SMOOTH",
"253 223 OFFCURVE",
"253 549 OFFCURVE",
"253 622 CURVE SMOOTH",
"253 649 OFFCURVE",
"263 668 OFFCURVE",
"279 681 CURVE SMOOTH",
"300 699 OFFCURVE",
"332 706 OFFCURVE",
"360 710 CURVE",
"360 720 LINE",
"41 720 LINE",
"41 710 LINE",
"70 707 OFFCURVE",
"90 702 OFFCURVE",
"105 692 CURVE SMOOTH",
"132 673 OFFCURVE",
"141 649 OFFCURVE",
"141 627 CURVE SMOOTH",
"141 156 LINE SMOOTH",
"141 120 OFFCURVE",
"135.189 63.827 OFFCURVE",
"122 48 CURVE SMOOTH",
"103.333 26.667 OFFCURVE",
"67.333 15.333 OFFCURVE",
"34 10 CURVE",
"34 0 LINE"
);
}
);
userData = {
_smart.he.acute = 1;
};
width = 708;
}
);
leftMetricsKey = L;
rightMetricsKey = L;
},
{
glyphname = re.base.cap;
lastChange = "2021-01-11 19:25:15 +0000";
layers = (
{
anchors = (
{
name = fa;
position = "{435, 69}";
},
{
name = haa;
position = "{608, -28}";
},
{
name = hat;
position = "{422, 795}";
},
{
name = he;
position = "{159, 360}";
},
{
name = ho.ring;
position = "{592, 466}";
},
{
name = hwa;
position = "{552, -47}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"507 -20 OFFCURVE",
"564 -5 OFFCURVE",
"604 12 CURVE SMOOTH",
"631 23 OFFCURVE",
"666 45 OFFCURVE",
"668 45 CURVE SMOOTH",
"671 45 OFFCURVE",
"677 40 OFFCURVE",
"686 31 CURVE SMOOTH",
"695 22 OFFCURVE",
"703 11 OFFCURVE",
"711 0 CURVE",
"723 0 LINE",
"726 220 LINE",
"714 220 LINE",
"689 101 OFFCURVE",
"575 -4 OFFCURVE",
"442 -4 CURVE SMOOTH",
"354 -4 OFFCURVE",
"281 35 OFFCURVE",
"230 97 CURVE SMOOTH",
"179 159 OFFCURVE",
"151 245 OFFCURVE",
"151 341 CURVE SMOOTH",
"151 432 OFFCURVE",
"178 521 OFFCURVE",
"227 589 CURVE SMOOTH",
"275 657 OFFCURVE",
"348 702 OFFCURVE",
"440 702 CURVE SMOOTH",
"572 702 OFFCURVE",
"680 601 OFFCURVE",
"715 472 CURVE",
"728 473 LINE",
"728 626 LINE",
"726 626 OFFCURVE",
"632 673 OFFCURVE",
"606 684 CURVE SMOOTH",
"566 701 OFFCURVE",
"506 719 OFFCURVE",
"426 719 CURVE SMOOTH",
"264 719 OFFCURVE",
"149 649 OFFCURVE",
"87 548 CURVE SMOOTH",
"44 478 OFFCURVE",
"28 401 OFFCURVE",
"28 346 CURVE SMOOTH",
"28 238 OFFCURVE",
"67 146 OFFCURVE",
"137 82 CURVE SMOOTH",
"207 17 OFFCURVE",
"308 -20 OFFCURVE",
"432 -20 CURVE SMOOTH"
);
}
);
width = 776;
}
);
},
{
glyphname = sa.base.cap;
lastChange = "2021-01-06 21:13:33 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{677, -1}";
},
{
name = haa.acute;
position = "{409, 7}";
},
{
name = hee;
position = "{658, -58}";
},
{
name = hi;
position = "{687, -220}";
},
{
name = ho;
position = "{317, -4}";
},
{
name = hu;
position = "{1021, 489}";
},
{
name = hwa;
position = "{656, -45}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"320 -3 LINE",
"364 95 LINE",
"386.667 157.667 OFFCURVE",
"411 225.667 OFFCURVE",
"435 295 CURVE SMOOTH",
"454.63 351.708 OFFCURVE",
"487.581 443.92 OFFCURVE",
"505 494 CURVE",
"527.451 434.131 OFFCURVE",
"564.793 326.426 OFFCURVE",
"587.5 262 CURVE SMOOTH",
"616.167 180.667 OFFCURVE",
"647 93 OFFCURVE",
"683 -3 CURVE",
"693 -3 LINE",
"735 93 LINE",
"756.488 157.463 OFFCURVE",
"796.103 271.442 OFFCURVE",
"819.5 340 CURVE SMOOTH",
"842.699 407.978 OFFCURVE",
"880.474 514.264 OFFCURVE",
"899 571 CURVE SMOOTH",
"917.721 625.292 OFFCURVE",
"938.601 661.601 OFFCURVE",
"958 681 CURVE",
"960 683.667 OFFCURVE",
"966.833 688.667 OFFCURVE",
"978.5 696 CURVE SMOOTH",
"990.167 703.333 OFFCURVE",
"1004.333 708 OFFCURVE",
"1021 710 CURVE",
"1021 720 LINE",
"801 720 LINE",
"801 710 LINE",
"835.563 707.12 OFFCURVE",
"887 691.573 OFFCURVE",
"887 655 CURVE SMOOTH",
"887 648.333 OFFCURVE",
"886.333 638 OFFCURVE",
"885 624 CURVE SMOOTH",
"883.667 610 OFFCURVE",
"878.333 587.667 OFFCURVE",
"869 557 CURVE SMOOTH",
"861.667 533 OFFCURVE",
"853.5 507.167 OFFCURVE",
"844.5 479.5 CURVE SMOOTH",
"829.783 434.258 OFFCURVE",
"805.305 358.868 OFFCURVE",
"790.5 315 CURVE SMOOTH",
"777.706 277.093 OFFCURVE",
"745.394 179.92 OFFCURVE",
"736 158 CURVE",
"731.333 170.667 OFFCURVE",
"723.833 191.167 OFFCURVE",
"713.5 219.5 CURVE SMOOTH",
"695.937 267.657 OFFCURVE",
"661.917 363.706 OFFCURVE",
"639 427 CURVE SMOOTH",
"619.456 480.978 OFFCURVE",
"562 625.763 OFFCURVE",
"562 659 CURVE SMOOTH",
"562 698.223 OFFCURVE",
"626.235 705.206 OFFCURVE",
"655 710 CURVE",
"655 720 LINE",
"342 720 LINE",
"342 709 LINE",
"399.292 706.613 OFFCURVE",
"425.764 682.472 OFFCURVE",
"440 654 CURVE SMOOTH",
"458.667 615.333 OFFCURVE",
"473 577.333 OFFCURVE",
"493 524 CURVE",
"463.667 432 OFFCURVE",
"433 344.833 OFFCURVE",
"409 277.5 CURVE SMOOTH",
"390.28 224.98 OFFCURVE",
"369.399 166.397 OFFCURVE",
"364 152 CURVE",
"356.667 172 OFFCURVE",
"347 197.5 OFFCURVE",
"335 228.5 CURVE SMOOTH",
"311 290.5 OFFCURVE",
"282.833 363.667 OFFCURVE",
"255.5 437 CURVE SMOOTH",
"236.763 487.271 OFFCURVE",
"180 625.096 OFFCURVE",
"180 659 CURVE SMOOTH",
"180 699.189 OFFCURVE",
"230.739 710 OFFCURVE",
"254 710 CURVE",
"254 720 LINE",
"-28 720 LINE",
"-28 709 LINE",
"22.003 706.727 OFFCURVE",
"44.471 677.058 OFFCURVE",
"56 654 CURVE SMOOTH",
"66.43 633.139 OFFCURVE",
"86.919 581.791 OFFCURVE",
"99 549 CURVE SMOOTH",
"131 465 OFFCURVE",
"162.5 381.5 OFFCURVE",
"196.5 291.5 CURVE SMOOTH",
"224.027 218.635 OFFCURVE",
"275.492 81.94 OFFCURVE",
"308 -3 CURVE"
);
}
);
width = 991;
}
);
},
{
glyphname = ta.base.cap;
lastChange = "2021-01-06 21:39:14 +0000";
layers = (
{
anchors = (
{
name = _neck;
position = "{359, 640}";
},
{
name = haa.acute.cap;
position = "{334, 129}";
},
{
name = hat;
position = "{368, 747}";
},
{
name = he.acute;
position = "{295, 668}";
},
{
name = hee;
position = "{372, -44}";
},
{
name = hi.cap;
position = "{364, -19}";
},
{
name = ho.ring;
position = "{386, 804}";
},
{
name = hu;
position = "{553, 249}";
},
{
name = hwa;
position = "{344, -34}";
},
{
name = neck;
position = "{361, 664}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"525 0 LINE",
"525 10 LINE",
"495.667 15.333 OFFCURVE",
"453 22.667 OFFCURVE",
"433 52 CURVE SMOOTH",
"422.333 66.667 OFFCURVE",
"422 106.333 OFFCURVE",
"422 145 CURVE SMOOTH",
"422 208 OFFCURVE",
"422 357 OFFCURVE",
"423 386 CURVE SMOOTH",
"423 415 OFFCURVE",
"423 437 OFFCURVE",
"423 454 CURVE",
"460 454 OFFCURVE",
"513 453 OFFCURVE",
"550 453 CURVE SMOOTH",
"601 452 OFFCURVE",
"630 445 OFFCURVE",
"658 419 CURVE SMOOTH",
"678 400 OFFCURVE",
"691 331 OFFCURVE",
"708 292 CURVE",
"718 295 LINE",
"718 490 LINE",
"687 481 OFFCURVE",
"663 474 OFFCURVE",
"619 473 CURVE SMOOTH",
"571 473 OFFCURVE",
"181 471 OFFCURVE",
"119 473 CURVE SMOOTH",
"70 474 OFFCURVE",
"51 478 OFFCURVE",
"20 485 CURVE",
"20 295 LINE",
"32 292 LINE",
"45 331 OFFCURVE",
"68 396 OFFCURVE",
"78 416 CURVE SMOOTH",
"93 445 OFFCURVE",
"135 452 OFFCURVE",
"186 453 CURVE SMOOTH",
"235 453 OFFCURVE",
"264 454 OFFCURVE",
"313 454 CURVE",
"313 77 OFFCURVE",
"311 206 OFFCURVE",
"311 160 CURVE SMOOTH",
"311 125.855 OFFCURVE",
"309.364 65.364 OFFCURVE",
"297 53 CURVE",
"266.333 18.333 OFFCURVE",
"234.667 14 OFFCURVE",
"200 10 CURVE",
"200 0 LINE"
);
},
{
closed = 1;
nodes = (
"312 462 LINE",
"423 462 LINE",
"423 730 LINE",
"312 730 LINE"
);
}
);
width = 737;
}
);
},
{
glyphname = tha.base.cap;
lastChange = "2021-01-06 22:31:13 +0000";
layers = (
{
anchors = (
{
name = cha.cap;
position = "{545, 52}";
},
{
name = haa;
position = "{894, 2}";
},
{
name = haa.acute;
position = "{560, 4}";
},
{
name = he.acute;
position = "{494, 715}";
},
{
name = hee;
position = "{875, -65}";
},
{
name = hha.neck.cap;
position = "{581, 606}";
},
{
name = hi.cap;
position = "{915, -19}";
},
{
name = ho;
position = "{133, 2}";
},
{
name = hu;
position = "{978, 486}";
},
{
name = hwa;
position = "{904, -19}";
},
{
name = neck;
position = "{565, 618}";
},
{
name = top;
position = "{517, -229}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"726 723 LINE",
"682 625 LINE",
"659 562 OFFCURVE",
"635 494 OFFCURVE",
"611 425 CURVE SMOOTH",
"591 368 OFFCURVE",
"558 276 OFFCURVE",
"541 226 CURVE",
"519 286 OFFCURVE",
"481 394 OFFCURVE",
"459 458 CURVE SMOOTH",
"430 539 OFFCURVE",
"399 627 OFFCURVE",
"363 723 CURVE",
"353 723 LINE",
"311 627 LINE",
"290 563 OFFCURVE",
"250 449 OFFCURVE",
"227 380 CURVE SMOOTH",
"203 312 OFFCURVE",
"166 206 OFFCURVE",
"147 149 CURVE SMOOTH",
"128 95 OFFCURVE",
"107 58 OFFCURVE",
"88 39 CURVE",
"86 36 OFFCURVE",
"79 31 OFFCURVE",
"67 24 CURVE SMOOTH",
"56 17 OFFCURVE",
"42 12 OFFCURVE",
"25 10 CURVE",
"25 0 LINE",
"245 0 LINE",
"245 10 LINE",
"210 13 OFFCURVE",
"159 28 OFFCURVE",
"159 65 CURVE SMOOTH",
"159 72 OFFCURVE",
"160 82 OFFCURVE",
"161 96 CURVE SMOOTH",
"162 110 OFFCURVE",
"168 132 OFFCURVE",
"177 163 CURVE SMOOTH",
"184 187 OFFCURVE",
"192 213 OFFCURVE",
"201 241 CURVE SMOOTH",
"216 286 OFFCURVE",
"241 361 OFFCURVE",
"256 405 CURVE SMOOTH",
"268 443 OFFCURVE",
"301 540 OFFCURVE",
"310 562 CURVE",
"315 549 OFFCURVE",
"322 529 OFFCURVE",
"333 501 CURVE SMOOTH",
"350 452 OFFCURVE",
"384 356 OFFCURVE",
"407 293 CURVE SMOOTH",
"427 239 OFFCURVE",
"484 94 OFFCURVE",
"484 61 CURVE SMOOTH",
"484 22 OFFCURVE",
"420 15 OFFCURVE",
"391 10 CURVE",
"391 0 LINE",
"704 0 LINE",
"704 11 LINE",
"647 13 OFFCURVE",
"620 38 OFFCURVE",
"606 66 CURVE SMOOTH",
"587 105 OFFCURVE",
"573 143 OFFCURVE",
"553 196 CURVE",
"582 288 OFFCURVE",
"613 375 OFFCURVE",
"637 443 CURVE SMOOTH",
"656 495 OFFCURVE",
"677 554 OFFCURVE",
"682 568 CURVE",
"689 548 OFFCURVE",
"699 523 OFFCURVE",
"711 492 CURVE SMOOTH",
"735 430 OFFCURVE",
"763 356 OFFCURVE",
"791 283 CURVE SMOOTH",
"809 233 OFFCURVE",
"866 95 OFFCURVE",
"866 61 CURVE SMOOTH",
"866 21 OFFCURVE",
"815 10 OFFCURVE",
"792 10 CURVE",
"792 0 LINE",
"1074 0 LINE",
"1074 11 LINE",
"1024 13 OFFCURVE",
"1002 43 OFFCURVE",
"990 66 CURVE SMOOTH",
"980 87 OFFCURVE",
"959 138 OFFCURVE",
"947 171 CURVE SMOOTH",
"915 255 OFFCURVE",
"884 339 OFFCURVE",
"850 429 CURVE SMOOTH",
"822 501 OFFCURVE",
"771 638 OFFCURVE",
"738 723 CURVE"
);
}
);
width = 1106;
}
);
leftMetricsKey = M;
rightMetricsKey = M;
},
{
glyphname = tsa.base.cap;
lastChange = "2021-01-06 22:20:10 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{527, 2}";
},
{
name = he;
position = "{558, 623}";
},
{
name = hee;
position = "{464, -60}";
},
{
name = hi.cap;
position = "{477, -19}";
},
{
name = ho;
position = "{107, 7}";
},
{
name = hu;
position = "{644, 308}";
},
{
name = hwa;
position = "{470, -29}";
},
{
name = neck;
position = "{326, 715}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"204 -1 LINE",
"204 9 LINE",
"184 10 OFFCURVE",
"169 23 OFFCURVE",
"162 33 CURVE SMOOTH",
"153 46 OFFCURVE",
"149 56 OFFCURVE",
"149 100 CURVE SMOOTH",
"149 227 LINE SMOOTH",
"149 265 OFFCURVE",
"182 287 OFFCURVE",
"261 322 CURVE",
"304 311 OFFCURVE",
"341 300 OFFCURVE",
"363 293 CURVE SMOOTH",
"389 285 OFFCURVE",
"432 269 OFFCURVE",
"432 246 CURVE SMOOTH",
"432 106 LINE SMOOTH",
"432 52 OFFCURVE",
"430 45 OFFCURVE",
"422 35 CURVE SMOOTH",
"410 20 OFFCURVE",
"396 15 OFFCURVE",
"363 10 CURVE",
"363 0 LINE",
"636 0 LINE",
"636 10 LINE",
"595 14 OFFCURVE",
"567 27 OFFCURVE",
"551 47 CURVE SMOOTH",
"543 57 OFFCURVE",
"539 64 OFFCURVE",
"539 108 CURVE SMOOTH",
"539 260 LINE SMOOTH",
"539 317 OFFCURVE",
"493 344 OFFCURVE",
"446 370 CURVE",
"513 405 OFFCURVE",
"554 465 OFFCURVE",
"557 536 CURVE SMOOTH",
"562 673 OFFCURVE",
"503 729 OFFCURVE",
"347 731 CURVE SMOOTH",
"154 733 OFFCURVE",
"58 701 OFFCURVE",
"58 522 CURVE SMOOTH",
"58 439 OFFCURVE",
"118 371 OFFCURVE",
"190 346 CURVE SMOOTH",
"210 339 LINE",
"162 314 OFFCURVE",
"78 277 OFFCURVE",
"78 229 CURVE SMOOTH",
"78 78 LINE SMOOTH",
"78 64 OFFCURVE",
"73 43 OFFCURVE",
"63 34 CURVE SMOOTH",
"46 19 OFFCURVE",
"25 12 OFFCURVE",
"1 9 CURVE",
"1 -1 LINE"
);
},
{
closed = 1;
nodes = (
"147 702 OFFCURVE",
"247 717 OFFCURVE",
"346 713 CURVE SMOOTH",
"467 708 OFFCURVE",
"509 633 OFFCURVE",
"506 533 CURVE SMOOTH",
"504 468 OFFCURVE",
"466 417 OFFCURVE",
"403 389 CURVE",
"363 404 OFFCURVE",
"300 422 OFFCURVE",
"262 438 CURVE SMOOTH",
"194 463 OFFCURVE",
"147 503 OFFCURVE",
"147 574 CURVE SMOOTH"
);
}
);
width = 605;
}
);
},
{
glyphname = wa.base.cap;
lastChange = "2021-01-11 19:21:47 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{1116, -2}";
},
{
name = haa;
position = "{428, -14}";
},
{
name = haa.acute;
position = "{482, -30}";
},
{
name = hat;
position = "{463, 854}";
},
{
name = he.acute;
position = "{420, 797}";
},
{
name = hee;
position = "{460, -81}";
},
{
name = hi;
position = "{427, -251}";
},
{
name = ho.ring;
position = "{478, 775}";
},
{
name = hu;
position = "{996, 617}";
},
{
name = hwa;
position = "{441, -40}";
},
{
name = neck;
position = "{464, 685}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"507 -21 LINE",
"507 -20 LINE",
"527 -20 LINE SMOOTH",
"651 -20 OFFCURVE",
"752 17 OFFCURVE",
"822 82 CURVE SMOOTH",
"892 146 OFFCURVE",
"931 238 OFFCURVE",
"931 346 CURVE SMOOTH",
"931 401 OFFCURVE",
"915 478 OFFCURVE",
"872 548 CURVE SMOOTH",
"810 649 OFFCURVE",
"695 725 OFFCURVE",
"533 719 CURVE SMOOTH",
"507 718 LINE",
"507 724 LINE",
"433 724 LINE",
"433 719 LINE",
"413 719 LINE SMOOTH",
"251 719 OFFCURVE",
"136 649 OFFCURVE",
"74 548 CURVE SMOOTH",
"31 478 OFFCURVE",
"15 401 OFFCURVE",
"15 346 CURVE SMOOTH",
"15 238 OFFCURVE",
"54 146 OFFCURVE",
"124 82 CURVE SMOOTH",
"194 17 OFFCURVE",
"295 -20 OFFCURVE",
"419 -20 CURVE SMOOTH",
"433 -20 LINE",
"433 -21 LINE"
);
},
{
closed = 1;
nodes = (
"321 -4 OFFCURVE",
"268 35 OFFCURVE",
"217 97 CURVE SMOOTH",
"166 159 OFFCURVE",
"138 245 OFFCURVE",
"138 341 CURVE SMOOTH",
"138 432 OFFCURVE",
"165 521 OFFCURVE",
"214 589 CURVE SMOOTH",
"262 657 OFFCURVE",
"319 702 OFFCURVE",
"411 702 CURVE SMOOTH",
"423 702 LINE",
"423 -4 LINE",
"409 -4 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"507 702 LINE",
"519 702 LINE SMOOTH",
"611 702 OFFCURVE",
"684 657 OFFCURVE",
"732 589 CURVE SMOOTH",
"781 521 OFFCURVE",
"808 432 OFFCURVE",
"808 341 CURVE SMOOTH",
"808 245 OFFCURVE",
"780 159 OFFCURVE",
"729 97 CURVE SMOOTH",
"678 35 OFFCURVE",
"605 -4 OFFCURVE",
"517 -4 CURVE SMOOTH",
"507 -4 LINE"
);
}
);
width = 975;
}
);
leftMetricsKey = O;
rightMetricsKey = D;
},
{
glyphname = ya.base.cap;
lastChange = "2021-01-06 22:13:20 +0000";
layers = (
{
anchors = (
{
name = haa.acute.cap;
position = "{168, 129}";
},
{
name = he;
position = "{268, 497}";
},
{
name = hee;
position = "{344, 250}";
},
{
name = hi;
position = "{160, 167}";
},
{
name = hu;
position = "{691, 660}";
},
{
name = ye;
position = "{443, 97}";
},
{
name = yu;
position = "{392, 165}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"252 320.333 OFFCURVE",
"252 335 OFFCURVE",
"252 359 CURVE SMOOTH",
"252 443 LINE SMOOTH",
"252 507 OFFCURVE",
"253 571 OFFCURVE",
"254 618 CURVE SMOOTH",
"255 649 OFFCURVE",
"255 657 OFFCURVE",
"257 669 CURVE SMOOTH",
"258 677 OFFCURVE",
"260 687 OFFCURVE",
"263 703 CURVE",
"282 706 OFFCURVE",
"297 707 OFFCURVE",
"314 707 CURVE SMOOTH",
"353 707 OFFCURVE",
"389 702.667 OFFCURVE",
"421 688 CURVE SMOOTH",
"485 657.333 OFFCURVE",
"528 594.333 OFFCURVE",
"528 517 CURVE SMOOTH",
"528 433 OFFCURVE",
"481.333 360.333 OFFCURVE",
"396 331 CURVE SMOOTH",
"354.667 316.333 OFFCURVE",
"306.667 315 OFFCURVE",
"252 315 CURVE"
);
},
{
closed = 1;
nodes = (
"361 0 LINE",
"361 10 LINE",
"306.333 12.667 OFFCURVE",
"277 34 OFFCURVE",
"266 51 CURVE SMOOTH",
"253 71 OFFCURVE",
"254 101 OFFCURVE",
"253 144 CURVE SMOOTH",
"253 182 OFFCURVE",
"252 263 OFFCURVE",
"252 301 CURVE",
"306 301 LINE SMOOTH",
"359.193 301 OFFCURVE",
"444.984 308.494 OFFCURVE",
"494 326 CURVE SMOOTH",
"571.291 354.626 OFFCURVE",
"636 417.119 OFFCURVE",
"636 512 CURVE SMOOTH",
"636 592 OFFCURVE",
"592.667 652 OFFCURVE",
"534 684 CURVE SMOOTH",
"474 717.333 OFFCURVE",
"409 722 OFFCURVE",
"321 722 CURVE SMOOTH",
"276 722 LINE SMOOTH",
"258.667 722 OFFCURVE",
"240 722 OFFCURVE",
"221 722 CURVE",
"143 721 LINE",
"143 156 LINE",
"143 121 OFFCURVE",
"137.405 60.886 OFFCURVE",
"125 46 CURVE SMOOTH",
"107.667 24.667 OFFCURVE",
"74.333 15.333 OFFCURVE",
"41 10 CURVE",
"41 0 LINE"
);
}
);
userData = {
_smart.hu = 1;
};
width = 636;
}
);
},
{
glyphname = za.base.cap;
lastChange = "2021-01-06 22:10:33 +0000";
layers = (
{
anchors = (
{
name = haa;
position = "{735, 1}";
},
{
name = he.acute;
position = "{183, 735}";
},
{
name = hee;
position = "{683, -60}";
},
{
name = hi.cap;
position = "{697, -19}";
},
{
name = ho;
position = "{180, 1}";
},
{
name = hu;
position = "{861, 472}";
},
{
name = hwa;
position = "{695, 3}";
},
{
name = zha;
position = "{451, 776}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"339 0 LINE",
"339 10 LINE",
"311 13 OFFCURVE",
"278 24 OFFCURVE",
"262 47 CURVE SMOOTH",
"251 62 OFFCURVE",
"252 102 OFFCURVE",
"252 141 CURVE SMOOTH",
"252 356 LINE",
"647 356 LINE",
"647 348 OFFCURVE",
"647 154 OFFCURVE",
"647 130 CURVE SMOOTH",
"647 104 OFFCURVE",
"645 57 OFFCURVE",
"638 47 CURVE",
"627 30 OFFCURVE",
"592 14 OFFCURVE",
"543 10 CURVE",
"543 0 LINE",
"850 0 LINE",
"850 10 LINE",
"815 14 OFFCURVE",
"784 22 OFFCURVE",
"767 49 CURVE SMOOTH",
"759 61 OFFCURVE",
"757 97 OFFCURVE",
"757 136 CURVE SMOOTH",
"757 587 LINE SMOOTH",
"757 612 OFFCURVE",
"760 653 OFFCURVE",
"767 666 CURVE SMOOTH",
"782 693 OFFCURVE",
"816 706 OFFCURVE",
"848 710 CURVE",
"848 720 LINE",
"547 720 LINE",
"547 710 LINE",
"578 709 OFFCURVE",
"610 705 OFFCURVE",
"634 669 CURVE",
"645 652 OFFCURVE",
"645 621 OFFCURVE",
"647 596 CURVE SMOOTH",
"647 570 OFFCURVE",
"647 397 OFFCURVE",
"647 376 CURVE",
"252 376 LINE",
"252 383 OFFCURVE",
"252 583 OFFCURVE",
"252 630 CURVE SMOOTH",
"252 688 OFFCURVE",
"300 704 OFFCURVE",
"345 710 CURVE",
"345 720 LINE",
"47 720 LINE",
"47 710 LINE",
"82 706 OFFCURVE",
"109 698 OFFCURVE",
"128 675 CURVE SMOOTH",
"139 662 OFFCURVE",
"143 622 OFFCURVE",
"143 594 CURVE SMOOTH",
"143 551 OFFCURVE",
"143 217 OFFCURVE",
"143 156 CURVE SMOOTH",
"143 121 OFFCURVE",
"137 60 OFFCURVE",
"127 47 CURVE SMOOTH",
"111 28 OFFCURVE",
"77 15 OFFCURVE",
"44 10 CURVE",
"44 0 LINE"
);
}
);
width = 900;
}
);
leftMetricsKey = H;
rightMetricsKey = H;
},
{
export = 0;
glyphname = _number.bars;
lastChange = "2020-12-28 01:00:28 +0000";
layers = (
{
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"470 -93 LINE",
"470 -47 LINE",
"-15 -47 LINE",
"-15 -93 LINE"
);
},
{
closed = 1;
nodes = (
"474 687 LINE",
"474 733 LINE",
"-2 733 LINE",
"-2 687 LINE"
);
}
);
width = 464;
}
);
},
{
export = 0;
glyphname = _smart.aGl;
lastChange = "2021-01-11 07:41:14 +0000";
layers = (
{
anchors = (
{
name = _aGl;
position = "{8, 492}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"36 381 LINE",
"36 519 LINE",
"141 593 LINE",
"141 683 LINE",
"-46 553 LINE",
"-46 381 LINE"
);
},
{
closed = 1;
nodes = (
"-43 630 LINE",
"44 630 LINE",
"44 745 LINE",
"-43 745 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.belt;
lastChange = "2021-01-01 05:06:53 +0000";
layers = (
{
anchors = (
{
name = _belt;
position = "{7, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"182 13 LINE",
"182 59 LINE",
"-200 59 LINE",
"-200 13 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.eGl;
lastChange = "2021-01-11 07:41:54 +0000";
layers = (
{
anchors = (
{
name = _eGl;
position = "{5, 595}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"15 786 LINE",
"12 791 LINE",
"-1 795 OFFCURVE",
"-15 800 OFFCURVE",
"-43 784 CURVE",
"-43 630 LINE",
"18 630 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.fa;
lastChange = "2021-01-01 22:53:58 +0000";
layers = (
{
anchors = (
{
name = _fa;
position = "{-5, -2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"13 4 OFFCURVE",
"24 14 OFFCURVE",
"24 27 CURVE SMOOTH",
"24 219 LINE",
"-144 219 LINE",
"-144 172 LINE",
"-38 172 LINE",
"-38 9 LINE",
"0 5 LINE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.gwa;
lastChange = "2021-01-01 03:27:06 +0000";
layers = (
{
anchors = (
{
name = _gwa;
position = "{-8, 25}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"139 -201 LINE",
"139 40 LINE",
"128 65 LINE",
"114 65 LINE",
"105 20 OFFCURVE",
"76 4 OFFCURVE",
"28 14 CURVE SMOOTH",
"-61 33 LINE SMOOTH",
"-123 46 OFFCURVE",
"-156 -8 OFFCURVE",
"-171 -65 CURVE",
"-158 -65 LINE",
"-140 -18 OFFCURVE",
"-127 -8 OFFCURVE",
"-76 -19 CURVE SMOOTH",
"15 -38 LINE SMOOTH",
"44 -44 OFFCURVE",
"66.257 -30.11 OFFCURVE",
"82.968 -16.681 CURVE",
"83 -201 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.haa;
lastChange = "2021-01-01 01:57:55 +0000";
layers = (
{
anchors = (
{
name = _haa;
position = "{0, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"20 -215 OFFCURVE",
"58 -220 OFFCURVE",
"74 -203 CURVE",
"74 -22 LINE",
"4 -23 LINE",
"4 -207 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.hat;
lastChange = "2020-12-27 22:49:11 +0000";
layers = (
{
anchors = (
{
name = _hat;
position = "{-1, 654}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"104 653 LINE",
"104 699 LINE",
"-124 699 LINE",
"-124 653 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.he;
lastChange = "2021-01-01 04:21:08 +0000";
layers = (
{
anchors = (
{
name = _he;
position = "{1, 252}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"125 237 OFFCURVE",
"130 275 OFFCURVE",
"113 291 CURVE",
"-18 291 LINE",
"-17 221 LINE",
"117 221 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.hee;
lastChange = "2021-01-01 01:49:22 +0000";
layers = (
{
anchors = (
{
name = _hee;
position = "{0, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"82 -157 OFFCURVE",
"125 -116 OFFCURVE",
"125 -61 CURVE SMOOTH",
"125 -4 OFFCURVE",
"82 35 OFFCURVE",
"25 35 CURVE SMOOTH",
"-30 35 OFFCURVE",
"-75 -6 OFFCURVE",
"-75 -61 CURVE SMOOTH",
"-75 -118 OFFCURVE",
"-35 -157 OFFCURVE",
"25 -157 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-12 -127 OFFCURVE",
"-35 -98 OFFCURVE",
"-35 -61 CURVE SMOOTH",
"-35 -22 OFFCURVE",
"-11 5 OFFCURVE",
"25 5 CURVE SMOOTH",
"62 5 OFFCURVE",
"85 -24 OFFCURVE",
"85 -61 CURVE SMOOTH",
"85 -98 OFFCURVE",
"62 -127 OFFCURVE",
"25 -127 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.hi;
lastChange = "2021-01-06 19:24:31 +0000";
layers = (
{
anchors = (
{
name = _hi;
position = "{-20, 0}";
},
{
name = top;
position = "{48.95, -288.1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"152 19 OFFCURVE",
"177 43 OFFCURVE",
"177 72 CURVE SMOOTH",
"177 102 OFFCURVE",
"152 125 OFFCURVE",
"123 125 CURVE SMOOTH",
"94 125 OFFCURVE",
"69 102 OFFCURVE",
"69 72 CURVE SMOOTH",
"69 44 OFFCURVE",
"95 19 OFFCURVE",
"123 19 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.ho;
lastChange = "2021-01-06 19:09:29 +0000";
layers = (
{
anchors = (
{
name = _ho;
position = "{0, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-20 -215 OFFCURVE",
"11 -220 OFFCURVE",
"27 -203 CURVE",
"27 -23 LINE",
"-36 -23 LINE",
"-36 -207 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.hu;
lastChange = "2020-12-31 23:07:32 +0000";
layers = (
{
anchors = (
{
name = _hu;
position = "{1, 246}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-19 221 OFFCURVE",
"-14 259 OFFCURVE",
"-31 275 CURVE",
"-131 275 LINE",
"-130 205 LINE",
"-27 205 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.hwa;
lastChange = "2021-01-06 19:18:08 +0000";
layers = (
{
anchors = (
{
name = _hwa;
position = "{1, 2}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"158 -214 LINE",
"158 -63 LINE",
"147 -38 LINE",
"133 -38 LINE",
"124 -83 OFFCURVE",
"95 -99 OFFCURVE",
"47 -89 CURVE SMOOTH",
"-42 -70 LINE SMOOTH",
"-104 -57 OFFCURVE",
"-137 -111 OFFCURVE",
"-152 -168 CURVE",
"-139 -168 LINE",
"-121 -121 OFFCURVE",
"-108 -111 OFFCURVE",
"-57 -122 CURVE SMOOTH",
"34 -141 LINE SMOOTH",
"63 -147 OFFCURVE",
"85 -133 OFFCURVE",
"102 -120 CURVE",
"102 -214 LINE"
);
},
{
closed = 1;
nodes = (
"3 -101 LINE",
"65 -101 LINE",
"65 0 LINE",
"3 0 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.ka;
lastChange = "2021-01-06 22:36:29 +0000";
layers = (
{
anchors = (
{
name = _ka;
position = "{4, 491}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"126 478 LINE",
"195 521 LINE",
"6 518 LINE",
"6 657 LINE",
"-65 657 LINE",
"-65 475 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.neck;
lastChange = "2021-01-01 22:56:34 +0000";
layers = (
{
anchors = (
{
name = _neck;
position = "{-1, 470}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"3 469 OFFCURVE",
"6 469 OFFCURVE",
"7 481 CURVE SMOOTH",
"25 679 LINE",
"22 683 LINE",
"9 687 OFFCURVE",
"-6 692 OFFCURVE",
"-29 674 CURVE",
"-8 482 LINE SMOOTH",
"-7 470 OFFCURVE",
"-4 469 OFFCURVE",
"-1 469 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.ra;
lastChange = "2021-01-06 21:15:26 +0000";
layers = (
{
anchors = (
{
name = _ra;
position = "{0, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-31 151 LINE",
"-31 30 LINE",
"19 29 LINE",
"19 103 LINE",
"138 103 LINE SMOOTH",
"173 103 OFFCURVE",
"170 151 OFFCURVE",
"140 151 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.ri;
lastChange = "2021-01-06 19:11:18 +0000";
layers = (
{
anchors = (
{
name = _ri;
position = "{3, 159}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"8 427 LINE",
"-138 427 LINE",
"-138 381 LINE",
"-50 381 LINE",
"-50 239 LINE",
"8 239 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.ye;
lastChange = "2021-01-11 18:57:18 +0000";
layers = (
{
anchors = (
{
name = _ye;
position = "{3, -103}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-174 -85 LINE",
"41 -85 LINE SMOOTH",
"89 -85 OFFCURVE",
"112 -56 OFFCURVE",
"112 -24 CURVE SMOOTH",
"112 32 LINE SMOOTH",
"112 44 OFFCURVE",
"103 53 OFFCURVE",
"91 53 CURVE SMOOTH",
"52 53 LINE",
"52 -1 LINE SMOOTH",
"52 -17 OFFCURVE",
"34 -22 OFFCURVE",
"12 -22 CURVE SMOOTH",
"-175 -22 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.yu;
lastChange = "2020-12-28 21:17:15 +0000";
layers = (
{
anchors = (
{
name = _yu;
position = "{-7, -75}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"77 -94 LINE",
"77 -49 LINE",
"-114 -49 LINE",
"-114 -94 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.zha;
lastChange = "2020-12-28 02:31:29 +0000";
layers = (
{
anchors = (
{
name = _zha;
position = "{-1, 124}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"142 111 OFFCURVE",
"163 132 OFFCURVE",
"163 157 CURVE SMOOTH",
"163 182 OFFCURVE",
"142 203 OFFCURVE",
"117 203 CURVE",
"92 203 OFFCURVE",
"71 182 OFFCURVE",
"71 157 CURVE",
"71 132 OFFCURVE",
"92 111 OFFCURVE",
"117 111 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-120 114 OFFCURVE",
"-99 135 OFFCURVE",
"-99 160 CURVE SMOOTH",
"-99 185 OFFCURVE",
"-120 206 OFFCURVE",
"-145 206 CURVE SMOOTH",
"-170 206 OFFCURVE",
"-191 185 OFFCURVE",
"-191 160 CURVE SMOOTH",
"-191 135 OFFCURVE",
"-170 114 OFFCURVE",
"-145 114 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.haa.acute;
lastChange = "2021-01-06 23:11:57 +0000";
layers = (
{
anchors = (
{
name = _haa.acute;
position = "{0, 0}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"13 -161 LINE",
"13 -40 LINE",
"-37 -39 LINE",
"-37 -113 LINE",
"-147 -113 LINE SMOOTH",
"-155 -113 OFFCURVE",
"-162 -108 OFFCURVE",
"-165 -100 CURVE SMOOTH",
"-175 -73 LINE",
"-182 -73 LINE",
"-182 -161 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.hat.left;
lastChange = "2020-12-28 10:08:03 +0000";
layers = (
{
anchors = (
{
name = _hat.left;
position = "{0, 655}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"158 660 LINE",
"158 706 LINE",
"-70 706 LINE",
"-70 660 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.he.acute;
lastChange = "2021-01-06 18:59:53 +0000";
layers = (
{
anchors = (
{
name = _he.acute;
position = "{-1, 470}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"-55 449 LINE",
"-38 657 LINE",
"-41 660 LINE",
"-54 665 OFFCURVE",
"-69 669 OFFCURVE",
"-92 650 CURVE",
"-65 448 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.hi.cap;
lastChange = "2021-01-06 21:09:44 +0000";
layers = (
{
anchors = (
{
name = _hi.cap;
position = "{-20, 0}";
},
{
name = top;
position = "{48.95, -288.1}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"37 19 LINE",
"179 19 LINE",
"179 126 LINE",
"37 126 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.ho.ring;
lastChange = "2020-12-31 23:04:00 +0000";
layers = (
{
anchors = (
{
name = _ho.ring;
position = "{4, 484}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"42 438 OFFCURVE",
"83 479 OFFCURVE",
"83 534 CURVE SMOOTH",
"83 592 OFFCURVE",
"42 630 OFFCURVE",
"-16 630 CURVE SMOOTH",
"-71 630 OFFCURVE",
"-115 589 OFFCURVE",
"-115 534 CURVE SMOOTH",
"-115 476 OFFCURVE",
"-75 438 OFFCURVE",
"-16 438 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-51 471 OFFCURVE",
"-73 499 OFFCURVE",
"-73 534 CURVE SMOOTH",
"-73 572 OFFCURVE",
"-50 597 OFFCURVE",
"-16 597 CURVE SMOOTH",
"19 597 OFFCURVE",
"41 569 OFFCURVE",
"41 534 CURVE SMOOTH",
"41 499 OFFCURVE",
"19 471 OFFCURVE",
"-16 471 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.ka.cap;
lastChange = "2021-01-06 22:03:39 +0000";
layers = (
{
anchors = (
{
name = _ka.cap;
position = "{125, 465}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"126 478 LINE",
"195 521 LINE",
"54 518 LINE",
"54 657 LINE",
"-73 657 LINE",
"-76 488 LINE",
"-69 475 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.le.ring;
lastChange = "2020-12-31 23:05:42 +0000";
layers = (
{
anchors = (
{
name = _le.ring;
position = "{-1, 69}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"100 -2 OFFCURVE",
"143 39 OFFCURVE",
"143 94 CURVE SMOOTH",
"143 151 OFFCURVE",
"100 190 OFFCURVE",
"43 190 CURVE SMOOTH",
"-12 190 OFFCURVE",
"-57 149 OFFCURVE",
"-57 94 CURVE SMOOTH",
"-57 37 OFFCURVE",
"-17 -2 OFFCURVE",
"43 -2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"11 37 OFFCURVE",
"-9 62 OFFCURVE",
"-9 94 CURVE SMOOTH",
"-9 128 OFFCURVE",
"12 151 OFFCURVE",
"43 151 CURVE SMOOTH",
"75 151 OFFCURVE",
"95 126 OFFCURVE",
"95 94 CURVE SMOOTH",
"95 62 OFFCURVE",
"75 37 OFFCURVE",
"43 37 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.neck.cap;
lastChange = "2021-01-06 21:21:13 +0000";
layers = (
{
anchors = (
{
name = _neck.cap;
position = "{-1, 470}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"94 521 LINE",
"94 679 LINE SMOOTH",
"94 693 OFFCURVE",
"-20 696 OFFCURVE",
"-20 674 CURVE SMOOTH",
"-20 520 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.nose.ext;
lastChange = "2020-12-28 01:26:52 +0000";
layers = (
{
anchors = (
{
name = _nose.ext;
position = "{10, 531}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"14 347 LINE",
"47 347 LINE",
"47 536 LINE",
"14 536 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.haa.acute.cap;
lastChange = "2021-01-06 21:37:25 +0000";
layers = (
{
anchors = (
{
name = _haa.acute.cap;
position = "{-14, -32}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"13 -161 LINE",
"13 -10 LINE",
"-37 -9 LINE",
"-37 -83 LINE",
"-186 -83 LINE SMOOTH",
"-221 -83 OFFCURVE",
"-218 -161 OFFCURVE",
"-188 -161 CURVE SMOOTH"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.hat.left.aGl;
lastChange = "2020-12-28 10:03:03 +0000";
layers = (
{
anchors = (
{
name = _hat.left.aGl;
position = "{0, 660}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"119 660 LINE",
"119 706 LINE",
"-109 706 LINE",
"-109 660 LINE"
);
}
);
width = 0;
}
);
},
{
export = 0;
glyphname = _smart.hha.neck.cap;
lastChange = "2021-01-06 21:11:21 +0000";
layers = (
{
anchors = (
{
name = _neck;
position = "{-1, 470}";
}
);
layerId = "6873DD1C-7BCD-4DE2-A211-237E2294755D";
paths = (
{
closed = 1;
nodes = (
"55 441 LINE",
"55 679 LINE SMOOTH",
"55 693 OFFCURVE",
"-59 696 OFFCURVE",
"-59 674 CURVE SMOOTH",
"-59 440 LINE"
);
}
);
width = 0;
}
);
}
);
instances = (
{
interpolationWeight = 500;
interpolationWidth = 5;
instanceInterpolations = {
"6873DD1C-7BCD-4DE2-A211-237E2294755D" = 1;
};
name = Regular;
}
);
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 1;
}
